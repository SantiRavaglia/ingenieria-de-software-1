

----QUIT----(20 March 2023 11:15:29) CuisUniversity-5706.image priorSource: 4313282!

----STARTUP---- (20 March 2023 11:15:29) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-5706.image!


----QUIT----(20 March 2023 11:15:30) CuisUniversity-5706.image priorSource: 8712809!

----STARTUP---- (13 May 2023 18:34:37) as C:\Users\Santiago\Desktop\UBA\Inge1\ingenieria-de-software-1\05-MarsRover\windows64\CuisUniversity-5706.image!


Object subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRover category: 'MarsRover' stamp: 'aa 5/13/2023 18:35:01'!
Object subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

TestCase subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRover category: 'MarsRover' stamp: 'aa 5/13/2023 18:35:06'!
TestCase subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRoverTest category: 'MarsRover' stamp: 'aa 5/13/2023 18:35:10'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

Object subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRover category: 'MarsRover' stamp: 'aa 5/13/2023 18:35:17'!
Object subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRoverTest methodsFor: 'no messages' stamp: 'aa 5/13/2023 18:42:48'!
test01CreatingARoverPlacesItInAPosition

	self assert: 1@1 equals: MarsRover placeIn: 1@1 facing: #North! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 18:43:00' prior: 50603983!
test01CreatingARoverPlacesItInAPosition

	self assert: 1@1 equals: (MarsRover placeIn: 1@1 facing: #North) position! !

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/13/2023 18:43:03'!
ERROR!
!MarsRover class methodsFor: 'instance creation' stamp: 'aa 5/13/2023 18:43:11'!
placeIn: aPoint facing: aSymbol 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializePlaceIn: aPoint facing: aSymbol ! !
!MarsRover class methodsFor: 'instance creation' stamp: 'aa 5/13/2023 18:43:24' prior: 50604000!
placeIn: aPoint facing: aSymbol 
	
	^self new initializeIn: aPoint facing: aSymbol ! !

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/13/2023 18:43:26'!
ERROR!

!classDefinition: #MarsRover category: 'MarsRover' stamp: 'aa 5/13/2023 18:43:37'!
Object subclass: #MarsRover
	instanceVariableNames: 'point'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRover category: 'MarsRover' stamp: 'aa 5/13/2023 18:43:37'!
Object subclass: #MarsRover
	instanceVariableNames: 'point symbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRover methodsFor: 'initialization' stamp: 'aa 5/13/2023 18:43:37'!
initializeIn: aPoint facing: aSymbol 
	self shouldBeImplemented.
	point := aPoint.
	symbol := aSymbol.! !

!classDefinition: #MarsRover category: 'MarsRover' stamp: 'aa 5/13/2023 18:44:08'!
Object subclass: #MarsRover
	instanceVariableNames: 'point symbol position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRover category: 'MarsRover' stamp: 'aa 5/13/2023 18:44:10'!
Object subclass: #MarsRover
	instanceVariableNames: 'point symbol position direction'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRover methodsFor: 'initialization' stamp: 'aa 5/13/2023 18:44:06' prior: 50604031!
initializeIn: aPosition facing: aDirection 

	position := aPosition.
	direction := aDirection.! !

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/13/2023 18:44:10'!
ERROR!
!MarsRover methodsFor: 'getters' stamp: 'aa 5/13/2023 18:44:22'!
position
	self shouldBeImplemented.
	^position! !
!MarsRover methodsFor: 'getters' stamp: 'aa 5/13/2023 18:44:26' prior: 50604061!
position

	^position! !

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/13/2023 18:44:27'!
PASSED!

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/13/2023 18:44:27'!
PASSED!

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/13/2023 18:44:29'!
PASSED!

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/13/2023 18:44:29'!
PASSED!

Object subclass: #MarsRover
	instanceVariableNames: 'position direction'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRover category: 'MarsRover' stamp: 'aa 5/13/2023 18:44:33'!
Object subclass: #MarsRover
	instanceVariableNames: 'position direction'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 18:44:59'!
test01CreatingARoverMakesItFaceADirection

	self assert: #North equals: (MarsRover placeIn: 1@1 facing: #North) direction! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 18:45:02'!
test02CreatingARoverMakesItFaceADirection

	self assert: #North equals: (MarsRover placeIn: 1@1 facing: #North) direction! !

!methodRemoval: MarsRoverTest #test01CreatingARoverMakesItFaceADirection stamp: 'aa 5/13/2023 18:45:05'!
test01CreatingARoverMakesItFaceADirection

	self assert: #North equals: (MarsRover placeIn: 1@1 facing: #North) direction!

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/13/2023 18:45:08'!
ERROR!
!MarsRover methodsFor: 'getters' stamp: 'aa 5/13/2023 18:45:12'!
direction
	self shouldBeImplemented.
	^direction! !
!MarsRover methodsFor: 'getters' stamp: 'aa 5/13/2023 18:45:16' prior: 50604119!
direction

	^direction! !

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/13/2023 18:45:16'!
PASSED!

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/13/2023 18:45:16'!
PASSED!

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/13/2023 18:45:16'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 18:47:05'!
test03ReceivingAnEmptyCommandStringDoesNothing

	| rover |
	rover := MarsRover placeIn: 1@1 facing: #North .
	rover processCommands: '' .

	self assert: 1@1 equals: rover position .
	self assert: #North equals: rover direction! !

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/13/2023 18:47:06'!
ERROR!

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/13/2023 18:47:08'!
ERROR!

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/13/2023 18:47:11'!
ERROR!
!MarsRover methodsFor: 'actions' stamp: 'aa 5/13/2023 18:47:19'!
processCommands: aRenameMe1 
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'actions' stamp: 'aa 5/13/2023 18:47:36' prior: 50604158!
processCommands: stringCommand 
	
	! !

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/13/2023 18:47:37'!
PASSED!

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/13/2023 18:47:37'!
PASSED!

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/13/2023 18:47:37'!
PASSED!

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/13/2023 18:47:37'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 18:48:22'!
test04ReceivingAForwardCommandStringMovesItsPosition

	| rover |
	rover := MarsRover placeIn: 1@1 facing: #North .
	rover processCommands: 'f' .

	self assert: 1@2 equals: rover position .
	self assert: #North equals: rover direction! !

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/13/2023 18:48:24'!
FAILURE!
!MarsRover methodsFor: 'actions' stamp: 'aa 5/13/2023 18:49:11' prior: 50604163!
processCommands: stringCommand 
	
	stringCommand = 'f' ifTrue: [position := position + 0@1]! !

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/13/2023 18:49:12'!
ERROR!

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/13/2023 18:49:15'!
ERROR!
!MarsRover methodsFor: 'actions' stamp: 'aa 5/13/2023 18:49:58' prior: 50604195!
processCommands: stringCommand 
	
	stringCommand = 'f' ifTrue: [position := position + (0@1)]! !
!MarsRover methodsFor: 'actions' stamp: 'aa 5/13/2023 18:50:03' prior: 50604208!
processCommands: stringCommand 
	
	stringCommand = 'f' ifTrue: [position := position + (0@1)	]! !

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/13/2023 18:50:04'!
PASSED!

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/13/2023 18:50:04'!
PASSED!

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/13/2023 18:50:04'!
PASSED!

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/13/2023 18:50:04'!
PASSED!
!MarsRover methodsFor: 'actions' stamp: 'aa 5/13/2023 18:51:29' prior: 50604214!
processCommands: stringCommand 
	
	stringCommand = 'f' ifTrue: [
		direction = #North ifTrue: [position := position + (0@1)	] .
		direction = #South ifTrue: [position := position + (0@-1)	] .
		direction = #East ifTrue: [position := position + (1@0)	] .
		direction = #West ifTrue: [position := position + (-1@0)	] 
		]! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 18:51:38' prior: 50604181!
test04ReceivingAForwardCommandStringMovesItsPosition

	| rover |
	rover := MarsRover placeIn: 1@1 facing: #South .
	rover processCommands: 'f' .

	self assert: 1@2 equals: rover position .
	self assert: #North equals: rover direction! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 18:51:39' prior: 50604248!
test04ReceivingAForwardCommandStringMovesItsPosition

	| rover |
	rover := MarsRover placeIn: 1@1 facing: #South .
	rover processCommands: 'f' .

	self assert: 1@2 equals: rover position .
	self assert: #Sotuh equals: rover direction! !

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/13/2023 18:51:40'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 18:51:44' prior: 50604259!
test04ReceivingAForwardCommandStringMovesItsPosition

	| rover |
	rover := MarsRover placeIn: 1@1 facing: #South .
	rover processCommands: 'f' .

	self assert: 1@2 equals: rover position .
	self assert: #South equals: rover direction! !

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/13/2023 18:51:45'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 18:51:52' prior: 50604274!
test04ReceivingAForwardCommandStringMovesItsPosition

	| rover |
	rover := MarsRover placeIn: 1@1 facing: #South .
	rover processCommands: 'f' .

	self assert: 1@0 equals: rover position .
	self assert: #South equals: rover direction! !

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/13/2023 18:51:53'!
PASSED!

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/13/2023 18:51:53'!
PASSED!

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/13/2023 18:51:53'!
PASSED!

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/13/2023 18:51:53'!
PASSED!

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/13/2023 18:51:53'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 18:52:24'!
test04ReceivingABackwardsCommandStringMovesItsPosition

	| rover |
	rover := MarsRover placeIn: 1@1 facing: #East .
	rover processCommands: 'f' .

	self assert: 0@1 equals: rover position .
	self assert: #East equals: rover direction! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 18:52:26' prior: 50604317!
test04ReceivingABackwardsCommandStringMovesItsPosition

	| rover |
	rover := MarsRover placeIn: 1@1 facing: #East .
	rover processCommands: 'b' .

	self assert: 0@1 equals: rover position .
	self assert: #East equals: rover direction! !
!MarsRover methodsFor: 'actions' stamp: 'aa 5/13/2023 18:52:36' prior: 50604234!
processCommands: stringCommand 
	
	stringCommand = 'f' ifTrue: [
		direction = #North ifTrue: [position := position + (0@1)	] .
		direction = #South ifTrue: [position := position + (0@-1)	] .
		direction = #East ifTrue: [position := position + (1@0)	] .
		direction = #West ifTrue: [position := position + (-1@0)	] 
		] .
	
	stringCommand = 'b' ifTrue: [
		direction = #North ifTrue: [position := position + (0@1)	] .
		direction = #South ifTrue: [position := position + (0@-1)	] .
		direction = #East ifTrue: [position := position + (1@0)	] .
		direction = #West ifTrue: [position := position + (-1@0)	] 
		]! !
!MarsRover methodsFor: 'actions' stamp: 'aa 5/13/2023 18:52:48' prior: 50604338!
processCommands: stringCommand 
	
	stringCommand = 'f' ifTrue: [
		direction = #North ifTrue: [position := position + (0@1)	] .
		direction = #South ifTrue: [position := position + (0@-1)	] .
		direction = #East ifTrue: [position := position + (1@0)	] .
		direction = #West ifTrue: [position := position + (-1@0)	] 
		] .
	
	stringCommand = 'b' ifTrue: [
		direction = #North ifTrue: [position := position + (0@-1)	] .
		direction = #South ifTrue: [position := position + (0@1)	] .
		direction = #East ifTrue: [position := position + (-1@0)	] .
		direction = #West ifTrue: [position := position + (1@0)	] 
		]! !

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/13/2023 18:52:49'!
PASSED!

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/13/2023 18:52:49'!
PASSED!

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/13/2023 18:52:49'!
PASSED!

!testRun: #MarsRoverTest #test04ReceivingABackwardsCommandStringMovesItsPosition stamp: 'aa 5/13/2023 18:52:49'!
PASSED!

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/13/2023 18:52:49'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 18:53:14'!
test05ReceivingAForwardCommandStringMovesItsPosition

	| rover |
	rover := MarsRover placeIn: 1@1 facing: #South .
	rover processCommands: 'f' .

	self assert: 1@0 equals: rover position .
	self assert: #South equals: rover direction! !

!methodRemoval: MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/13/2023 18:53:16'!
test04ReceivingAForwardCommandStringMovesItsPosition

	| rover |
	rover := MarsRover placeIn: 1@1 facing: #South .
	rover processCommands: 'f' .

	self assert: 1@0 equals: rover position .
	self assert: #South equals: rover direction!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 18:53:29' prior: 50604400!
test05ReceivingAForwardCommandStringMovesItsPosition

	| rover |
	rover := MarsRover placeIn: 1@1 facing: #South .
	rover processCommands: 'b' .

	self assert: 1@0 equals: rover position .
	self assert: #South equals: rover direction! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 18:53:39'!
test04ReceivingAForwardCommandStringMovesItsPosition

	| rover |
	rover := MarsRover placeIn: 1@1 facing: #South .
	rover processCommands: 'f' .

	self assert: 1@0 equals: rover position .
	self assert: #South equals: rover direction! !

!methodRemoval: MarsRoverTest #test05ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/13/2023 18:53:41'!
test05ReceivingAForwardCommandStringMovesItsPosition

	| rover |
	rover := MarsRover placeIn: 1@1 facing: #South .
	rover processCommands: 'b' .

	self assert: 1@0 equals: rover position .
	self assert: #South equals: rover direction!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 18:53:45'!
test05ReceivingABackwardsCommandStringMovesItsPosition

	| rover |
	rover := MarsRover placeIn: 1@1 facing: #East .
	rover processCommands: 'b' .

	self assert: 0@1 equals: rover position .
	self assert: #East equals: rover direction! !

!methodRemoval: MarsRoverTest #test04ReceivingABackwardsCommandStringMovesItsPosition stamp: 'aa 5/13/2023 18:53:46'!
test04ReceivingABackwardsCommandStringMovesItsPosition

	| rover |
	rover := MarsRover placeIn: 1@1 facing: #East .
	rover processCommands: 'b' .

	self assert: 0@1 equals: rover position .
	self assert: #East equals: rover direction!

!testRun: #MarsRoverTest #test05ReceivingABackwardsCommandStringMovesItsPosition stamp: 'aa 5/13/2023 18:53:50'!
PASSED!

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/13/2023 18:53:50'!
PASSED!

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/13/2023 18:53:50'!
PASSED!

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/13/2023 18:53:50'!
PASSED!

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/13/2023 18:53:50'!
PASSED!

!testRun: #MarsRoverTest #test05ReceivingABackwardsCommandStringMovesItsPosition stamp: 'aa 5/13/2023 18:53:50'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 18:54:12'!
test05ReceivingALeftCommandStringRotatesItAnticlockwise

	| rover |
	rover := MarsRover placeIn: 1@1 facing: #East .
	rover processCommands: 'b' .

	self assert: 0@1 equals: rover position .
	self assert: #East equals: rover direction! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 18:54:28'!
test05ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise

	| rover |
	rover := MarsRover placeIn: 1@1 facing: #East .
	rover processCommands: 'b' .

	self assert: 0@1 equals: rover position .
	self assert: #East equals: rover direction! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 18:54:43' prior: 50604506!
test05ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise

	| rover |
	rover := MarsRover placeIn: 1@1 facing: #East .
	rover processCommands: 'l' .

	self assert: 0@1 equals: rover position .
	self assert: #North equals: rover direction! !
!MarsRover methodsFor: 'actions' stamp: 'aa 5/13/2023 18:55:58' prior: 50604360!
processCommands: stringCommand 
	
	stringCommand = 'f' ifTrue: [
		direction = #North ifTrue: [position := position + (0@1)	] .
		direction = #South ifTrue: [position := position + (0@-1)	] .
		direction = #East ifTrue: [position := position + (1@0)	] .
		direction = #West ifTrue: [position := position + (-1@0)	] 
		] .
	
	stringCommand = 'b' ifTrue: [
		direction = #North ifTrue: [position := position + (0@-1)	] .
		direction = #South ifTrue: [position := position + (0@1)	] .
		direction = #East ifTrue: [position := position + (-1@0)	] .
		direction = #West ifTrue: [position := position + (1@0)	] 
		] .
	
	stringCommand = 'l' ifTrue: [
		direction = #North ifTrue: [direction := #West	] .
		direction = #South ifTrue: [direction := #East	] .
		direction = #East ifTrue: [direction := #North] .
		direction = #West ifTrue: [direction := #South] 
		]! !

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/13/2023 18:56:00'!
PASSED!

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/13/2023 18:56:00'!
PASSED!

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/13/2023 18:56:00'!
PASSED!

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/13/2023 18:56:00'!
PASSED!

!testRun: #MarsRoverTest #test05ReceivingABackwardsCommandStringMovesItsPosition stamp: 'aa 5/13/2023 18:56:00'!
PASSED!

!testRun: #MarsRoverTest #test05ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise stamp: 'aa 5/13/2023 18:56:00'!
FAILURE!

!testRun: #MarsRoverTest #test05ReceivingALeftCommandStringRotatesItAnticlockwise stamp: 'aa 5/13/2023 18:56:00'!
PASSED!

!testRun: #MarsRoverTest #test05ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise stamp: 'aa 5/13/2023 18:56:00'!
FAILURE!

!methodRemoval: MarsRoverTest #test05ReceivingALeftCommandStringRotatesItAnticlockwise stamp: 'aa 5/13/2023 18:56:21'!
test05ReceivingALeftCommandStringRotatesItAnticlockwise

	| rover |
	rover := MarsRover placeIn: 1@1 facing: #East .
	rover processCommands: 'b' .

	self assert: 0@1 equals: rover position .
	self assert: #East equals: rover direction!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 18:56:24'!
test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise

	| rover |
	rover := MarsRover placeIn: 1@1 facing: #East .
	rover processCommands: 'l' .

	self assert: 0@1 equals: rover position .
	self assert: #North equals: rover direction! !

!methodRemoval: MarsRoverTest #test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise stamp: 'aa 5/13/2023 18:56:26'!
test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise

	| rover |
	rover := MarsRover placeIn: 1@1 facing: #East .
	rover processCommands: 'l' .

	self assert: 0@1 equals: rover position .
	self assert: #North equals: rover direction!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 18:56:42' prior: 50604517!
test05ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise

	| rover |
	rover := MarsRover placeIn: 1@1 facing: #East .
	rover processCommands: 'l' .

	self assert: 1@1 equals: rover position .
	self assert: #South equals: rover direction! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 18:56:57'!
test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise

	| rover |
	rover := MarsRover placeIn: 1@1 facing: #East .
	rover processCommands: 'l' .

	self assert: 1@1 equals: rover position .
	self assert: #South equals: rover direction! !

!methodRemoval: MarsRoverTest #test05ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise stamp: 'aa 5/13/2023 18:56:58'!
test05ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise

	| rover |
	rover := MarsRover placeIn: 1@1 facing: #East .
	rover processCommands: 'l' .

	self assert: 1@1 equals: rover position .
	self assert: #South equals: rover direction!

!testRun: #MarsRoverTest #test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise stamp: 'aa 5/13/2023 18:57:01'!
FAILURE!

!testRun: #MarsRoverTest #test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise stamp: 'aa 5/13/2023 18:57:01'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 18:57:06' prior: 50604633!
test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise

	| rover |
	rover := MarsRover placeIn: 1@1 facing: #East .
	rover processCommands: 'l' .

	self assert: 1@1 equals: rover position .
	self assert: #North equals: rover direction! !

!testRun: #MarsRoverTest #test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise stamp: 'aa 5/13/2023 18:57:07'!
PASSED!

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/13/2023 18:57:07'!
PASSED!

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/13/2023 18:57:07'!
PASSED!

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/13/2023 18:57:07'!
PASSED!

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/13/2023 18:57:07'!
PASSED!

!testRun: #MarsRoverTest #test05ReceivingABackwardsCommandStringMovesItsPosition stamp: 'aa 5/13/2023 18:57:07'!
PASSED!

!testRun: #MarsRoverTest #test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise stamp: 'aa 5/13/2023 18:57:07'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 18:57:24'!
test06ReceivingARightCommandStringRotatesIt90DegreesClockwise

	| rover |
	rover := MarsRover placeIn: 1@1 facing: #South .
	rover processCommands: 'l' .

	self assert: 1@1 equals: rover position .
	self assert: #West equals: rover direction! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 18:57:29'!
test07ReceivingARightCommandStringRotatesIt90DegreesClockwise

	| rover |
	rover := MarsRover placeIn: 1@1 facing: #South .
	rover processCommands: 'r' .

	self assert: 1@1 equals: rover position .
	self assert: #West equals: rover direction! !

!methodRemoval: MarsRoverTest #test06ReceivingARightCommandStringRotatesIt90DegreesClockwise stamp: 'aa 5/13/2023 18:57:30'!
test06ReceivingARightCommandStringRotatesIt90DegreesClockwise

	| rover |
	rover := MarsRover placeIn: 1@1 facing: #South .
	rover processCommands: 'l' .

	self assert: 1@1 equals: rover position .
	self assert: #West equals: rover direction!
!MarsRover methodsFor: 'actions' stamp: 'aa 5/13/2023 18:57:53' prior: 50604528!
processCommands: stringCommand 
	
	stringCommand = 'f' ifTrue: [
		direction = #North ifTrue: [position := position + (0@1)	] .
		direction = #South ifTrue: [position := position + (0@-1)	] .
		direction = #East ifTrue: [position := position + (1@0)	] .
		direction = #West ifTrue: [position := position + (-1@0)	] 
		] .
	
	stringCommand = 'b' ifTrue: [
		direction = #North ifTrue: [position := position + (0@-1)	] .
		direction = #South ifTrue: [position := position + (0@1)	] .
		direction = #East ifTrue: [position := position + (-1@0)	] .
		direction = #West ifTrue: [position := position + (1@0)	] 
		] .
	
	stringCommand = 'l' ifTrue: [
		direction = #North ifTrue: [direction := #West	] .
		direction = #South ifTrue: [direction := #East	] .
		direction = #East ifTrue: [direction := #North] .
		direction = #West ifTrue: [direction := #South] 
		] .
	
	stringCommand = 'r' ifTrue: [
		direction = #North ifTrue: [direction := #East	] .
		direction = #South ifTrue: [direction := #West	] .
		direction = #East ifTrue: [direction := #South] .
		direction = #West ifTrue: [direction := #North] 
		]! !

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/13/2023 18:57:53'!
PASSED!

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/13/2023 18:57:53'!
PASSED!

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/13/2023 18:57:53'!
PASSED!

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/13/2023 18:57:53'!
PASSED!

!testRun: #MarsRoverTest #test05ReceivingABackwardsCommandStringMovesItsPosition stamp: 'aa 5/13/2023 18:57:53'!
PASSED!

!testRun: #MarsRoverTest #test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise stamp: 'aa 5/13/2023 18:57:53'!
PASSED!

!testRun: #MarsRoverTest #test07ReceivingARightCommandStringRotatesIt90DegreesClockwise stamp: 'aa 5/13/2023 18:57:53'!
FAILURE!

!testRun: #MarsRoverTest #test07ReceivingARightCommandStringRotatesIt90DegreesClockwise stamp: 'aa 5/13/2023 18:57:53'!
FAILURE!

!testRun: #MarsRoverTest #test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise stamp: 'aa 5/13/2023 18:58:10'!
PASSED!

!testRun: #MarsRoverTest #test07ReceivingARightCommandStringRotatesIt90DegreesClockwise stamp: 'aa 5/13/2023 18:58:11'!
FAILURE!

!testRun: #MarsRoverTest #test07ReceivingARightCommandStringRotatesIt90DegreesClockwise stamp: 'aa 5/13/2023 18:58:11'!
FAILURE!
!MarsRover methodsFor: 'actions' stamp: 'aa 5/13/2023 19:00:17' prior: 50604734!
processCommands: stringCommand 
	
	stringCommand = 'f' ifTrue: [
		direction = #North ifTrue: [position := position + (0@1)	 . ^self] .
		direction = #South ifTrue: [position := position + (0@-1) . ^self	] .
		direction = #East ifTrue: [position := position + (1@0) .	 ^self] .
		direction = #West ifTrue: [position := position + (-1@0)	 . ^self] 
		] .
	
	stringCommand = 'b' ifTrue: [
		direction = #North ifTrue: [position := position + (0@-1) . ^self	] .
		direction = #South ifTrue: [position := position + (0@1) . ^self	] .
		direction = #East ifTrue: [position := position + (-1@0)	 . ^self] .
		direction = #West ifTrue: [position := position + (1@0) . ^self	] 
		] .
	
	stringCommand = 'l' ifTrue: [
		direction = #North ifTrue: [direction := #West	 . ^self] .
		direction = #South ifTrue: [direction := #East	 . ^self] .
		direction = #East ifTrue: [direction := #North . ^self] .
		direction = #West ifTrue: [direction := #South . ^self] 
		] .
	
	stringCommand = 'r' ifTrue: [
		direction = #North ifTrue: [direction := #East	 . ^self] .
		direction = #South ifTrue: [direction := #West	 . ^self] .
		direction = #East ifTrue: [direction := #South . ^self] .
		direction = #West ifTrue: [direction := #North . ^self] 
		]! !

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/13/2023 19:00:17'!
PASSED!

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/13/2023 19:00:17'!
PASSED!

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/13/2023 19:00:17'!
PASSED!

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/13/2023 19:00:17'!
PASSED!

!testRun: #MarsRoverTest #test05ReceivingABackwardsCommandStringMovesItsPosition stamp: 'aa 5/13/2023 19:00:17'!
PASSED!

!testRun: #MarsRoverTest #test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise stamp: 'aa 5/13/2023 19:00:17'!
PASSED!

!testRun: #MarsRoverTest #test07ReceivingARightCommandStringRotatesIt90DegreesClockwise stamp: 'aa 5/13/2023 19:00:17'!
PASSED!

Object subclass: #CardinalDirections
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #CardinalDirections category: 'MarsRover' stamp: 'aa 5/13/2023 19:00:57'!
Object subclass: #CardinalDirections
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

CardinalDirections subclass: #North
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #North category: 'MarsRover' stamp: 'aa 5/13/2023 19:01:05'!
CardinalDirections subclass: #North
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

CardinalDirections subclass: #South
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #South category: 'MarsRover' stamp: 'aa 5/13/2023 19:01:08'!
CardinalDirections subclass: #South
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

CardinalDirections subclass: #East
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #East category: 'MarsRover' stamp: 'aa 5/13/2023 19:01:12'!
CardinalDirections subclass: #East
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

CardinalDirections subclass: #West
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #West category: 'MarsRover' stamp: 'aa 5/13/2023 19:01:14'!
CardinalDirections subclass: #West
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!CardinalDirections class methodsFor: 'no messages' stamp: 'aa 5/13/2023 19:01:53'!
with: aCardinalDirection

	^self new InitializeWith: aCardinalDirection ! !
!CardinalDirections methodsFor: 'no messages' stamp: 'aa 5/13/2023 19:03:07'!
initializeWith: aCardinalDirection

	! !
!CardinalDirections class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:03:17' prior: 50604936!
with: aCardinalDirection

	^aCardinalDirection new! !
!East methodsFor: 'no messages' stamp: 'aa 5/13/2023 19:04:24'!
forward 

	^0@1! !
!East methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:04:30'!
backwards

	^0@-1! !
!East methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:04:42'!
left

	^East new! !
!East methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:04:45' prior: 50604956!
left

	^West new! !
!East methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:04:54'!
right

	^East new! !
!East methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:05:19' prior: 50604953!
backwards

	^1@0! !
!East methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:05:24' prior: 50604950!
forward 

	^-1@0! !
!East methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:05:38' prior: 50604960!
left

	^North new! !

!methodRemoval: CardinalDirections class #with: stamp: 'aa 5/13/2023 19:06:05'!
with: aCardinalDirection

	^aCardinalDirection new!

!methodRemoval: CardinalDirections #initializeWith: stamp: 'aa 5/13/2023 19:06:10'!
initializeWith: aCardinalDirection

	!
!North methodsFor: 'no messages' stamp: 'aa 5/13/2023 19:06:34'!
backwards

	^0@-1! !
!North methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:06:40'!
forward

	^0@1! !
!North methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:06:52'!
left

	^West new! !
!North methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:07:01'!
right

	^East new! !
!South methodsFor: 'no messages' stamp: 'aa 5/13/2023 19:07:12'!
backwards

	^0@1! !
!South methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:07:17'!
forward

	^0@-1! !
!South methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:07:20'!
left

	^0@-1! !
!South methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:07:28' prior: 50605004!
left

	^East new! !
!South methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:07:36'!
right

	^West new! !
!West methodsFor: 'no messages' stamp: 'aa 5/13/2023 19:07:47'!
backwards

	^1@0! !
!East methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:07:54' prior: 50604967!
backwards

	^-1@0! !
!East methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:07:58' prior: 50604971!
forward 

	^1@0! !
!West methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:08:13'!
forward

	^-1@0! !
!West methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:08:20'!
left

	^South new! !
!West methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:08:27'!
right

	^North new! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:08:54' prior: 50603990!
test01CreatingARoverPlacesItInAPosition

	self assert: 1@1 equals: (MarsRover placeIn: 1@1 facing: North) position! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:08:58' prior: 50604102!
test02CreatingARoverMakesItFaceADirection

	self assert: #North equals: (MarsRover placeIn: 1@1 facing: North) direction! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:09:04' prior: 50604138!
test03ReceivingAnEmptyCommandStringDoesNothing

	| rover |
	rover := MarsRover placeIn: 1@1 facing: North .
	rover processCommands: '' .

	self assert: 1@1 equals: rover position .
	self assert: #North equals: rover direction! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:09:08' prior: 50604432!
test04ReceivingAForwardCommandStringMovesItsPosition

	| rover |
	rover := MarsRover placeIn: 1@1 facing: South .
	rover processCommands: 'f' .

	self assert: 1@0 equals: rover position .
	self assert: #South equals: rover direction! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:09:13' prior: 50604453!
test05ReceivingABackwardsCommandStringMovesItsPosition

	| rover |
	rover := MarsRover placeIn: 1@1 facing: East .
	rover processCommands: 'b' .

	self assert: 0@1 equals: rover position .
	self assert: #East equals: rover direction! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:09:17' prior: 50604664!
test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise

	| rover |
	rover := MarsRover placeIn: 1@1 facing: East .
	rover processCommands: 'l' .

	self assert: 1@1 equals: rover position .
	self assert: #North equals: rover direction! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:09:19' prior: 50604712!
test07ReceivingARightCommandStringRotatesIt90DegreesClockwise

	| rover |
	rover := MarsRover placeIn: 1@1 facing: South .
	rover processCommands: 'r' .

	self assert: 1@1 equals: rover position .
	self assert: #West equals: rover direction! !
!MarsRover methodsFor: 'initialization' stamp: 'aa 5/13/2023 19:09:28' prior: 50604052!
initializeIn: aPosition facing: aDirection 

	position := aPosition.
	direction := aDirection new .! !
!MarsRover methodsFor: 'actions' stamp: 'aa 5/13/2023 19:09:43'!
processCommand: stringCommand 
	
	stringCommand = 'f' ifTrue: [
		direction = #North ifTrue: [position := position + (0@1)	 . ^self] .
		direction = #South ifTrue: [position := position + (0@-1) . ^self	] .
		direction = #East ifTrue: [position := position + (1@0) .	 ^self] .
		direction = #West ifTrue: [position := position + (-1@0)	 . ^self] 
		] .
	
	stringCommand = 'b' ifTrue: [
		direction = #North ifTrue: [position := position + (0@-1) . ^self	] .
		direction = #South ifTrue: [position := position + (0@1) . ^self	] .
		direction = #East ifTrue: [position := position + (-1@0)	 . ^self] .
		direction = #West ifTrue: [position := position + (1@0) . ^self	] 
		] .
	
	stringCommand = 'l' ifTrue: [
		direction = #North ifTrue: [direction := #West	 . ^self] .
		direction = #South ifTrue: [direction := #East	 . ^self] .
		direction = #East ifTrue: [direction := #North . ^self] .
		direction = #West ifTrue: [direction := #South . ^self] 
		] .
	
	stringCommand = 'r' ifTrue: [
		direction = #North ifTrue: [direction := #East	 . ^self] .
		direction = #South ifTrue: [direction := #West	 . ^self] .
		direction = #East ifTrue: [direction := #South . ^self] .
		direction = #West ifTrue: [direction := #North . ^self] 
		]! !
!MarsRover methodsFor: 'actions' stamp: 'aa 5/13/2023 19:09:51' prior: 50604814!
processCommands: stringCommand 
	
	! !
!MarsRover methodsFor: 'actions' stamp: 'aa 5/13/2023 19:10:45' prior: 50605110!
processCommand: stringCommand 
	
	stringCommand = 'f' ifTrue: [
		position := position + direction forward 
		] .
	
	stringCommand = 'b' ifTrue: [
		direction = #North ifTrue: [position := position + (0@-1) . ^self	] .
		direction = #South ifTrue: [position := position + (0@1) . ^self	] .
		direction = #East ifTrue: [position := position + (-1@0)	 . ^self] .
		direction = #West ifTrue: [position := position + (1@0) . ^self	] 
		] .
	
	stringCommand = 'l' ifTrue: [
		direction = #North ifTrue: [direction := #West	 . ^self] .
		direction = #South ifTrue: [direction := #East	 . ^self] .
		direction = #East ifTrue: [direction := #North . ^self] .
		direction = #West ifTrue: [direction := #South . ^self] 
		] .
	
	stringCommand = 'r' ifTrue: [
		direction = #North ifTrue: [direction := #East	 . ^self] .
		direction = #South ifTrue: [direction := #West	 . ^self] .
		direction = #East ifTrue: [direction := #South . ^self] .
		direction = #West ifTrue: [direction := #North . ^self] 
		]! !
!MarsRover methodsFor: 'actions' stamp: 'aa 5/13/2023 19:10:54' prior: 50605156!
processCommand: stringCommand 
	
	stringCommand = 'f' ifTrue: [
		position := position + direction forward 
		] .
	
	stringCommand = 'b' ifTrue: [
		position := position + direction backwards
		] .
	
	stringCommand = 'l' ifTrue: [
		direction = #North ifTrue: [direction := #West	 . ^self] .
		direction = #South ifTrue: [direction := #East	 . ^self] .
		direction = #East ifTrue: [direction := #North . ^self] .
		direction = #West ifTrue: [direction := #South . ^self] 
		] .
	
	stringCommand = 'r' ifTrue: [
		direction = #North ifTrue: [direction := #East	 . ^self] .
		direction = #South ifTrue: [direction := #West	 . ^self] .
		direction = #East ifTrue: [direction := #South . ^self] .
		direction = #West ifTrue: [direction := #North . ^self] 
		]! !
!MarsRover methodsFor: 'actions' stamp: 'aa 5/13/2023 19:11:18' prior: 50605190!
processCommand: stringCommand 
	
	stringCommand = 'f' ifTrue: [
		position := position + direction forward 
		] .
	
	stringCommand = 'b' ifTrue: [
		position := position + direction backwards
		] .
	
	stringCommand = 'l' ifTrue: [
		direction := direction left
		] .
	
	stringCommand = 'r' ifTrue: [
		direction = #North ifTrue: [direction := #East	 . ^self] .
		direction = #South ifTrue: [direction := #West	 . ^self] .
		direction = #East ifTrue: [direction := #South . ^self] .
		direction = #West ifTrue: [direction := #North . ^self] 
		]! !
!MarsRover methodsFor: 'actions' stamp: 'aa 5/13/2023 19:11:29' prior: 50605217!
processCommand: stringCommand 
	
	stringCommand = 'f' ifTrue: [
		position := position + direction forward 
		] .
	
	stringCommand = 'b' ifTrue: [
		position := position + direction backwards
		] .
	
	stringCommand = 'l' ifTrue: [
		direction := direction left
		] .
	
	stringCommand = 'r' ifTrue: [
		direction := direction right
		]! !

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/13/2023 19:11:38'!
PASSED!

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/13/2023 19:11:38'!
FAILURE!

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/13/2023 19:11:38'!
FAILURE!

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/13/2023 19:11:38'!
FAILURE!

!testRun: #MarsRoverTest #test05ReceivingABackwardsCommandStringMovesItsPosition stamp: 'aa 5/13/2023 19:11:38'!
FAILURE!

!testRun: #MarsRoverTest #test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise stamp: 'aa 5/13/2023 19:11:38'!
FAILURE!

!testRun: #MarsRoverTest #test07ReceivingARightCommandStringRotatesIt90DegreesClockwise stamp: 'aa 5/13/2023 19:11:38'!
FAILURE!

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/13/2023 19:11:42'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:12:44' prior: 50605042!
test02CreatingARoverMakesItFaceADirection

	self assert: North equals: ((MarsRover placeIn: 1@1 facing: North) direction) class! !

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/13/2023 19:12:48'!
PASSED!

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/13/2023 19:12:49'!
FAILURE!

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/13/2023 19:12:49'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:12:57' prior: 50605049!
test03ReceivingAnEmptyCommandStringDoesNothing

	| rover |
	rover := MarsRover placeIn: 1@1 facing: North .
	rover processCommands: '' .

	self assert: 1@1 equals: rover position .
	self assert: North equals: rover direction class! !

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/13/2023 19:12:58'!
PASSED!

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/13/2023 19:12:58'!
PASSED!

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/13/2023 19:12:58'!
PASSED!

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/13/2023 19:12:58'!
PASSED!

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/13/2023 19:12:58'!
FAILURE!

!testRun: #MarsRoverTest #test05ReceivingABackwardsCommandStringMovesItsPosition stamp: 'aa 5/13/2023 19:12:58'!
FAILURE!

!testRun: #MarsRoverTest #test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise stamp: 'aa 5/13/2023 19:12:58'!
FAILURE!

!testRun: #MarsRoverTest #test07ReceivingARightCommandStringRotatesIt90DegreesClockwise stamp: 'aa 5/13/2023 19:12:58'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:13:08' prior: 50605060!
test04ReceivingAForwardCommandStringMovesItsPosition

	| rover |
	rover := MarsRover placeIn: 1@1 facing: South .
	rover processCommands: 'f' .

	self assert: 1@0 equals: rover position .
	self assert: South equals: rover direction class! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:13:12' prior: 50605071!
test05ReceivingABackwardsCommandStringMovesItsPosition

	| rover |
	rover := MarsRover placeIn: 1@1 facing: East .
	rover processCommands: 'b' .

	self assert: 0@1 equals: rover position .
	self assert: East equals: rover direction class! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:13:16' prior: 50605082!
test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise

	| rover |
	rover := MarsRover placeIn: 1@1 facing: East .
	rover processCommands: 'l' .

	self assert: 1@1 equals: rover position .
	self assert: North equals: rover direction class! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:13:20' prior: 50605093!
test07ReceivingARightCommandStringRotatesIt90DegreesClockwise

	| rover |
	rover := MarsRover placeIn: 1@1 facing: South .
	rover processCommands: 'r' .

	self assert: 1@1 equals: rover position .
	self assert: West equals: rover direction class! !

!testRun: #MarsRoverTest #test07ReceivingARightCommandStringRotatesIt90DegreesClockwise stamp: 'aa 5/13/2023 19:13:21'!
FAILURE!

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/13/2023 19:13:25'!
PASSED!

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/13/2023 19:13:25'!
PASSED!

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/13/2023 19:13:25'!
PASSED!

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/13/2023 19:13:25'!
FAILURE!

!testRun: #MarsRoverTest #test05ReceivingABackwardsCommandStringMovesItsPosition stamp: 'aa 5/13/2023 19:13:25'!
FAILURE!

!testRun: #MarsRoverTest #test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise stamp: 'aa 5/13/2023 19:13:25'!
FAILURE!

!testRun: #MarsRoverTest #test07ReceivingARightCommandStringRotatesIt90DegreesClockwise stamp: 'aa 5/13/2023 19:13:25'!
FAILURE!

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/13/2023 19:13:33'!
PASSED!

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/13/2023 19:13:33'!
PASSED!

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/13/2023 19:13:33'!
PASSED!

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/13/2023 19:13:33'!
FAILURE!

!testRun: #MarsRoverTest #test05ReceivingABackwardsCommandStringMovesItsPosition stamp: 'aa 5/13/2023 19:13:33'!
FAILURE!

!testRun: #MarsRoverTest #test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise stamp: 'aa 5/13/2023 19:13:33'!
FAILURE!

!testRun: #MarsRoverTest #test07ReceivingARightCommandStringRotatesIt90DegreesClockwise stamp: 'aa 5/13/2023 19:13:33'!
FAILURE!
!MarsRover methodsFor: 'actions' stamp: 'aa 5/13/2023 19:14:02' prior: 50605237!
processCommand: stringCommand 
! !
!MarsRover methodsFor: 'actions' stamp: 'aa 5/13/2023 19:14:04' prior: 50605152!
processCommands: stringCommand 
	
		
	stringCommand = 'f' ifTrue: [
		position := position + direction forward 
		] .
	
	stringCommand = 'b' ifTrue: [
		position := position + direction backwards
		] .
	
	stringCommand = 'l' ifTrue: [
		direction := direction left
		] .
	
	stringCommand = 'r' ifTrue: [
		direction := direction right
		]! !
!MarsRover methodsFor: 'actions' stamp: 'aa 5/13/2023 19:14:06' prior: 50605444!
processCommands: stringCommand 
		
	stringCommand = 'f' ifTrue: [
		position := position + direction forward 
		] .
	
	stringCommand = 'b' ifTrue: [
		position := position + direction backwards
		] .
	
	stringCommand = 'l' ifTrue: [
		direction := direction left
		] .
	
	stringCommand = 'r' ifTrue: [
		direction := direction right
		]! !

!methodRemoval: MarsRover #processCommand: stamp: 'aa 5/13/2023 19:14:07'!
processCommand: stringCommand 
!

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/13/2023 19:14:09'!
PASSED!

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/13/2023 19:14:09'!
PASSED!

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/13/2023 19:14:09'!
PASSED!

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/13/2023 19:14:09'!
PASSED!

!testRun: #MarsRoverTest #test05ReceivingABackwardsCommandStringMovesItsPosition stamp: 'aa 5/13/2023 19:14:09'!
PASSED!

!testRun: #MarsRoverTest #test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise stamp: 'aa 5/13/2023 19:14:09'!
PASSED!

!testRun: #MarsRoverTest #test07ReceivingARightCommandStringRotatesIt90DegreesClockwise stamp: 'aa 5/13/2023 19:14:09'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:14:56'!
test08ReceivingMultipleForwardCommandStringMovesItsPositionMultipleTimes

	| rover |
	rover := MarsRover placeIn: 1@1 facing: South .
	rover processCommands: 'ffff' .

	self assert: 1@0 equals: rover position .
	self assert: South equals: rover direction class! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:15:06' prior: 50605501!
test08ReceivingMultipleForwardCommandStringMovesItsPositionMultipleTimes

	| rover |
	rover := MarsRover placeIn: 1@1 facing: East .
	rover processCommands: 'ffff' .

	self assert: 5@1 equals: rover position .
	self assert: South equals: rover direction class! !
!MarsRover methodsFor: 'actions' stamp: 'aa 5/13/2023 19:16:32' prior: 50605458!
processCommands: stringCommand 

	| commandsCollection |
	stringCommand asOrderedCollection .
				
		stringCommand = 'f' ifTrue: [
			position := position + direction forward 
			] .
		
		stringCommand = 'b' ifTrue: [
			position := position + direction backwards
			] .
		
		stringCommand = 'l' ifTrue: [
			direction := direction left
			] .
		
		stringCommand = 'r' ifTrue: [
			direction := direction right
			]! !
!MarsRover methodsFor: 'actions' stamp: 'aa 5/13/2023 19:17:58' prior: 50605524!
processCommands: stringCommand 

	| commandsCollection |
	commandsCollection := stringCommand asOrderedCollection .
	
	commandsCollection do: [:each | 
		each = 'f' ifTrue: [
			position := position + direction forward 
			] .
		
		each = 'b' ifTrue: [
			position := position + direction backwards
			] .
		
		each = 'l' ifTrue: [
			direction := direction left
			] .
		
		each = 'r' ifTrue: [
			direction := direction right
			]] .
	
		! !
!MarsRover methodsFor: 'actions' stamp: 'aa 5/13/2023 19:20:05' prior: 50605540!
processCommands: stringCommand 

	| commandsCollection |
	commandsCollection := stringCommand asOrderedCollection .
	
	commandsCollection do: [:each | 
		each = 'f' ifTrue: [
			position := position + direction forward 
			] .
		
		each = 'b' ifTrue: [
			position := position + direction backwards
			] .
		
		each = 'l' ifTrue: [
			direction := direction left
			] .
		
		each = 'r' ifTrue: [
			direction := direction right
			]
		] .
	
		! !

!testRun: #MarsRoverTest #test08ReceivingMultipleForwardCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/13/2023 19:20:10'!
FAILURE!

!testRun: #MarsRoverTest #test08ReceivingMultipleForwardCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/13/2023 19:20:10'!
FAILURE!
!MarsRover methodsFor: 'actions' stamp: 'aa 5/13/2023 19:20:46' prior: 50605557!
processCommands: stringCommand 

	| commandsCollection |
	commandsCollection := stringCommand asOrderedCollection .
	
	commandsCollection do: [:each | 
		each = $f ifTrue: [
			position := position + direction forward 
			] .
		
		each = $b ifTrue: [
			position := position + direction backwards
			] .
		
		each = $l ifTrue: [
			direction := direction left
			] .
		
		each = $r ifTrue: [
			direction := direction right
			]
		] .
	
		! !

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/13/2023 19:20:47'!
PASSED!

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/13/2023 19:20:47'!
PASSED!

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/13/2023 19:20:47'!
PASSED!

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/13/2023 19:20:47'!
PASSED!

!testRun: #MarsRoverTest #test05ReceivingABackwardsCommandStringMovesItsPosition stamp: 'aa 5/13/2023 19:20:47'!
PASSED!

!testRun: #MarsRoverTest #test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise stamp: 'aa 5/13/2023 19:20:47'!
PASSED!

!testRun: #MarsRoverTest #test07ReceivingARightCommandStringRotatesIt90DegreesClockwise stamp: 'aa 5/13/2023 19:20:47'!
PASSED!

!testRun: #MarsRoverTest #test08ReceivingMultipleForwardCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/13/2023 19:20:47'!
FAILURE!

!testRun: #MarsRoverTest #test08ReceivingMultipleForwardCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/13/2023 19:20:47'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:20:56' prior: 50605513!
test08ReceivingMultipleForwardCommandStringMovesItsPositionMultipleTimes

	| rover |
	rover := MarsRover placeIn: 1@1 facing: East .
	rover processCommands: 'ffff' .

	self assert: 5@1 equals: rover position .
	self assert: East equals: rover direction class! !

!testRun: #MarsRoverTest #test08ReceivingMultipleForwardCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/13/2023 19:20:57'!
PASSED!

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/13/2023 19:20:57'!
PASSED!

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/13/2023 19:20:57'!
PASSED!

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/13/2023 19:20:57'!
PASSED!

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/13/2023 19:20:57'!
PASSED!

!testRun: #MarsRoverTest #test05ReceivingABackwardsCommandStringMovesItsPosition stamp: 'aa 5/13/2023 19:20:57'!
PASSED!

!testRun: #MarsRoverTest #test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise stamp: 'aa 5/13/2023 19:20:57'!
PASSED!

!testRun: #MarsRoverTest #test07ReceivingARightCommandStringRotatesIt90DegreesClockwise stamp: 'aa 5/13/2023 19:20:57'!
PASSED!

!testRun: #MarsRoverTest #test08ReceivingMultipleForwardCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/13/2023 19:20:57'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:21:17'!
test09ReceivingMultipleBackwardsCommandStringMovesItsPositionMultipleTimes

	| rover |
	rover := MarsRover placeIn: 1@1 facing: East .
	rover processCommands: 'bbbbbb' .

	self assert: 5@1 equals: rover position .
	self assert: East equals: rover direction class! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:21:34' prior: 50605681!
test09ReceivingMultipleBackwardsCommandStringMovesItsPositionMultipleTimes

	| rover |
	rover := MarsRover placeIn: 1@1 facing: North .
	rover processCommands: 'bbbbbb' .

	self assert: 1@-5 equals: rover position .
	self assert: East equals: rover direction class! !

!testRun: #MarsRoverTest #test09ReceivingMultipleBackwardsCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/13/2023 19:21:35'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:21:38' prior: 50605693!
test09ReceivingMultipleBackwardsCommandStringMovesItsPositionMultipleTimes

	| rover |
	rover := MarsRover placeIn: 1@1 facing: North .
	rover processCommands: 'bbbbbb' .

	self assert: 1@-5 equals: rover position .
	self assert: North equals: rover direction class! !

!testRun: #MarsRoverTest #test09ReceivingMultipleBackwardsCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/13/2023 19:21:39'!
PASSED!

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/13/2023 19:21:39'!
PASSED!

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/13/2023 19:21:39'!
PASSED!

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/13/2023 19:21:39'!
PASSED!

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/13/2023 19:21:39'!
PASSED!

!testRun: #MarsRoverTest #test05ReceivingABackwardsCommandStringMovesItsPosition stamp: 'aa 5/13/2023 19:21:39'!
PASSED!

!testRun: #MarsRoverTest #test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise stamp: 'aa 5/13/2023 19:21:39'!
PASSED!

!testRun: #MarsRoverTest #test07ReceivingARightCommandStringRotatesIt90DegreesClockwise stamp: 'aa 5/13/2023 19:21:39'!
PASSED!

!testRun: #MarsRoverTest #test08ReceivingMultipleForwardCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/13/2023 19:21:39'!
PASSED!

!testRun: #MarsRoverTest #test09ReceivingMultipleBackwardsCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/13/2023 19:21:39'!
PASSED!

!testRun: #MarsRoverTest #test09ReceivingMultipleBackwardsCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/13/2023 19:24:11'!
PASSED!

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/13/2023 19:24:11'!
PASSED!

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/13/2023 19:24:11'!
PASSED!

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/13/2023 19:24:11'!
PASSED!

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/13/2023 19:24:11'!
PASSED!

!testRun: #MarsRoverTest #test05ReceivingABackwardsCommandStringMovesItsPosition stamp: 'aa 5/13/2023 19:24:11'!
PASSED!

!testRun: #MarsRoverTest #test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise stamp: 'aa 5/13/2023 19:24:11'!
PASSED!

!testRun: #MarsRoverTest #test07ReceivingARightCommandStringRotatesIt90DegreesClockwise stamp: 'aa 5/13/2023 19:24:11'!
PASSED!

!testRun: #MarsRoverTest #test08ReceivingMultipleForwardCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/13/2023 19:24:11'!
PASSED!

!testRun: #MarsRoverTest #test09ReceivingMultipleBackwardsCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/13/2023 19:24:11'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:24:35'!
test09ReceivingMultipleLeftCommandStringChangesItsDirectionMultipleTimes

	| rover |
	rover := MarsRover placeIn: 1@1 facing: North .
	rover processCommands: 'lllll' .

	self assert: 1@-5 equals: rover position .
	self assert: West equals: rover direction class! !

!testRun: #MarsRoverTest #test09ReceivingMultipleLeftCommandStringChangesItsDirectionMultipleTimes stamp: 'aa 5/13/2023 19:24:36'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:24:40' prior: 50605799!
test09ReceivingMultipleLeftCommandStringChangesItsDirectionMultipleTimes

	| rover |
	rover := MarsRover placeIn: 1@1 facing: North .
	rover processCommands: 'lllll' .

	self assert: 1@1 equals: rover position .
	self assert: West equals: rover direction class! !

!testRun: #MarsRoverTest #test09ReceivingMultipleLeftCommandStringChangesItsDirectionMultipleTimes stamp: 'aa 5/13/2023 19:24:40'!
PASSED!

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/13/2023 19:24:40'!
PASSED!

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/13/2023 19:24:40'!
PASSED!

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/13/2023 19:24:40'!
PASSED!

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/13/2023 19:24:40'!
PASSED!

!testRun: #MarsRoverTest #test05ReceivingABackwardsCommandStringMovesItsPosition stamp: 'aa 5/13/2023 19:24:40'!
PASSED!

!testRun: #MarsRoverTest #test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise stamp: 'aa 5/13/2023 19:24:40'!
PASSED!

!testRun: #MarsRoverTest #test07ReceivingARightCommandStringRotatesIt90DegreesClockwise stamp: 'aa 5/13/2023 19:24:40'!
PASSED!

!testRun: #MarsRoverTest #test08ReceivingMultipleForwardCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/13/2023 19:24:40'!
PASSED!

!testRun: #MarsRoverTest #test09ReceivingMultipleBackwardsCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/13/2023 19:24:40'!
PASSED!

!testRun: #MarsRoverTest #test09ReceivingMultipleLeftCommandStringChangesItsDirectionMultipleTimes stamp: 'aa 5/13/2023 19:24:40'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:24:51'!
test09ReceivingMultipleRightCommandStringChangesItsDirectionMultipleTimes

	| rover |
	rover := MarsRover placeIn: 1@1 facing: North .
	rover processCommands: 'lllll' .

	self assert: 1@1 equals: rover position .
	self assert: West equals: rover direction class! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:24:59' prior: 50605870!
test09ReceivingMultipleRightCommandStringChangesItsDirectionMultipleTimes

	| rover |
	rover := MarsRover placeIn: 1@1 facing: East .
	rover processCommands: 'rrrrrrr2r' .

	self assert: 1@1 equals: rover position .
	self assert: East equals: rover direction class! !

!testRun: #MarsRoverTest #test09ReceivingMultipleRightCommandStringChangesItsDirectionMultipleTimes stamp: 'aa 5/13/2023 19:25:00'!
PASSED!

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/13/2023 19:25:00'!
PASSED!

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/13/2023 19:25:00'!
PASSED!

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/13/2023 19:25:00'!
PASSED!

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/13/2023 19:25:00'!
PASSED!

!testRun: #MarsRoverTest #test05ReceivingABackwardsCommandStringMovesItsPosition stamp: 'aa 5/13/2023 19:25:00'!
PASSED!

!testRun: #MarsRoverTest #test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise stamp: 'aa 5/13/2023 19:25:00'!
PASSED!

!testRun: #MarsRoverTest #test07ReceivingARightCommandStringRotatesIt90DegreesClockwise stamp: 'aa 5/13/2023 19:25:00'!
PASSED!

!testRun: #MarsRoverTest #test08ReceivingMultipleForwardCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/13/2023 19:25:00'!
PASSED!

!testRun: #MarsRoverTest #test09ReceivingMultipleBackwardsCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/13/2023 19:25:00'!
PASSED!

!testRun: #MarsRoverTest #test09ReceivingMultipleLeftCommandStringChangesItsDirectionMultipleTimes stamp: 'aa 5/13/2023 19:25:00'!
PASSED!

!testRun: #MarsRoverTest #test09ReceivingMultipleRightCommandStringChangesItsDirectionMultipleTimes stamp: 'aa 5/13/2023 19:25:00'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:25:04'!
test10ReceivingMultipleLeftCommandStringChangesItsDirectionMultipleTimes

	| rover |
	rover := MarsRover placeIn: 1@1 facing: North .
	rover processCommands: 'lllll' .

	self assert: 1@1 equals: rover position .
	self assert: West equals: rover direction class! !

!methodRemoval: MarsRoverTest #test09ReceivingMultipleLeftCommandStringChangesItsDirectionMultipleTimes stamp: 'aa 5/13/2023 19:25:05'!
test09ReceivingMultipleLeftCommandStringChangesItsDirectionMultipleTimes

	| rover |
	rover := MarsRover placeIn: 1@1 facing: North .
	rover processCommands: 'lllll' .

	self assert: 1@1 equals: rover position .
	self assert: West equals: rover direction class!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:25:09'!
test11ReceivingMultipleRightCommandStringChangesItsDirectionMultipleTimes

	| rover |
	rover := MarsRover placeIn: 1@1 facing: East .
	rover processCommands: 'rrrrrrr2r' .

	self assert: 1@1 equals: rover position .
	self assert: East equals: rover direction class! !

!methodRemoval: MarsRoverTest #test11ReceivingMultipleRightCommandStringChangesItsDirectionMultipleTimes stamp: 'aa 5/13/2023 19:25:11'!
test11ReceivingMultipleRightCommandStringChangesItsDirectionMultipleTimes

	| rover |
	rover := MarsRover placeIn: 1@1 facing: East .
	rover processCommands: 'rrrrrrr2r' .

	self assert: 1@1 equals: rover position .
	self assert: East equals: rover direction class!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:25:19' prior: 50605882!
test09ReceivingMultipleRightCommandStringChangesItsDirectionMultipleTimes

	| rover |
	rover := MarsRover placeIn: 1@1 facing: East .
	rover processCommands: 'rrrrrrrr' .

	self assert: 1@1 equals: rover position .
	self assert: East equals: rover direction class! !
!MarsRover methodsFor: 'actions' stamp: 'aa 5/13/2023 19:34:44' prior: 50605583!
processCommands: stringCommand 
	
	stringCommand asOrderedCollection do: [:each | 
		each = $f ifTrue: [
			position := position + direction forward 
			] .
		
		each = $b ifTrue: [
			position := position + direction backwards
			] .
		
		each = $l ifTrue: [
			direction := direction left
			] .
		
		each = $r ifTrue: [
			direction := direction right
			]
		
		] .
	
		! !

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/13/2023 19:34:44'!
PASSED!

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/13/2023 19:34:44'!
PASSED!

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/13/2023 19:34:44'!
PASSED!

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/13/2023 19:34:44'!
PASSED!

!testRun: #MarsRoverTest #test05ReceivingABackwardsCommandStringMovesItsPosition stamp: 'aa 5/13/2023 19:34:44'!
PASSED!

!testRun: #MarsRoverTest #test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise stamp: 'aa 5/13/2023 19:34:44'!
PASSED!

!testRun: #MarsRoverTest #test07ReceivingARightCommandStringRotatesIt90DegreesClockwise stamp: 'aa 5/13/2023 19:34:44'!
PASSED!

!testRun: #MarsRoverTest #test08ReceivingMultipleForwardCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/13/2023 19:34:44'!
PASSED!

!testRun: #MarsRoverTest #test09ReceivingMultipleBackwardsCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/13/2023 19:34:44'!
PASSED!

!testRun: #MarsRoverTest #test09ReceivingMultipleRightCommandStringChangesItsDirectionMultipleTimes stamp: 'aa 5/13/2023 19:34:44'!
PASSED!

!testRun: #MarsRoverTest #test10ReceivingMultipleLeftCommandStringChangesItsDirectionMultipleTimes stamp: 'aa 5/13/2023 19:34:44'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:35:10'!
test11ReceivingMultipleRightCommandStringChangesItsDirectionMultipleTimes

	| rover |
	rover := MarsRover placeIn: 1@1 facing: East .
	rover processCommands: 'rrrrrrrr' .

	self assert: 1@1 equals: rover position .
	self assert: East equals: rover direction class! !

!methodRemoval: MarsRoverTest #test09ReceivingMultipleRightCommandStringChangesItsDirectionMultipleTimes stamp: 'aa 5/13/2023 19:35:11'!
test09ReceivingMultipleRightCommandStringChangesItsDirectionMultipleTimes

	| rover |
	rover := MarsRover placeIn: 1@1 facing: East .
	rover processCommands: 'rrrrrrrr' .

	self assert: 1@1 equals: rover position .
	self assert: East equals: rover direction class!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:35:53'!
test12ReceivingAnInvalidCommandStopsTheExecution

	| rover |
	rover := MarsRover placeIn: 1@1 facing: East .
	rover processCommands: 'rrrrrrrr' .

	self assert: 1@1 equals: rover position .
	self assert: East equals: rover direction class! !
!MarsRover methodsFor: 'actions' stamp: 'aa 5/13/2023 19:37:41' prior: 50606001!
processCommands: stringCommand 
	
	| validCommand |
	
	stringCommand asOrderedCollection do: [:each | 
		validCommand := false .
		each = $f ifTrue: [
			position := position + direction forward 
			] .
		
		each = $b ifTrue: [
			position := position + direction backwards
			] .
		
		each = $l ifTrue: [
			direction := direction left
			] .
		
		each = $r ifTrue: [
			direction := direction right
			] .
		
		validCommand ifFalse: [MarsRover invalidCommandError]
		
		] .
	
		! !
!MarsRover class methodsFor: 'instance creation' stamp: 'aa 5/13/2023 19:38:01'!
invalidCommandError

	self error: ''! !
!MarsRover methodsFor: 'actions' stamp: 'aa 5/13/2023 19:38:13' prior: 50606094!
processCommands: stringCommand 
	
	| validCommand |
	
	stringCommand asOrderedCollection do: [:each | 
		validCommand := false .
		each = $f ifTrue: [
			position := position + direction forward 
			] .
		
		each = $b ifTrue: [
			position := position + direction backwards
			] .
		
		each = $l ifTrue: [
			direction := direction left
			] .
		
		each = $r ifTrue: [
			direction := direction right
			] .
		
		validCommand ifFalse: [MarsRover invalidCommandError: each]
		
		] .
	
		! !
!MarsRover class methodsFor: 'instance creation' stamp: 'aa 5/13/2023 19:39:07'!
invalidCommandError: invalidCommand

	self error: (invalidCommand, ' is not a valid command!!')! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:46:23' prior: 50606083!
test12ReceivingAnInvalidCommandStopsTheExecution

	| rover |
	rover := MarsRover placeIn: 1@1 facing: East .
	self assert: 't is not a valid command!!' equals: (rover processCommands: 'rrrrtrr').
! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:47:46' prior: 50606141!
test12ReceivingAnInvalidCommandStopsTheExecution

	| rover |
	rover := MarsRover placeIn: 1@1 facing: East .
	self assert: 't is not a valid command!!' equals: (rover processCommands: 'rrrrtrr') messageText .
! !

!testRun: #MarsRoverTest #test12ReceivingAnInvalidCommandStopsTheExecution stamp: 'aa 5/13/2023 19:47:48'!
ERROR!
!MarsRover class methodsFor: 'instance creation' stamp: 'aa 5/13/2023 19:57:53' prior: 50606134!
invalidCommandError: invalidCommand

	self error: (invalidCommand asString, ' is not a valid command!!')! !

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/13/2023 19:57:54'!
PASSED!

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/13/2023 19:57:54'!
PASSED!

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/13/2023 19:57:54'!
PASSED!

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/13/2023 19:57:54'!
ERROR!

!testRun: #MarsRoverTest #test05ReceivingABackwardsCommandStringMovesItsPosition stamp: 'aa 5/13/2023 19:57:55'!
ERROR!

!testRun: #MarsRoverTest #test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise stamp: 'aa 5/13/2023 19:57:55'!
ERROR!

!testRun: #MarsRoverTest #test07ReceivingARightCommandStringRotatesIt90DegreesClockwise stamp: 'aa 5/13/2023 19:57:55'!
ERROR!

!testRun: #MarsRoverTest #test08ReceivingMultipleForwardCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/13/2023 19:57:55'!
ERROR!

!testRun: #MarsRoverTest #test09ReceivingMultipleBackwardsCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/13/2023 19:57:55'!
ERROR!

!testRun: #MarsRoverTest #test10ReceivingMultipleLeftCommandStringChangesItsDirectionMultipleTimes stamp: 'aa 5/13/2023 19:57:55'!
ERROR!

!testRun: #MarsRoverTest #test11ReceivingMultipleRightCommandStringChangesItsDirectionMultipleTimes stamp: 'aa 5/13/2023 19:57:55'!
ERROR!

!testRun: #MarsRoverTest #test12ReceivingAnInvalidCommandStopsTheExecution stamp: 'aa 5/13/2023 19:57:55'!
ERROR!
!MarsRover class methodsFor: 'instance creation' stamp: 'aa 5/13/2023 19:58:20' prior: 50606112!
invalidCommandError

	self error: 'Invalid command received'! !

!methodRemoval: MarsRover class #invalidCommandError: stamp: 'aa 5/13/2023 19:58:22'!
invalidCommandError: invalidCommand

	self error: (invalidCommand asString, ' is not a valid command!!')!
!MarsRover methodsFor: 'actions' stamp: 'aa 5/13/2023 19:58:29' prior: 50606116!
processCommands: stringCommand 
	
	| validCommand |
	
	stringCommand asOrderedCollection do: [:each | 
		validCommand := false .
		each = $f ifTrue: [
			position := position + direction forward 
			] .
		
		each = $b ifTrue: [
			position := position + direction backwards
			] .
		
		each = $l ifTrue: [
			direction := direction left
			] .
		
		each = $r ifTrue: [
			direction := direction right
			] .
		
		validCommand ifFalse: [MarsRover invalidCommandError]
		
		] .
	
		! !

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/13/2023 19:58:30'!
PASSED!

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/13/2023 19:58:30'!
PASSED!

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/13/2023 19:58:30'!
PASSED!

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/13/2023 19:58:30'!
ERROR!

!testRun: #MarsRoverTest #test05ReceivingABackwardsCommandStringMovesItsPosition stamp: 'aa 5/13/2023 19:58:30'!
ERROR!

!testRun: #MarsRoverTest #test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise stamp: 'aa 5/13/2023 19:58:30'!
ERROR!

!testRun: #MarsRoverTest #test07ReceivingARightCommandStringRotatesIt90DegreesClockwise stamp: 'aa 5/13/2023 19:58:30'!
ERROR!

!testRun: #MarsRoverTest #test08ReceivingMultipleForwardCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/13/2023 19:58:30'!
ERROR!

!testRun: #MarsRoverTest #test09ReceivingMultipleBackwardsCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/13/2023 19:58:30'!
ERROR!

!testRun: #MarsRoverTest #test10ReceivingMultipleLeftCommandStringChangesItsDirectionMultipleTimes stamp: 'aa 5/13/2023 19:58:30'!
ERROR!

!testRun: #MarsRoverTest #test11ReceivingMultipleRightCommandStringChangesItsDirectionMultipleTimes stamp: 'aa 5/13/2023 19:58:30'!
ERROR!

!testRun: #MarsRoverTest #test12ReceivingAnInvalidCommandStopsTheExecution stamp: 'aa 5/13/2023 19:58:30'!
ERROR!
!MarsRover methodsFor: 'actions' stamp: 'aa 5/13/2023 19:58:51' prior: 50606230!
processCommands: stringCommand 
	
	| validCommand |
	
	stringCommand asOrderedCollection do: [:each | 
		validCommand := false .
		each = $f ifTrue: [
			position := position + direction forward .
			validCommand := true
			] .
		
		each = $b ifTrue: [
			position := position + direction backwards.
			validCommand := true
			] .
		
		each = $l ifTrue: [
			direction := direction left.
			validCommand := true
			] .
		
		each = $r ifTrue: [
			direction := direction right.
			validCommand := true
			] .
		
		validCommand ifFalse: [MarsRover invalidCommandError]
		
		] .
	
		! !

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/13/2023 19:58:53'!
PASSED!

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/13/2023 19:58:53'!
PASSED!

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/13/2023 19:58:53'!
PASSED!

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/13/2023 19:58:53'!
PASSED!

!testRun: #MarsRoverTest #test05ReceivingABackwardsCommandStringMovesItsPosition stamp: 'aa 5/13/2023 19:58:53'!
PASSED!

!testRun: #MarsRoverTest #test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise stamp: 'aa 5/13/2023 19:58:53'!
PASSED!

!testRun: #MarsRoverTest #test07ReceivingARightCommandStringRotatesIt90DegreesClockwise stamp: 'aa 5/13/2023 19:58:53'!
PASSED!

!testRun: #MarsRoverTest #test08ReceivingMultipleForwardCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/13/2023 19:58:53'!
PASSED!

!testRun: #MarsRoverTest #test09ReceivingMultipleBackwardsCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/13/2023 19:58:53'!
PASSED!

!testRun: #MarsRoverTest #test10ReceivingMultipleLeftCommandStringChangesItsDirectionMultipleTimes stamp: 'aa 5/13/2023 19:58:53'!
PASSED!

!testRun: #MarsRoverTest #test11ReceivingMultipleRightCommandStringChangesItsDirectionMultipleTimes stamp: 'aa 5/13/2023 19:58:53'!
PASSED!

!testRun: #MarsRoverTest #test12ReceivingAnInvalidCommandStopsTheExecution stamp: 'aa 5/13/2023 19:58:53'!
ERROR!

!testRun: #MarsRoverTest #test12ReceivingAnInvalidCommandStopsTheExecution stamp: 'aa 5/13/2023 19:58:53'!
ERROR!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:59:07' prior: 50606151!
test12ReceivingAnInvalidCommandStopsTheExecution

	| rover |
	rover := MarsRover placeIn: 1@1 facing: East .
	self assert: 't is not a valid command!!' equals: (rover processCommands: 'rrrrtrr') message .
! !

!testRun: #MarsRoverTest #test12ReceivingAnInvalidCommandStopsTheExecution stamp: 'aa 5/13/2023 19:59:07'!
ERROR!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:59:41' prior: 50606368!
test12ReceivingAnInvalidCommandStopsTheExecution

	| rover |
	rover := MarsRover placeIn: 1@1 facing: East .
	self assert: 'Invalid command received' equals: (rover processCommands: 'rrrrtrr') message .
! !

!testRun: #MarsRoverTest #test12ReceivingAnInvalidCommandStopsTheExecution stamp: 'aa 5/13/2023 19:59:41'!
ERROR!

!testRun: #MarsRoverTest #test12ReceivingAnInvalidCommandStopsTheExecution stamp: 'aa 5/13/2023 19:59:53'!
ERROR!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 19:59:59' prior: 50606382!
test12ReceivingAnInvalidCommandStopsTheExecution

	| rover |
	rover := MarsRover placeIn: 1@1 facing: East .
	self assert: 'Invalid command received' equals: (rover processCommands: 'rtrr') message .
! !

!testRun: #MarsRoverTest #test12ReceivingAnInvalidCommandStopsTheExecution stamp: 'aa 5/13/2023 20:00:12'!
ERROR!

!testRun: #MarsRoverTest #test12ReceivingAnInvalidCommandStopsTheExecution stamp: 'aa 5/13/2023 20:00:53'!
ERROR!

!testRun: #SmalltalkCompleterTest #test000_AutocompletesMessagesFor_GlobalVariables_WithSelectorsFromTheirClasses stamp: 'aa 5/13/2023 20:02:26'!
FAILURE!

!testRun: #SmalltalkCompleterTest #test001_AutocompletesMessagesFor_Self_WithSelectorsFromTheBrowsedClass stamp: 'aa 5/13/2023 20:02:26'!
FAILURE!

!testRun: #SmalltalkCompleterTest #test002_AutocompletesMessagesFor_Super_WithSelectorsFromTheBrowsedClass stamp: 'aa 5/13/2023 20:02:26'!
FAILURE!

!testRun: #SmalltalkCompleterTest #test003_AutocompletesMessagesFor_Super_WithSelectorsForUnknownClassesWhenTheBrowsedClassDoesNotHaveASuperclass stamp: 'aa 5/13/2023 20:02:26'!
FAILURE!

!testRun: #SmalltalkCompleterTest #test004_AutocompletesMessagesFor_True_WithSelectorsFromTrue stamp: 'aa 5/13/2023 20:02:26'!
FAILURE!

!testRun: #SmalltalkCompleterTest #test005_AutocompletesMessagesFor_False_WithSelectorsFromFalse stamp: 'aa 5/13/2023 20:02:26'!
FAILURE!

!testRun: #SmalltalkCompleterTest #test006_AutocompletesMessagesFor_Nil_WithSelectorsFromUndefinedObject stamp: 'aa 5/13/2023 20:02:26'!
FAILURE!

!testRun: #SmalltalkCompleterTest #test007_AutocompletesMessagesFor_Characters_WithSelectorsFromCharacter stamp: 'aa 5/13/2023 20:02:26'!
FAILURE!

!testRun: #SmalltalkCompleterTest #test008_AutocompletesMessagesFor_Numbers_WithSelectorsFromTheirClass stamp: 'aa 5/13/2023 20:02:26'!
FAILURE!

!testRun: #SmalltalkCompleterTest #test009_AutocompletesMessagesFor_Strings_WithSelectorsFromString stamp: 'aa 5/13/2023 20:02:26'!
FAILURE!

!testRun: #SmalltalkCompleterTest #test010_AutocompletesMessagesFor_Symbols_WithSelectorsFromSymbol stamp: 'aa 5/13/2023 20:02:26'!
FAILURE!

!testRun: #SmalltalkCompleterTest #test011_AutocompletesMessagesFor_StringSymbol_WithSelectorsFromSymbol stamp: 'aa 5/13/2023 20:02:26'!
FAILURE!

!testRun: #SmalltalkCompleterTest #test012_AutocompletesMessagesFor_InstanceVariables stamp: 'aa 5/13/2023 20:02:26'!
PASSED!

!testRun: #SmalltalkCompleterTest #test013_AutocompletesMessagesFor_MethodArguments_WithSelectorsForUnknownClasses stamp: 'aa 5/13/2023 20:02:27'!
PASSED!

!testRun: #SmalltalkCompleterTest #test014_AutocompletesMessagesFor_TemporaryVariables_WithSelectorsForUnknownClasses stamp: 'aa 5/13/2023 20:02:27'!
PASSED!

!testRun: #SmalltalkCompleterTest #test015_AutocompletesMessagesFor_BlockArguments_WithSelectorsForUnknownClasses stamp: 'aa 5/13/2023 20:02:27'!
PASSED!

!testRun: #SmalltalkCompleterTest #test016_AutocompletesMessagesFor_BlockTemporaryVariables_WithSelectorsForUnknownClasses stamp: 'aa 5/13/2023 20:02:28'!
PASSED!

!testRun: #SmalltalkCompleterTest #test017_AutocompletesMessagesFor_NilWorkspaceVariables_WithSelectorsForUnknownClasses stamp: 'aa 5/13/2023 20:02:28'!
PASSED!

!testRun: #SmalltalkCompleterTest #test017_AutocompletesMessagesFor_NonNilWorkspaceVariables_WithSelectorsFromTheirClasses stamp: 'aa 5/13/2023 20:02:28'!
FAILURE!

!testRun: #SmalltalkCompleterTest #test018_AutocompletesMessagesFor_ThisContext_WithSelectorsFromMethodContext stamp: 'aa 5/13/2023 20:02:28'!
FAILURE!

!testRun: #SmalltalkCompleterTest #test019_AutocompletesMessagesFor_ClassVariables_WithSelectorsFromTheirClasses stamp: 'aa 5/13/2023 20:02:28'!
FAILURE!

!testRun: #SmalltalkCompleterTest #test020_AutocompletesMessagesFor_PoolConstants_WithSelectorsFromTheirClasses stamp: 'aa 5/13/2023 20:02:28'!
FAILURE!

!testRun: #SmalltalkCompleterTest #test021_AutocompletesMessagesFor_BlockEndings_WithSelectorsFromBlockClosure stamp: 'aa 5/13/2023 20:02:28'!
FAILURE!

!testRun: #SmalltalkCompleterTest #test022_AutocompletesMessagesFor_ArrayEnds_WithSelectorsFromArray stamp: 'aa 5/13/2023 20:02:28'!
FAILURE!

!testRun: #SmalltalkCompleterTest #test023_AutocompletesMessagesFor_RightBraces_WithSelectorsFromArray stamp: 'aa 5/13/2023 20:02:28'!
FAILURE!

!testRun: #SmalltalkCompleterTest #test023_AutocompletingMessagesFor_UnaryMessages stamp: 'aa 5/13/2023 20:02:28'!
FAILURE!

!testRun: #SmalltalkCompleterTest #test024_AutocompletingMessagesFor_RightParenthesis stamp: 'aa 5/13/2023 20:02:28'!
FAILURE!

!testRun: #SmalltalkCompleterTest #test025_AutocompletesMessagesFor_UnknownIdentifiers_WithSelectorsForUnknownClasses stamp: 'aa 5/13/2023 20:02:28'!
PASSED!

!testRun: #SmalltalkCompleterTest #test026_AutocompletingMessagesFor_Cascade stamp: 'aa 5/13/2023 20:02:28'!
FAILURE!

!testRun: #SmalltalkCompleterTest #test027_AutocompletesEntriesFor_GlobalVariables_WithIdentifiersBegginingWithThem stamp: 'aa 5/13/2023 20:02:28'!
PASSED!

!testRun: #SmalltalkCompleterTest #test028_AutocompletesEntriesFor_PoolConstants_WithIdentifiersBegginingWithThem stamp: 'aa 5/13/2023 20:02:29'!
PASSED!

!testRun: #SmalltalkCompleterTest #test029_AutocompletesEntriesFor_WorkspaceVariables_WithIdentifiersBegginingWithThem stamp: 'aa 5/13/2023 20:02:29'!
PASSED!

!testRun: #SmalltalkCompleterTest #test030_AutocompletesEntriesFor_ClassVariables_WithIdentifiersBegginingWithThem stamp: 'aa 5/13/2023 20:02:29'!
PASSED!

!testRun: #SmalltalkCompleterTest #test031_AutocompletesEntriesFor_InstanceVariables_WithIdentifiersBegginingWithThem stamp: 'aa 5/13/2023 20:02:29'!
PASSED!

!testRun: #SmalltalkCompleterTest #test032_AutocompletesEntriesFor_MethodArguments_WithIdentifiersBegginingWithThem stamp: 'aa 5/13/2023 20:02:29'!
PASSED!

!testRun: #SmalltalkCompleterTest #test033_AutocompletesEntriesFor_TemporaryVariables_WithIdentifiersBegginingWithThem stamp: 'aa 5/13/2023 20:02:29'!
PASSED!

!testRun: #SmalltalkCompleterTest #test034_AutocompletesEntriesFor_BlockArguments_WithIdentifiersBegginingWithThem stamp: 'aa 5/13/2023 20:02:29'!
PASSED!

!testRun: #SmalltalkCompleterTest #test035_AutocompletesEntriesFor_BlockTemporaryVariables_WithIdentifiersBegginingWithThem stamp: 'aa 5/13/2023 20:02:29'!
PASSED!

!testRun: #SmalltalkCompleterTest #test036_AutocompletesEntriesFor_IncompleteIdentifiers_WithIdentifiersBegginingWithThem stamp: 'aa 5/13/2023 20:02:29'!
PASSED!

!testRun: #SmalltalkCompleterTest #test037_AutocompletesEntriesFor_ReservedNames_WithIdentifiersBegginingWithThem stamp: 'aa 5/13/2023 20:02:29'!
PASSED!

!testRun: #SmalltalkCompleterTest #test038_DoesNotAutocompleteEntriesFor_UndefinedIdentifiers stamp: 'aa 5/13/2023 20:02:29'!
PASSED!

!testRun: #SmalltalkCompleterTest #test039_AutocompletesEntriesFor_BinaryMessages_WithIdentifiersBegginingWithThem stamp: 'aa 5/13/2023 20:02:29'!
PASSED!

!testRun: #SmalltalkCompleterTest #test040_AutocompletesEntriesFor_IncompleteBinaryMessages_WithIdentifiersBegginingWithThem stamp: 'aa 5/13/2023 20:02:29'!
PASSED!

!testRun: #SmalltalkCompleterTest #test041_AutocompletesEntriesFor_UnaryMessages_WithIdentifiersBegginingWithThem stamp: 'aa 5/13/2023 20:02:29'!
PASSED!

!testRun: #SmalltalkCompleterTest #test042_AutocompletesEntriesFor_IncompleteUnaryMessages_WithIdentifiersBegginingWithThem stamp: 'aa 5/13/2023 20:02:29'!
PASSED!

!testRun: #SmalltalkCompleterTest #test043_AutocompletesEntriesFor_KeywordMessages_WithIdentifiersBegginingWithThem stamp: 'aa 5/13/2023 20:02:29'!
PASSED!

!testRun: #SmalltalkCompleterTest #test044_AutocompletesEntriesFor_IncompleteKeywordMessages_WithIdentifiersBegginingWithThem stamp: 'aa 5/13/2023 20:02:29'!
PASSED!

!testRun: #SmalltalkCompleterTest #testMessages stamp: 'aa 5/13/2023 20:02:29'!
PASSED!

!testRun: #MethodReferenceTest #test01DefaultStringVersionIsClassAndSelector stamp: 'aa 5/13/2023 20:02:29'!
PASSED!

!testRun: #MethodReferenceTest #test02CanPrefixStringVersion stamp: 'aa 5/13/2023 20:02:29'!
PASSED!

!testRun: #MethodReferenceTest #testActualClassIfAbsentEvaluatesBlockIfClassDoesNotExist stamp: 'aa 5/13/2023 20:02:29'!
PASSED!

!testRun: #MethodReferenceTest #testActualClassIfAbsentReturnsClassIfClassExists stamp: 'aa 5/13/2023 20:02:29'!
PASSED!

!testRun: #MethodReferenceTest #testActualClassReturnNilWhenClassDoesNotExist stamp: 'aa 5/13/2023 20:02:29'!
PASSED!

!testRun: #MethodReferenceTest #testActualClassReturnsClassIfExists stamp: 'aa 5/13/2023 20:02:29'!
PASSED!

!testRun: #MethodReferenceTest #testCompiledMethodIfAbsentEvaluatesAbsentBlockWhenActualClassIsNil stamp: 'aa 5/13/2023 20:02:29'!
PASSED!

!testRun: #MethodReferenceTest #testCompiledMethodIfAbsentEvaluatesAbsentBlockWhenSelectorIsNotImplemented stamp: 'aa 5/13/2023 20:02:29'!
PASSED!

!testRun: #MethodReferenceTest #testCompiledMethodIfAbsentReturnsImplementedMethodWhenItExists stamp: 'aa 5/13/2023 20:02:29'!
PASSED!

!testRun: #MethodReferenceTest #testReferencesParameterAtReturnsFalseWhenInvalid stamp: 'aa 5/13/2023 20:02:29'!
PASSED!

!testRun: #MethodReferenceTest #testReferencesParameterAtReturnsTrueWhenTheParameterIsReferenced stamp: 'aa 5/13/2023 20:02:29'!
PASSED!

!testRun: #MethodReferenceTest #testSourceCodeIfAbsentEvaluatesBlockIfClassDoesNotExist stamp: 'aa 5/13/2023 20:02:29'!
PASSED!

!testRun: #MethodReferenceTest #testSourceCodeIfAbsentEvaluatesBlockIfMethodDoesNotExist stamp: 'aa 5/13/2023 20:02:29'!
PASSED!

!testRun: #MethodReferenceTest #testSourceCodeIfAbsentReturnsSourceCodeIfExists stamp: 'aa 5/13/2023 20:02:29'!
PASSED!

!testRun: #MethodReferenceTest #testSourceCodeReturnsSourceCodeIfMethodExist stamp: 'aa 5/13/2023 20:02:29'!
PASSED!

!testRun: #MethodReferenceTest #testSourceCodeSignalExceptionIfClassDoesNotExist stamp: 'aa 5/13/2023 20:02:29'!
PASSED!

!testRun: #MethodReferenceTest #testSourceCodeSignalExceptionIfMethodDoesNotExist stamp: 'aa 5/13/2023 20:02:29'!
PASSED!

!testRun: #ChangesTest #test01AddingAClassShouldBeLogged stamp: 'aa 5/13/2023 20:02:29'!
PASSED!

!classRemoval: #LogChangesTestClass__ stamp: 'aa 5/13/2023 20:02:29'!
RefactoringClassTestData subclass: #LogChangesTestClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ChangesTest #test01ScanNewClassChange stamp: 'aa 5/13/2023 20:02:29'!
PASSED!

!classRemoval: #LogChangesTestClass__ stamp: 'aa 5/13/2023 20:02:30'!
RefactoringClassTestData subclass: #LogChangesTestClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ChangesTest #test02AddingANewMethodShouldBeLogged stamp: 'aa 5/13/2023 20:02:30'!
PASSED!

!classRemoval: #LogChangesTestClass__ stamp: 'aa 5/13/2023 20:02:30'!
RefactoringClassTestData subclass: #LogChangesTestClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ChangesTest #test02ScanNewMethodChange stamp: 'aa 5/13/2023 20:02:30'!
PASSED!

!classRemoval: #LogChangesTestClass__ stamp: 'aa 5/13/2023 20:02:31'!
RefactoringClassTestData subclass: #LogChangesTestClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ChangesTest #test03ChangingAMethodShouldBeLogged stamp: 'aa 5/13/2023 20:02:31'!
PASSED!

!classRemoval: #LogChangesTestClass__ stamp: 'aa 5/13/2023 20:02:31'!
RefactoringClassTestData subclass: #LogChangesTestClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ChangesTest #test03ScanMethodModifiedChange stamp: 'aa 5/13/2023 20:02:31'!
PASSED!

!classRemoval: #LogChangesTestClass__ stamp: 'aa 5/13/2023 20:02:32'!
RefactoringClassTestData subclass: #LogChangesTestClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ChangesTest #test04RemovingAMethodShouldBeLogged stamp: 'aa 5/13/2023 20:02:32'!
PASSED!

!classRemoval: #LogChangesTestClass__ stamp: 'aa 5/13/2023 20:02:32'!
RefactoringClassTestData subclass: #LogChangesTestClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ChangesTest #test04ScanMethodRemovalChange stamp: 'aa 5/13/2023 20:02:32'!
PASSED!

!classRemoval: #LogChangesTestClass__ stamp: 'aa 5/13/2023 20:02:33'!
RefactoringClassTestData subclass: #LogChangesTestClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ChangesTest #test05RemovingAClassShouldBeLogged stamp: 'aa 5/13/2023 20:02:33'!
PASSED!

!testRun: #ChangesTest #test05ScanClassRemovalChange stamp: 'aa 5/13/2023 20:02:34'!
PASSED!

!testRun: #ChangesTest #test06RenamingAClassShouldBeLogged stamp: 'aa 5/13/2023 20:02:34'!
PASSED!

!classRemoval: #NewTestClass__ stamp: 'aa 5/13/2023 20:02:34'!
RefactoringClassTestData subclass: #NewTestClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ChangesTest #test06ScanClassRenamedChange stamp: 'aa 5/13/2023 20:02:35'!
PASSED!

!classRemoval: #NewTestClass__ stamp: 'aa 5/13/2023 20:02:35'!
RefactoringClassTestData subclass: #NewTestClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ChangesTest #testDataClassName stamp: 'aa 5/13/2023 20:02:35'!
PASSED!

!testRun: #TestChangesTest #testDataClassName stamp: 'aa 5/13/2023 20:02:35'!
PASSED!

!classDefinition: #ClassWithoutInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:35'!
RefactoringClassTestData subclass: #ClassWithoutInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameInstanceVariableTest #test01CanNotRenameAnInstanceVariableNotDefinedInClass stamp: 'aa 5/13/2023 20:02:36'!
PASSED!

!classRemoval: #ClassWithoutInstVar stamp: 'aa 5/13/2023 20:02:36'!
RefactoringClassTestData subclass: #ClassWithoutInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:36'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameInstanceVariableTest #test02NewVariableNameCanNotBeEmpty stamp: 'aa 5/13/2023 20:02:36'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'aa 5/13/2023 20:02:36'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:36'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameInstanceVariableTest #test03NewVariableNameCanNotContainBlanks stamp: 'aa 5/13/2023 20:02:36'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'aa 5/13/2023 20:02:36'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:36'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameInstanceVariableTest #test04NewVariableNameCanNotContainInvalidCharacters stamp: 'aa 5/13/2023 20:02:37'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'aa 5/13/2023 20:02:37'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:37'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameInstanceVariableTest #test05ValidNewVariableNameGetBlanksTrimmed stamp: 'aa 5/13/2023 20:02:37'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'aa 5/13/2023 20:02:37'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:37'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameInstanceVariableTest #test06NewVariableNameCanNotBeDefinedInClass stamp: 'aa 5/13/2023 20:02:37'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'aa 5/13/2023 20:02:38'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SuperclassWithInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:38'!
RefactoringClassTestData subclass: #SuperclassWithInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:38'!
SuperclassWithInstVar subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameInstanceVariableTest #test07NewVariableNameCanNotBeDefinedInSuperclasses stamp: 'aa 5/13/2023 20:02:38'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'aa 5/13/2023 20:02:38'!
SuperclassWithInstVar subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #SuperclassWithInstVar stamp: 'aa 5/13/2023 20:02:38'!
RefactoringClassTestData subclass: #SuperclassWithInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:38'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SubclassWithInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:38'!
ClassToRenameInstVar subclass: #SubclassWithInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameInstanceVariableTest #test08NewVariableNameCanNotBeDefinedInAnySubclass stamp: 'aa 5/13/2023 20:02:38'!
PASSED!

!classRemoval: #SubclassWithInstVar stamp: 'aa 5/13/2023 20:02:39'!
ClassToRenameInstVar subclass: #SubclassWithInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRenameInstVar stamp: 'aa 5/13/2023 20:02:39'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:39'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:39'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameInstanceVariableTest #test09RenameCreatesNewInstanceVariableAndDeletesOldOne stamp: 'aa 5/13/2023 20:02:39'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'aa 5/13/2023 20:02:39'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:39'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameInstVar methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:02:39'!
m1 ^old! !

!classDefinition: #ClassToRenameInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:39'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameInstVar methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:02:39' prior: 50607221!
m1 ^new! !

!testRun: #RenameInstanceVariableTest #test10ReadReferencesToOldVariableAreRenamed stamp: 'aa 5/13/2023 20:02:39'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'aa 5/13/2023 20:02:40'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:40'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameInstVar methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:02:40'!
m1 old := 10! !

!classDefinition: #ClassToRenameInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:40'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameInstVar methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:02:40' prior: 50607258!
m1 new := 10! !

!testRun: #RenameInstanceVariableTest #test11WriteReferencesToOldVariableAreRenamed stamp: 'aa 5/13/2023 20:02:40'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'aa 5/13/2023 20:02:40'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:40'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SubclassWithInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:40'!
ClassToRenameInstVar subclass: #SubclassWithInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!SubclassWithInstVar methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:02:40'!
m1 old := 10. ^old! !

!classDefinition: #ClassToRenameInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:40'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!SubclassWithInstVar methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:02:40' prior: 50607304!
m1 new := 10. ^new! !

!testRun: #RenameInstanceVariableTest #test12ReferencesInSubclassesAreRenamed stamp: 'aa 5/13/2023 20:02:40'!
PASSED!

!classRemoval: #SubclassWithInstVar stamp: 'aa 5/13/2023 20:02:41'!
ClassToRenameInstVar subclass: #SubclassWithInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRenameInstVar stamp: 'aa 5/13/2023 20:02:41'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:41'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old keep'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameInstVar methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:02:41'!
m1 keep := old. ^keep! !

!classDefinition: #ClassToRenameInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:41'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new keep'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameInstVar methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:02:41' prior: 50607348!
m1 keep := new. ^keep! !

!testRun: #RenameInstanceVariableTest #test13ReferencesToOtherVariablesAreNotRenamed stamp: 'aa 5/13/2023 20:02:41'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'aa 5/13/2023 20:02:41'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new keep'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:41'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:41'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameInstanceVariableTest #test14NewVariableOfExistingInstancesReferToOldVariableValue stamp: 'aa 5/13/2023 20:02:41'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'aa 5/13/2023 20:02:41'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:42'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameInstVar methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:02:42'!
m1 | new | new := 10.! !

!testRun: #RenameInstanceVariableTest #test15FailsWhenNewVariableEqualsTemporaryVariableOfAMethodInClass stamp: 'aa 5/13/2023 20:02:42'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'aa 5/13/2023 20:02:42'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:42'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameInstVar methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:02:42'!
m1:new! !

!testRun: #RenameInstanceVariableTest #test16FailsWhenNewVariableEqualsArgumentOfAMethodInClass stamp: 'aa 5/13/2023 20:02:42'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'aa 5/13/2023 20:02:42'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:42'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameInstVar methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:02:42'!
m1 [ :new | ] value: 1! !

!testRun: #RenameInstanceVariableTest #test17FailsWhenNewVariableEqualsArgumentOfABlockInAMethodInClass stamp: 'aa 5/13/2023 20:02:42'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'aa 5/13/2023 20:02:43'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:43'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameInstVar methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:02:43'!
m1 [ | new | ] value! !

!testRun: #RenameInstanceVariableTest #test18FailsWhenNewVariableEqualsTemporaryOfABlockInAMethodInClass stamp: 'aa 5/13/2023 20:02:43'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'aa 5/13/2023 20:02:43'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:43'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SubclassOfClassToRefactor category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:43'!
ClassToRenameInstVar subclass: #SubclassOfClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!SubclassOfClassToRefactor methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:02:43'!
m1 | new | ! !

!testRun: #RenameInstanceVariableTest #test19FailsWhenNewVariableIsHiddenInAnyMethodOfAnySubclass stamp: 'aa 5/13/2023 20:02:43'!
PASSED!

!classRemoval: #SubclassOfClassToRefactor stamp: 'aa 5/13/2023 20:02:44'!
ClassToRenameInstVar subclass: #SubclassOfClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRenameInstVar stamp: 'aa 5/13/2023 20:02:44'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:44'!
Object subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:44'!
Object subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameInstVar class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:02:44' overrides: 16814263!
wantsChangeSetLogging ^false! !

!testRun: #RenameInstanceVariableTest #test20ClassChangeIsAddedWhenRenamingAnInstanceVariable stamp: 'aa 5/13/2023 20:02:44'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'aa 5/13/2023 20:02:44'!
Object subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #DebuggerTest #testCategoriesAreAddedSortedByAndSeparatedByClass stamp: 'aa 5/13/2023 20:02:44'!
PASSED!

!testRun: #DebuggerTest #testMetaclassCategoriesIncludesInstanceCreation stamp: 'aa 5/13/2023 20:02:44'!
PASSED!

!testRun: #ClosureCompilerTest #testBlockDoitDecompilation stamp: 'aa 5/13/2023 20:02:44'!
PASSED!

!testRun: #ClosureCompilerTest #testBlockNumbering stamp: 'aa 5/13/2023 20:02:44'!
PASSED!

!testRun: #ClosureCompilerTest #testBlockNumberingForInjectInto stamp: 'aa 5/13/2023 20:02:44'!
PASSED!

!testRun: #ClosureCompilerTest #testDebuggerTempAccess stamp: 'aa 5/13/2023 20:02:44'!
PASSED!

!testRun: #ClosureCompilerTest #testInjectIntoDecompilationsEncoderForV3PlusClosures stamp: 'aa 5/13/2023 20:02:44'!
PASSED!

!testRun: #ClosureCompilerTest #testInjectIntoDecompiledDebugs stamp: 'aa 5/13/2023 20:02:44'!
PASSED!

!testRun: #ClosureCompilerTest #testInlineBlockCollectionEM1 stamp: 'aa 5/13/2023 20:02:44'!
PASSED!

!testRun: #ClosureCompilerTest #testInlineBlockCollectionLR1 stamp: 'aa 5/13/2023 20:02:44'!
PASSED!

!testRun: #ClosureCompilerTest #testInlineBlockCollectionLR2 stamp: 'aa 5/13/2023 20:02:44'!
PASSED!

!testRun: #ClosureCompilerTest #testInlineBlockCollectionLR3 stamp: 'aa 5/13/2023 20:02:44'!
PASSED!

!testRun: #ClosureCompilerTest #testInlineBlockCollectionSD1 stamp: 'aa 5/13/2023 20:02:44'!
PASSED!

!testRun: #ClosureCompilerTest #testSourceRangeAccessForClosureBytecodeInjectInto stamp: 'aa 5/13/2023 20:02:44'!
PASSED!

!testRun: #ClosureCompilerTest #testSourceRangeAccessForInjectInto stamp: 'aa 5/13/2023 20:02:44'!
PASSED!

!testRun: #ClosureCompilerTest #testTempNameAccessForInjectInto stamp: 'aa 5/13/2023 20:02:44'!
PASSED!

!testRun: #TestCaseTest #testAssertChangesByPassesWhenActionChangesConditionByTheSpecifiedAmount stamp: 'aa 5/13/2023 20:02:44'!
PASSED!

!testRun: #TestCaseTest #testAssertChangesFromToPassesWhenActionChangesConditionFromAndToTheSpecifiedValues stamp: 'aa 5/13/2023 20:02:44'!
PASSED!

!testRun: #TestCaseTest #testAssertChangesPassesWhenConditionIsAlteredByAction stamp: 'aa 5/13/2023 20:02:44'!
PASSED!

!testRun: #TestCaseTest #testAssertDoeNotChangePassesWhenConditionIsNotAlteredByAction stamp: 'aa 5/13/2023 20:02:44'!
PASSED!

!testRun: #TestCaseTest #testAssertIncludesFailsWhenElementIsNotIncludedInCollection stamp: 'aa 5/13/2023 20:02:44'!
PASSED!

!testRun: #TestCaseTest #testAssertIncludesShouldNotFailWhenElementIsInCollection stamp: 'aa 5/13/2023 20:02:44'!
PASSED!

!testRun: #TestCaseTest #testAssertIsCloseToPassesForSameNumberDifferentToZero stamp: 'aa 5/13/2023 20:02:44'!
PASSED!

!testRun: #TestCaseTest #testAssertIsCloseToPassesWhenBothAreZero stamp: 'aa 5/13/2023 20:02:44'!
PASSED!

!testRun: #TestCaseTest #testAssertIsCloseToPassesWithSameCalculatedNumber stamp: 'aa 5/13/2023 20:02:44'!
PASSED!

!testRun: #TestCaseTest #testAssertIsCloseToWithPrecisionPassesWhenDifferenceIsNegativeAndLessThanPrecision stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #TestCaseTest #testAssertIsCloseToWithPrecisionPassesWhenDifferenceIsPositiveAndLessThanPrecision stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #TestCaseTest #testAssertIsNotCloseWithPrecisionPassesWhenDifferenceIsBiggerThanPrecision stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #TestCaseTest #testIsTestCase stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #TestCaseTest #testShouldFailErrorsWhenNoErrorIsSignaled stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #TestCaseTest #testShouldFailPassesWhenAnErrorIsSignaled stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #TestCaseTest #testShouldNotTakeMoreThanFailsWhenClosureTakesMoreThanTheLimit stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #TestCaseTest #testShouldNotTakeMoreThanPassesWhenClosureTakesLessThanTheLimit stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #TestCaseTest #testShouldRaiseWithExceptionDoCanExpectException stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #TestCaseTest #testShouldRaiseWithExceptionDoFailsWhenNoExceptionIsSignaled stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #TestCaseTest #testShouldRaiseWithExceptionDoFailsWhenOtherExceptionTypeIsSignaled stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #TestCaseTest #testShouldRaiseWithExceptionDoPassSignaledExceptionToAssertionsBlock stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #TestCaseTest #testShouldRaiseWithExceptionDoValuesAssertionsBlockWhenExceptionIsRaised stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #TestCaseTest #testShouldRaiseWithMessageTextDoesNotFailWithRightMessageText stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #TestCaseTest #testShouldRaiseWithMessageTextFailsWithDifferentMessageText stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #TestCaseTest #testShoulndFailErrorsWhenAnErrorIsSignaled stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #TestCaseTest #testShoulndFailPassesWhenNoErrorIsSignaled stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #test01readFromWithEmptyStringRaisesAnError stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #test02readFromWithInvalidStringRaisesAnError stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashLnLn stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashLnLp stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashLnSn stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashLnSp stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashLpLn stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashLpLp stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashLpSn stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashLpSp stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashSnLn stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashSnLp stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashSnSn stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashSnSp stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashSpLn stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashSpLp stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashSpSn stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashSpSp stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testBenchFib stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testBigReceiverInexactNthRoot stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testBigReceiverInexactSqrt stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testBitAt stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testBitLogic stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testBitReversal stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testBitReversalCorrectClass stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testCrossSumBase stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testDifferentBases stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testDivLnLn stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testDivLnLp stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testDivLnSn stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testDivLnSp stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testDivLpLn stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testDivLpLp stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testDivLpSn stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testDivLpSp stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testDivSnLn stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testDivSnLp stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testDivSnSn stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testDivSnSp stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testDivSpLn stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testDivSpLp stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testDivSpSn stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testDivSpSp stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testEven stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testExactRaisedTo stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testExactSqrt stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testFloorLog stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testFloorLogExactness stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testGCDAndLCM stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testGCDExample stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testGCDProperties stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testHighBit stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testHighBitOfMagnitude stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testIntegerDivision stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testIntegerPadding stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testIntegerReadFrom stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testIsInteger stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testIsPowerOfTwo stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testIsPowerOfTwoM6873 stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testIsPrime stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testIsProbablyPrime stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testLCMExample stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testLCMProperties stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testLargePrimesUpTo stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testLn stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testLog stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testLowBit stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testModLnLn stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testModLnLp stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testModLnSn stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testModLnSp stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testModLpLn stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testModLpLp stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testModLpSn stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testModLpSp stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testModSnLn stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testModSnLp stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testModSnSn stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testModSnSp stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testModSpLn stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testModSpLp stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testModSpSn stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testModSpSp stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testMontgomeryMultiplication stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testNegativeIntegerPrinting stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testNew stamp: 'aa 5/13/2023 20:02:45'!
ERROR!

!testRun: #IntegerTest #testNew stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testNthRoot stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testNthRootErrorConditions stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testNthRootExactness stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testNthRootExactnessForHugeValue stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testNthRootImmuneToDoubleRounding stamp: 'aa 5/13/2023 20:02:45'!
PASSED!

!testRun: #IntegerTest #testNthRootTruncated stamp: 'aa 5/13/2023 20:02:46'!
PASSED!

!testRun: #IntegerTest #testNumberOfDigits stamp: 'aa 5/13/2023 20:02:46'!
PASSED!

!testRun: #IntegerTest #testPositiveIntegerPrinting stamp: 'aa 5/13/2023 20:02:46'!
PASSED!

!testRun: #IntegerTest #testPrimesUpTo stamp: 'aa 5/13/2023 20:02:46'!
PASSED!

!testRun: #IntegerTest #testPrintOnBaseShowRadix stamp: 'aa 5/13/2023 20:02:46'!
PASSED!

!testRun: #IntegerTest #testPrintStringBase stamp: 'aa 5/13/2023 20:02:46'!
PASSED!

!testRun: #IntegerTest #testQuoLnLn stamp: 'aa 5/13/2023 20:02:46'!
PASSED!

!testRun: #IntegerTest #testQuoLnLp stamp: 'aa 5/13/2023 20:02:46'!
PASSED!

!testRun: #IntegerTest #testQuoLnSn stamp: 'aa 5/13/2023 20:02:46'!
PASSED!

!testRun: #IntegerTest #testQuoLnSp stamp: 'aa 5/13/2023 20:02:46'!
PASSED!

!testRun: #IntegerTest #testQuoLpLn stamp: 'aa 5/13/2023 20:02:46'!
PASSED!

!testRun: #IntegerTest #testQuoLpLp stamp: 'aa 5/13/2023 20:02:46'!
PASSED!

!testRun: #IntegerTest #testQuoLpSn stamp: 'aa 5/13/2023 20:02:46'!
PASSED!

!testRun: #IntegerTest #testQuoLpSp stamp: 'aa 5/13/2023 20:02:46'!
PASSED!

!testRun: #IntegerTest #testQuoRem stamp: 'aa 5/13/2023 20:02:46'!
PASSED!

!testRun: #IntegerTest #testQuoSnLn stamp: 'aa 5/13/2023 20:02:46'!
PASSED!

!testRun: #IntegerTest #testQuoSnLp stamp: 'aa 5/13/2023 20:02:46'!
PASSED!

!testRun: #IntegerTest #testQuoSnSn stamp: 'aa 5/13/2023 20:02:46'!
PASSED!

!testRun: #IntegerTest #testQuoSnSp stamp: 'aa 5/13/2023 20:02:46'!
PASSED!

!testRun: #IntegerTest #testQuoSpLn stamp: 'aa 5/13/2023 20:02:46'!
PASSED!

!testRun: #IntegerTest #testQuoSpLp stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #IntegerTest #testQuoSpSn stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #IntegerTest #testQuoSpSp stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #IntegerTest #testRaisedToModulo stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #IntegerTest #testRange stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #IntegerTest #testReadFrom stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #IntegerTest #testRemLnLn stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #IntegerTest #testRemLnLp stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #IntegerTest #testRemLnSn stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #IntegerTest #testRemLnSp stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #IntegerTest #testRemLpLn stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #IntegerTest #testRemLpLp stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #IntegerTest #testRemLpSn stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #IntegerTest #testRemLpSp stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #IntegerTest #testRemSnLn stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #IntegerTest #testRemSnLp stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #IntegerTest #testRemSnSn stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #IntegerTest #testRemSnSp stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #IntegerTest #testRemSpLn stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #IntegerTest #testRemSpLp stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #IntegerTest #testRemSpSn stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #IntegerTest #testRemSpSp stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #IntegerTest #testRomanPrinting stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #IntegerTest #testSlashSlashLnLn stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #IntegerTest #testSlashSlashLnLp stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #IntegerTest #testSlashSlashLnSn stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #IntegerTest #testSlashSlashLnSp stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #IntegerTest #testSlashSlashLpLn stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #IntegerTest #testSlashSlashLpLp stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #IntegerTest #testSlashSlashLpSn stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #IntegerTest #testSlashSlashLpSp stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #IntegerTest #testSlashSlashSnLn stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #IntegerTest #testSlashSlashSnLp stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #IntegerTest #testSlashSlashSnSn stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #IntegerTest #testSlashSlashSnSp stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #IntegerTest #testSlashSlashSpLn stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #IntegerTest #testSlashSlashSpLp stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #IntegerTest #testSlashSlashSpSn stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #IntegerTest #testSlashSlashSpSp stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #IntegerTest #testSqrtFloor stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #IntegerTest #testStringAsNumber stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #IntegerTest #testTwoComplementBitLogicWithCarry stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #IntegerTest #testTwoComplementRightShift stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #SmallIntegerTest #testBasicNew stamp: 'aa 5/13/2023 20:02:47'!
ERROR!

!testRun: #SmallIntegerTest #testBasicNew stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #SmallIntegerTest #testDivide stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #SmallIntegerTest #testEven stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #SmallIntegerTest #testMaxVal stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #SmallIntegerTest #testMinVal stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #SmallIntegerTest #testNew stamp: 'aa 5/13/2023 20:02:47'!
ERROR!

!testRun: #SmallIntegerTest #testNew stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #SmallIntegerTest #testOdd stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #SmallIntegerTest #testPrintPaddedWith stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #SmallIntegerTest #testPrintString stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #SmallIntegerTest #testZeroRaisedToNegativePower stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #TestSuiteTest #test01SuiteForTestCaseClassHasTheSameTestAsCreatingTheSuiteFromTheTestCaseClass stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #TestSuiteTest #test02SuiteForNoTestCaseClassUsesTestClassWithSameNameEndingWithTest stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #TestSuiteTest #test03SuiteForNoTestCaseClassAndNoTestClassLooksForReferencesInTests stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #TestSuiteTest #test04SuiteForTestMethodIncludesOnlyTheMethod stamp: 'aa 5/13/2023 20:02:47'!
PASSED!

!testRun: #TestSuiteTest #test05SuiteForNoTestMethodIncludesTestCaseSendingTheCompiledMethodSelector stamp: 'aa 5/13/2023 20:02:48'!
PASSED!

!testRun: #TestSuiteTest #test06ForSystemCategoryWithTestCasesIncludesOnlyTestCasesClasses stamp: 'aa 5/13/2023 20:02:48'!
PASSED!

!testRun: #TestSuiteTest #test07ForSystemCategoryWithNoTestCasesIncludesTestClassesTests stamp: 'aa 5/13/2023 20:02:48'!
PASSED!

!testRun: #TestSuiteTest #test08ForMessageCategoryContainingTestCasesIncludesThoseTestCases stamp: 'aa 5/13/2023 20:02:48'!
PASSED!

!testRun: #TestSuiteTest #test09ForMessageCategoryWihoutTestIsEmpty stamp: 'aa 5/13/2023 20:02:48'!
PASSED!

!testRun: #TestSuiteTest #test10CanNotDebugAsFailureQuickMethods stamp: 'aa 5/13/2023 20:02:48'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test000_AutocompletesMessagesFor_GlobalVariables_WithSelectorsFromTheirClasses stamp: 'aa 5/13/2023 20:02:48'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test001_AutocompletesMessagesFor_Self_WithSelectorsFromTheBrowsedClass stamp: 'aa 5/13/2023 20:02:48'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test002_AutocompletesMessagesFor_Super_WithSelectorsFromTheBrowsedClass stamp: 'aa 5/13/2023 20:02:48'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test003_AutocompletesMessagesFor_Super_WithSelectorsForUnknownClassesWhenTheBrowsedClassDoesNotHaveASuperclass stamp: 'aa 5/13/2023 20:02:48'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test004_AutocompletesMessagesFor_True_WithSelectorsFromTrue stamp: 'aa 5/13/2023 20:02:48'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test005_AutocompletesMessagesFor_False_WithSelectorsFromFalse stamp: 'aa 5/13/2023 20:02:48'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test006_AutocompletesMessagesFor_Nil_WithSelectorsFromUndefinedObject stamp: 'aa 5/13/2023 20:02:48'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test007_AutocompletesMessagesFor_Characters_WithSelectorsFromCharacter stamp: 'aa 5/13/2023 20:02:48'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test008_AutocompletesMessagesFor_Numbers_WithSelectorsFromTheirClass stamp: 'aa 5/13/2023 20:02:48'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test009_AutocompletesMessagesFor_Strings_WithSelectorsFromString stamp: 'aa 5/13/2023 20:02:48'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test010_AutocompletesMessagesFor_Symbols_WithSelectorsFromSymbol stamp: 'aa 5/13/2023 20:02:48'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test011_AutocompletesMessagesFor_StringSymbol_WithSelectorsFromSymbol stamp: 'aa 5/13/2023 20:02:48'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test012_AutocompletesMessagesFor_InstanceVariables stamp: 'aa 5/13/2023 20:02:49'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test012_AutocompletesMessagesFor_InstanceVariables_WithSelectorsOfInstVarTypes stamp: 'aa 5/13/2023 20:02:49'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test013_AutocompletesMessagesFor_MethodArguments_WithSelectorsForUnknownClasses stamp: 'aa 5/13/2023 20:02:49'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test014_AutocompletesMessagesFor_TemporaryVariables_WithSelectorsForUnknownClasses stamp: 'aa 5/13/2023 20:02:49'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test014_AutocompletesMessagesFor_TemporaryVariables_WithSelectorsOfTempVarTypes stamp: 'aa 5/13/2023 20:02:50'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test015_AutocompletesMessagesFor_BlockArguments_WithSelectorsForUnknownClasses stamp: 'aa 5/13/2023 20:02:50'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test016_AutocompletesMessagesFor_BlockTemporaryVariables_WithSelectorsForUnknownClasses stamp: 'aa 5/13/2023 20:02:50'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test017_AutocompletesMessagesFor_NilWorkspaceVariables_WithSelectorsForUnknownClasses stamp: 'aa 5/13/2023 20:02:51'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test017_AutocompletesMessagesFor_NonNilWorkspaceVariables_WithSelectorsFromTheirClasses stamp: 'aa 5/13/2023 20:02:51'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test018_AutocompletesMessagesFor_ThisContext_WithSelectorsFromMethodContext stamp: 'aa 5/13/2023 20:02:51'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test019_AutocompletesMessagesFor_ClassVariables_WithSelectorsFromTheirClasses stamp: 'aa 5/13/2023 20:02:51'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test020_AutocompletesMessagesFor_PoolConstants_WithSelectorsFromTheirClasses stamp: 'aa 5/13/2023 20:02:51'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test021_AutocompletesMessagesFor_BlockEndings_WithSelectorsFromBlockClosure stamp: 'aa 5/13/2023 20:02:51'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test022_AutocompletesMessagesFor_ArrayEnds_WithSelectorsFromArray stamp: 'aa 5/13/2023 20:02:51'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test023_AutocompletesMessagesFor_RightBraces_WithSelectorsFromArray stamp: 'aa 5/13/2023 20:02:51'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test023_AutocompletingMessagesFor_UnaryMessages stamp: 'aa 5/13/2023 20:02:51'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test024_AutocompletingMessagesFor_RightParenthesis stamp: 'aa 5/13/2023 20:02:51'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test025_AutocompletesMessagesFor_UnknownIdentifiers_WithSelectorsForUnknownClasses stamp: 'aa 5/13/2023 20:02:51'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test026_AutocompletingMessagesFor_Cascade stamp: 'aa 5/13/2023 20:02:51'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test027_AutocompletesEntriesFor_GlobalVariables_WithIdentifiersBegginingWithThem stamp: 'aa 5/13/2023 20:02:51'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test028_AutocompletesEntriesFor_PoolConstants_WithIdentifiersBegginingWithThem stamp: 'aa 5/13/2023 20:02:51'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test029_AutocompletesEntriesFor_WorkspaceVariables_WithIdentifiersBegginingWithThem stamp: 'aa 5/13/2023 20:02:51'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test030_AutocompletesEntriesFor_ClassVariables_WithIdentifiersBegginingWithThem stamp: 'aa 5/13/2023 20:02:51'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test031_AutocompletesEntriesFor_InstanceVariables_WithIdentifiersBegginingWithThem stamp: 'aa 5/13/2023 20:02:51'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test032_AutocompletesEntriesFor_MethodArguments_WithIdentifiersBegginingWithThem stamp: 'aa 5/13/2023 20:02:51'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test033_AutocompletesEntriesFor_TemporaryVariables_WithIdentifiersBegginingWithThem stamp: 'aa 5/13/2023 20:02:51'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test034_AutocompletesEntriesFor_BlockArguments_WithIdentifiersBegginingWithThem stamp: 'aa 5/13/2023 20:02:51'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test035_AutocompletesEntriesFor_BlockTemporaryVariables_WithIdentifiersBegginingWithThem stamp: 'aa 5/13/2023 20:02:51'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test036_AutocompletesEntriesFor_IncompleteIdentifiers_WithIdentifiersBegginingWithThem stamp: 'aa 5/13/2023 20:02:51'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test037_AutocompletesEntriesFor_ReservedNames_WithIdentifiersBegginingWithThem stamp: 'aa 5/13/2023 20:02:51'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test038_DoesNotAutocompleteEntriesFor_UndefinedIdentifiers stamp: 'aa 5/13/2023 20:02:51'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test039_AutocompletesEntriesFor_BinaryMessages_WithIdentifiersBegginingWithThem stamp: 'aa 5/13/2023 20:02:51'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test040_AutocompletesEntriesFor_IncompleteBinaryMessages_WithIdentifiersBegginingWithThem stamp: 'aa 5/13/2023 20:02:51'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test041_AutocompletesEntriesFor_UnaryMessages_WithIdentifiersBegginingWithThem stamp: 'aa 5/13/2023 20:02:51'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test042_AutocompletesEntriesFor_IncompleteUnaryMessages_WithIdentifiersBegginingWithThem stamp: 'aa 5/13/2023 20:02:51'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test043_AutocompletesEntriesFor_KeywordMessages_WithIdentifiersBegginingWithThem stamp: 'aa 5/13/2023 20:02:51'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test044_AutocompletesEntriesFor_IncompleteKeywordMessages_WithIdentifiersBegginingWithThem stamp: 'aa 5/13/2023 20:02:51'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #testMessages stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_ArrayWithArrayAndOtherObjects stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndArray stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndArrayOfArray stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndArrayWithManyElements stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndBinaryInParenthesis stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndBlock stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndBlockOfBlock stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndBlockOfEvaluatedBlock stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndExpresionInParenthesis stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndLiteralArray stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndMoreThanOneUnaryAfterExpresionInParenthesis stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndOneUnaryAfterBlock stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndOneUnaryAfterBrace stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndOneUnaryAfterCharacter stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndOneUnaryAfterLiteralArray stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndOneUnaryAfterStringSymbol stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndOneUnaryAfterSymbol stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndUnaryInProtoObject stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndUncompleteKeywordAfterParenthesis stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndUncompleteKeywordAfterUnary stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndUncompleteMessageAfterUnary stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryInParenthesis stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryWithMoreThanOneUnary stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryWithOneUnary stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_ClosedAndUnclosedParenthesis stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_ExpressionInManyParenthesis stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_ExpressionWithMoreThanOneParenthesis stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_LFBeforeParenthesis stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_SpaceBeforeParenthesis stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_UnaryAfterExpresionInParenthesis stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_UnclosedArrayAfterClosedArray stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_UnclosedBlockAfterBlock stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_UnclosedDoubleParenthesis stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_selfInProtoObject stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Workspace_ExpresionInParenthesis stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Workspace_MoreThanOneUnaryMessage stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Workspace_OnlyRightParenthesis stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #SHST80RangeTypeTest #test00MessagesForTestingAreImplemented stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #SHST80RangeTypeTest #test01TypeOfMessageSentToLiteralNumberAreObtainedCorrectly stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #SHST80RangeTypeTest #test02TypeOfMessageSentToLiteralStringAreObtainedCorrectly stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #SHST80RangeTypeTest #test03TypeOfMessageSentToLiteralSymbolAreObtainedCorrectly stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #SHST80RangeTypeTest #test04TypeOfMessageSentToLiteralArrayAreObtainedCorrectly stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #SHST80RangeTypeTest #test05TypeOfMessageSentToLiteralBraceArrayAreObtainedCorrectly stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #SHST80RangeTypeTest #test06TypeOfMessageSentToLiteralBlockAreObtainedCorrectly stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #SHST80RangeTypeTest #test07TypeOfMessageSentToLiteralCharacterAreObtainedCorrectly stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #SHST80RangeTypeTest #test08TypeOfMessageSentToLiteralNilAreObtainedCorrectly stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #SHST80RangeTypeTest #test09TypeOfMessageSentToLiteralTrueAreObtainedCorrectly stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #SHST80RangeTypeTest #test10TypeOfMessageSentToLiteralFalseAreObtainedCorrectly stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #SHST80RangeTypeTest #test11TypeOfMessageSentToSelfAreObtainedCorrectly stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #SHST80RangeTypeTest #test12TypeOfMessageSentToSuperAreObtainedCorrectly stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #SHST80RangeTypeTest #test13TypesIsUndefinedForAnyMessageSendToSuperFromProtoObject stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #SHST80RangeTypeTest #test14TypeOfMessageSentToGlobalVarAreObtainedCorrectly stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #SHST80RangeTypeTest #test15TypeOfMessageSentToClassVarAreObtainedCorrectly stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #DifferenceFinderTest #testCharacters stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #DifferenceFinderTest #testCharacters2 stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #DifferenceFinderTest #testCode stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #DifferenceFinderTest #testLines stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #DifferenceFinderTest #testWords stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #AddInstanceVariableTest #test01NewVariableNameCanNotBeEmpty stamp: 'aa 5/13/2023 20:02:52'!
PASSED!

!testRun: #AddInstanceVariableTest #test02NewVariableNameCanNotContainBlanks stamp: 'aa 5/13/2023 20:02:53'!
PASSED!

!testRun: #AddInstanceVariableTest #test03NewVariableNameCanNotContainInvalidCharacters stamp: 'aa 5/13/2023 20:02:53'!
PASSED!

!testRun: #AddInstanceVariableTest #test04ValidNewVariableNameGetBlanksTrimmed stamp: 'aa 5/13/2023 20:02:53'!
PASSED!

!classDefinition: #ClassToAddInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:53'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #AddInstanceVariableTest #test05NewVariableNameCanNotBeDefinedInClass stamp: 'aa 5/13/2023 20:02:53'!
PASSED!

!classRemoval: #ClassToAddInstVar stamp: 'aa 5/13/2023 20:02:54'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SuperclassWithInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:54'!
RefactoringClassTestData subclass: #SuperclassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:54'!
SuperclassWithInstVar subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #AddInstanceVariableTest #test06NewVariableNameCanNotBeDefinedInSuperclasses stamp: 'aa 5/13/2023 20:02:54'!
PASSED!

!classRemoval: #ClassToAddInstVar stamp: 'aa 5/13/2023 20:02:54'!
SuperclassWithInstVar subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #SuperclassWithInstVar stamp: 'aa 5/13/2023 20:02:54'!
RefactoringClassTestData subclass: #SuperclassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:54'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SubclassWithInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:54'!
ClassToAddInstVar subclass: #SubclassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #AddInstanceVariableTest #test07NewVariableNameCanNotBeDefinedInAnySubclass stamp: 'aa 5/13/2023 20:02:54'!
PASSED!

!classRemoval: #SubclassWithInstVar stamp: 'aa 5/13/2023 20:02:55'!
ClassToAddInstVar subclass: #SubclassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToAddInstVar stamp: 'aa 5/13/2023 20:02:55'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:55'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:55'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #AddInstanceVariableTest #test08AddCreatesNewInstanceVariable stamp: 'aa 5/13/2023 20:02:55'!
PASSED!

!classRemoval: #ClassToAddInstVar stamp: 'aa 5/13/2023 20:02:55'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:55'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddInstVar methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:02:55'!
m1 | a | a := 10.! !

!testRun: #AddInstanceVariableTest #test09FailsWhenNewVariableEqualsTemporaryVariableOfAMethodInClass stamp: 'aa 5/13/2023 20:02:55'!
PASSED!

!classRemoval: #ClassToAddInstVar stamp: 'aa 5/13/2023 20:02:56'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:56'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddInstVar methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:02:56'!
m1:a! !

!testRun: #AddInstanceVariableTest #test10FailsWhenNewVariableEqualsArgumentOfAMethodInClass stamp: 'aa 5/13/2023 20:02:56'!
PASSED!

!classRemoval: #ClassToAddInstVar stamp: 'aa 5/13/2023 20:02:56'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:56'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddInstVar methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:02:56'!
m1 [ :a | ] value: 1! !

!testRun: #AddInstanceVariableTest #test11FailsWhenNewVariableEqualsArgumentOfABlockInAMethodInClass stamp: 'aa 5/13/2023 20:02:56'!
PASSED!

!classRemoval: #ClassToAddInstVar stamp: 'aa 5/13/2023 20:02:57'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:57'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddInstVar methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:02:57'!
m1 [ | a | ] value! !

!testRun: #AddInstanceVariableTest #test12FailsWhenNewVariableEqualsTemporaryOfABlockInAMethodInClass stamp: 'aa 5/13/2023 20:02:57'!
PASSED!

!classRemoval: #ClassToAddInstVar stamp: 'aa 5/13/2023 20:02:57'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:57'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SubclassOfClassToRefactor category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:57'!
ClassToAddInstVar subclass: #SubclassOfClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!SubclassOfClassToRefactor methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:02:57'!
m1 | a | ! !

!testRun: #AddInstanceVariableTest #test13FailsWhenNewVariableIsHiddenInAnyMethodOfAnySubclass stamp: 'aa 5/13/2023 20:02:57'!
PASSED!

!classRemoval: #SubclassOfClassToRefactor stamp: 'aa 5/13/2023 20:02:57'!
ClassToAddInstVar subclass: #SubclassOfClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToAddInstVar stamp: 'aa 5/13/2023 20:02:58'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:58'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #AddInstanceVariableTest #test14NewVariableNameCanNotBeAReservedName stamp: 'aa 5/13/2023 20:02:58'!
PASSED!

!classRemoval: #ClassToAddInstVar stamp: 'aa 5/13/2023 20:02:58'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:58'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:02:58'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:02:58'!
sender_m1 self m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:02:58'!
m1: newParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:02:58' prior: 50608979!
sender_m1 self m1: 1! !

!methodRemoval: ClassToAddParameter #m1 stamp: 'aa 5/13/2023 20:02:58'!
m1!

!testRun: #AddParameterTest #test01AddingParameterToUnaryMessageAddsColonAndParameter stamp: 'aa 5/13/2023 20:02:58'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'aa 5/13/2023 20:02:58'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:58'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:02:58'!
m1: oldParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:02:59'!
sender_m1 self m1: 1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:02:59'!
m1: oldParam m2: newParam ! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:02:59' prior: 50609017!
sender_m1 self m1: 1 m2: 2! !

!methodRemoval: ClassToAddParameter #m1: stamp: 'aa 5/13/2023 20:02:59'!
m1: oldParam!

!testRun: #AddParameterTest #test02AddingParameterToKeywordMessageAddsNewKeywordAndParameter stamp: 'aa 5/13/2023 20:02:59'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'aa 5/13/2023 20:02:59'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:02:59'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:02:59'!
m1: oldParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:02:59'!
sender_m1 self m1: 1. self m1: 1.! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:02:59'!
m1: oldParam m2: newParam ! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:02:59' prior: 50609057!
sender_m1 self m1: 1 m2: 2. self m1: 1 m2: 2.! !

!methodRemoval: ClassToAddParameter #m1: stamp: 'aa 5/13/2023 20:02:59'!
m1: oldParam!

!testRun: #AddParameterTest #test03AddingParameterToKeywordMessageMultipleSendsInSameMethodSameLiteral stamp: 'aa 5/13/2023 20:02:59'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'aa 5/13/2023 20:03:00'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:00'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:00'!
m1: oldParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:00'!
sender_m1 self m1: self size.! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:00'!
m1: oldParam m2: newParam ! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:00' prior: 50609098!
sender_m1 self m1: self size m2: 2.! !

!methodRemoval: ClassToAddParameter #m1: stamp: 'aa 5/13/2023 20:03:00'!
m1: oldParam!

!testRun: #AddParameterTest #test04AddingParameterToKeywordMessageWithMessageSendAsLastFormalParameter stamp: 'aa 5/13/2023 20:03:00'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'aa 5/13/2023 20:03:00'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:00'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:00'!
m1: oldParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:00'!
sender_m1 self m1: self size + 4.! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:00'!
m1: oldParam m2: newParam ! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:00' prior: 50609139!
sender_m1 self m1: self size + 4 m2: 2.! !

!methodRemoval: ClassToAddParameter #m1: stamp: 'aa 5/13/2023 20:03:00'!
m1: oldParam!

!testRun: #AddParameterTest #test05AddingParameterToKeywordMessageWithBinaryMessageSendAsLastFormalParameter stamp: 'aa 5/13/2023 20:03:00'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'aa 5/13/2023 20:03:01'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:01'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:01'!
m1: oldParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:01'!
sender_m1 self m1: (self at: 1 put: 2).! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:01'!
m1: oldParam m2: newParam ! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:01' prior: 50609180!
sender_m1 self m1: (self at: 1 put: 2) m2: 2.! !

!methodRemoval: ClassToAddParameter #m1: stamp: 'aa 5/13/2023 20:03:01'!
m1: oldParam!

!testRun: #AddParameterTest #test06AddingParameterToKeywordMessageWithKeywordMessageSendAsLastFormalParameter stamp: 'aa 5/13/2023 20:03:01'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'aa 5/13/2023 20:03:01'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:01'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:01'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:01'!
sender_m1 #m1 size! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:01'!
m1: newParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:01' prior: 50609221!
sender_m1 #m1: size! !

!methodRemoval: ClassToAddParameter #m1 stamp: 'aa 5/13/2023 20:03:01'!
m1!

!testRun: #AddParameterTest #test07AddingParameterToUnaryMessageChangesReferencesToSelector stamp: 'aa 5/13/2023 20:03:01'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'aa 5/13/2023 20:03:02'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:02'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:02'!
m1: oldParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:02'!
sender_m1 #m1: size.! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:02'!
m1: oldParam m2: newParam ! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:02' prior: 50609260!
sender_m1 #m1:m2: size.! !

!methodRemoval: ClassToAddParameter #m1: stamp: 'aa 5/13/2023 20:03:02'!
m1: oldParam!

!testRun: #AddParameterTest #test08AddingParameterToKeywordMessageChangesReferencesToSelector stamp: 'aa 5/13/2023 20:03:02'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'aa 5/13/2023 20:03:02'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #AddParameterTest #test09FailsIfNewParameterValueCanNotBeCompiled stamp: 'aa 5/13/2023 20:03:02'!
PASSED!

!testRun: #AddParameterTest #test10FailsIfNewParameterValueIsEmpty stamp: 'aa 5/13/2023 20:03:03'!
PASSED!

!testRun: #AddParameterTest #test11NewParameterNameCanNotBeEmpty stamp: 'aa 5/13/2023 20:03:03'!
PASSED!

!testRun: #AddParameterTest #test12NewParameterNameCanNotStartWithNumber stamp: 'aa 5/13/2023 20:03:03'!
PASSED!

!testRun: #AddParameterTest #test13NewParameterNameCanNotContainSpaces stamp: 'aa 5/13/2023 20:03:03'!
PASSED!

!classDefinition: #ClassToAddParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:03'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: 'newParam'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:03'!
m1! !

!testRun: #AddParameterTest #test14NewParameterCanNotBeDefinedAsInstanceVariableInAnyImplementor stamp: 'aa 5/13/2023 20:03:03'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'aa 5/13/2023 20:03:04'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: 'newParam'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:04'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:04'!
m1:newParam! !

!testRun: #AddParameterTest #test15NewParameterCanNotBeDefinedAsParameterInAnyImplementor stamp: 'aa 5/13/2023 20:03:04'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'aa 5/13/2023 20:03:04'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #AddParameterTest #test16WhenCreatedForUnarySelectorMustBeUnary stamp: 'aa 5/13/2023 20:03:04'!
PASSED!

!testRun: #AddParameterTest #test17WhenCreatedForBinarySelectorMustBeBinary stamp: 'aa 5/13/2023 20:03:04'!
PASSED!

!testRun: #AddParameterTest #test18CanNotAddParameterToBinaryKeyword stamp: 'aa 5/13/2023 20:03:05'!
PASSED!

!testRun: #AddParameterTest #test19AllImplementorsMustImplementOldSelector stamp: 'aa 5/13/2023 20:03:05'!
PASSED!

!testRun: #AddParameterTest #test20AllSendersShouldSendOldSelector stamp: 'aa 5/13/2023 20:03:05'!
PASSED!

!testRun: #AddParameterTest #test21NewKeywordToAddToOldSelectorCanNotBeUnary stamp: 'aa 5/13/2023 20:03:05'!
PASSED!

!testRun: #AddParameterTest #test22NewKeywordToAddToOldSelectorCanNotBeBinary stamp: 'aa 5/13/2023 20:03:05'!
PASSED!

!testRun: #AddParameterTest #test23NewKeywordToAddToOldSelectorCanNotBeKeywordWithMoreThanOneParameter stamp: 'aa 5/13/2023 20:03:06'!
PASSED!

!classDefinition: #ClassToAddParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:06'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:06'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:06'!
sender_m1 self m1
	! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:06'!
m1: newParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:06' prior: 50609394!
sender_m1 self m1: 1
	! !

!methodRemoval: ClassToAddParameter #m1 stamp: 'aa 5/13/2023 20:03:06'!
m1!

!testRun: #AddParameterTest #test24AddingParameterToSendersTakeCaresOfSeparators stamp: 'aa 5/13/2023 20:03:06'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'aa 5/13/2023 20:03:06'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:06'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:06'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:07'!
sender_m1 self m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:07'!
m1: newParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:07' prior: 50609431!
sender_m1 self m1: (self at: 1)! !

!methodRemoval: ClassToAddParameter #m1 stamp: 'aa 5/13/2023 20:03:07'!
m1!

!testRun: #AddParameterTest #test25IfNewParameterValueIsKeywordMessageSendAddParenthesisToItForUnaryMessages stamp: 'aa 5/13/2023 20:03:07'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'aa 5/13/2023 20:03:07'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:07'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:07'!
m1: oldParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:07'!
sender_m1 self m1: 1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:07'!
m1: oldParam m2: newParam ! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:07' prior: 50609470!
sender_m1 self m1: 1 m2: (self at: 1)! !

!methodRemoval: ClassToAddParameter #m1: stamp: 'aa 5/13/2023 20:03:07'!
m1: oldParam!

!testRun: #AddParameterTest #test26IfNewParameterValueIsKeywordMessageSendAddParenthesisToItForKeywordMessages stamp: 'aa 5/13/2023 20:03:07'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'aa 5/13/2023 20:03:08'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #AddParameterTest #test27NewParameterValueCanNotHaveMoreThanOneStatement stamp: 'aa 5/13/2023 20:03:08'!
PASSED!

!classDefinition: #ClassToAddParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:08'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:08'!
m1: oldParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:08'!
sender_m1 self m1:[ 1 factorial ]! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:08'!
m1: oldParam m2: newParam ! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:08' prior: 50609515!
sender_m1 self m1:[ 1 factorial ] m2: 1! !

!methodRemoval: ClassToAddParameter #m1: stamp: 'aa 5/13/2023 20:03:08'!
m1: oldParam!

!testRun: #AddParameterTest #test28WhenSenderLastParameterIsABlockAddedParameterIsNotAddedInsideTheBlock stamp: 'aa 5/13/2023 20:03:08'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'aa 5/13/2023 20:03:09'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:09'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:09'!
m1: p1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:09'!
sender self m1: 1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:09'!
m2: newParam m1: p1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:09' prior: 50609556!
sender self m2: 2 m1: 1! !

!methodRemoval: ClassToAddParameter #m1: stamp: 'aa 5/13/2023 20:03:09'!
m1: p1!

!testRun: #AddParameterTest #test29AddingParameterAsFirstOneWorksAsExpected stamp: 'aa 5/13/2023 20:03:09'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'aa 5/13/2023 20:03:09'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:09'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:09'!
m1: p1 m3: p3! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:09'!
sender self m1: 1 m3: 3! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:10'!
m1: p1 m2: newParam m3: p3! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:10' prior: 50609594!
sender self m1: 1 m2: 2 m3: 3! !

!methodRemoval: ClassToAddParameter #m1:m3: stamp: 'aa 5/13/2023 20:03:10'!
m1: p1 m3: p3!

!testRun: #AddParameterTest #test30AddingParameterInTheMiddleWorksAsExpected stamp: 'aa 5/13/2023 20:03:10'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'aa 5/13/2023 20:03:10'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:10'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:10'!
m1: p1 m3: p3! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:10'!
sender
	self m1: 1 m3: 3.
	self
		m1: 4
		m3: 6! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:10'!
m1: p1 m2: newParam m3: p3! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:10' prior: 50609634!
sender
	self m1: 1 m2: 2 m3: 3.
	self
		m1: 4
		m2: 2 m3: 6! !

!methodRemoval: ClassToAddParameter #m1:m3: stamp: 'aa 5/13/2023 20:03:10'!
m1: p1 m3: p3!

!testRun: #AddParameterTest #test31AddingParameterInTheMiddleWithManySendersWorksAsExpected stamp: 'aa 5/13/2023 20:03:10'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'aa 5/13/2023 20:03:11'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #AddParameterTest #test32IndexCanNotBeLessThanOne stamp: 'aa 5/13/2023 20:03:11'!
PASSED!

!testRun: #AddParameterTest #test33IndexCanNotBeBiggerThanNumberOfParametersPlusOne stamp: 'aa 5/13/2023 20:03:11'!
PASSED!

!testRun: #AddParameterTest #test34IndexMustBeInteger stamp: 'aa 5/13/2023 20:03:11'!
PASSED!

!classDefinition: #ClassToAddParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:11'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:11'!
m1

! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:11'!
sender_m1 self m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:12'!
m1: newParam

! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:12' prior: 50609685!
sender_m1 self m1: 1! !

!methodRemoval: ClassToAddParameter #m1 stamp: 'aa 5/13/2023 20:03:12'!
m1

!

!testRun: #AddParameterTest #test35AddingParameterRetractsInsertionPointWhenAtInsertionPointIsANewLine stamp: 'aa 5/13/2023 20:03:12'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'aa 5/13/2023 20:03:12'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:12'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #AddParameterTest #test36ParentesisAreAddedToSendersOfUnaryMessage stamp: 'aa 5/13/2023 20:03:12'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'aa 5/13/2023 20:03:12'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ChangeKeywordsSelectorOrderTest #test01CannotChangeSelectorOrderInUnaryMessages stamp: 'aa 5/13/2023 20:03:12'!
PASSED!

!testRun: #ChangeKeywordsSelectorOrderTest #test02CannotChangeSelectorOrderInBinaryMessages stamp: 'aa 5/13/2023 20:03:13'!
PASSED!

!testRun: #ChangeKeywordsSelectorOrderTest #test03CannotChangeSelectorOrderInKeywordMessagesWithOneParameterOnly stamp: 'aa 5/13/2023 20:03:13'!
PASSED!

!classDefinition: #ClassToChangeSelectorOrder category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:13'!
RefactoringClassTestData subclass: #ClassToChangeSelectorOrder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeSelectorOrder methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:13'!
m1: p1 m2: p2! !
!ClassToChangeSelectorOrder methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:13'!
m2: p2 m1: p1! !

!methodRemoval: ClassToChangeSelectorOrder #m1:m2: stamp: 'aa 5/13/2023 20:03:13'!
m1: p1 m2: p2!

!testRun: #ChangeKeywordsSelectorOrderTest #test04ChangesKeywordsOrder stamp: 'aa 5/13/2023 20:03:13'!
PASSED!

!classRemoval: #ClassToChangeSelectorOrder stamp: 'aa 5/13/2023 20:03:14'!
RefactoringClassTestData subclass: #ClassToChangeSelectorOrder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToChangeSelectorOrder category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:14'!
RefactoringClassTestData subclass: #ClassToChangeSelectorOrder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeSelectorOrder methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:14'!
m1: p1 m2: p2! !
!ClassToChangeSelectorOrder methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:14'!
m2: p2 m1: p1! !

!methodRemoval: ClassToChangeSelectorOrder #m1:m2: stamp: 'aa 5/13/2023 20:03:14'!
m1: p1 m2: p2!

!testRun: #ChangeKeywordsSelectorOrderTest #test05ChangesParametersOrder stamp: 'aa 5/13/2023 20:03:14'!
PASSED!

!classRemoval: #ClassToChangeSelectorOrder stamp: 'aa 5/13/2023 20:03:14'!
RefactoringClassTestData subclass: #ClassToChangeSelectorOrder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ChangeKeywordsSelectorOrderTest #test06NewSelectorMustIncludeOldSelectorKeywords stamp: 'aa 5/13/2023 20:03:14'!
PASSED!

!classDefinition: #ClassToChangeSelectorOrder category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:14'!
RefactoringClassTestData subclass: #ClassToChangeSelectorOrder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeSelectorOrder methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:14'!
m1: p1 m2: p2 m3: p3! !
!ClassToChangeSelectorOrder methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:14'!
m2: p2 m3: p3 m1: p1! !

!methodRemoval: ClassToChangeSelectorOrder #m1:m2:m3: stamp: 'aa 5/13/2023 20:03:15'!
m1: p1 m2: p2 m3: p3!

!testRun: #ChangeKeywordsSelectorOrderTest #test07ChangesKeywordsAndParametersOrderForMoreThanTwoKeywords stamp: 'aa 5/13/2023 20:03:15'!
PASSED!

!classRemoval: #ClassToChangeSelectorOrder stamp: 'aa 5/13/2023 20:03:15'!
RefactoringClassTestData subclass: #ClassToChangeSelectorOrder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:15'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:15'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:15'!
m3 | x | self m1. false ifTrue: [ x m1 ]! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:15'!
m2! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:15' prior: 50609860!
m3 | x | self m2. false ifTrue: [ x m1 ]! !

!methodRemoval: ClassToRenameSelector #m1 stamp: 'aa 5/13/2023 20:03:15'!
m1!

!testRun: #RenameSelectorWithActualScopeTest #test01DoesNotRenamesPossibleMessageSendWhenInstructedToDoSo stamp: 'aa 5/13/2023 20:03:15'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'aa 5/13/2023 20:03:16'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:16'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:16'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:16'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:16'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:16'!
m3 | x | x := self. x := ClassOfSender new. x m1! !

!testRun: #RenameSelectorWithActualScopeTest #test02CanNotRenameWithReceiverTypeOfMessageSendNotIncludedInImplementors stamp: 'aa 5/13/2023 20:03:16'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'aa 5/13/2023 20:03:16'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'aa 5/13/2023 20:03:16'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:16'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:16'!
ClassToRenameSelector subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:16'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:16'!
m3 | x | x := ClassOfSender new. x m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:17'!
m2! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:17' prior: 50609955!
m3 | x | x := ClassOfSender new. x m2! !

!methodRemoval: ClassToRenameSelector #m1 stamp: 'aa 5/13/2023 20:03:17'!
m1!

!testRun: #RenameSelectorWithActualScopeTest #test03RenamesWhenReceiverTypeOfMessageSendIsSubtypeOfImplementorsType stamp: 'aa 5/13/2023 20:03:17'!
PASSED!

!classRemoval: #ClassOfSender stamp: 'aa 5/13/2023 20:03:17'!
ClassToRenameSelector subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRenameSelector stamp: 'aa 5/13/2023 20:03:17'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:17'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:17'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:17'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:17'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:17'!
m3 | x | x := self. x := ClassOfSender new. x m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:17'!
m2! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:17'!
m2! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:18' prior: 50610013!
m3 | x | x := self. x := ClassOfSender new. x m2! !

!methodRemoval: ClassToRenameSelector #m1 stamp: 'aa 5/13/2023 20:03:18'!
m1!

!methodRemoval: ClassOfSender #m1 stamp: 'aa 5/13/2023 20:03:18'!
m1!

!testRun: #RenameSelectorWithActualScopeTest #test04RenamesWhenReceiverTypeOfMessageSendIsEqualToImplementorsTypes stamp: 'aa 5/13/2023 20:03:18'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'aa 5/13/2023 20:03:18'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'aa 5/13/2023 20:03:18'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:18'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:18'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:18'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:18'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:18'!
m3 | x y | x := self. y := ClassOfSender new. x m1. y m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:18'!
m2! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:18'!
m2! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:18' prior: 50610077!
m3 | x y | x := self. y := ClassOfSender new. x m2. y m2! !

!methodRemoval: ClassToRenameSelector #m1 stamp: 'aa 5/13/2023 20:03:18'!
m1!

!methodRemoval: ClassOfSender #m1 stamp: 'aa 5/13/2023 20:03:19'!
m1!

!testRun: #RenameSelectorWithActualScopeTest #test05RenamesDifferentMessageSendsWithReceiverTypeIsIncludedInImplementorsType stamp: 'aa 5/13/2023 20:03:19'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'aa 5/13/2023 20:03:19'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'aa 5/13/2023 20:03:19'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:19'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:19'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:19'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:19'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:19'!
m3 | x y | x := y:= self. x := y := ClassOfSender new. x m1. y m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:19'!
m2! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:19'!
m2! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:19' prior: 50610142!
m3 | x y | x := y:= self. x := y := ClassOfSender new. x m2. y m2! !

!methodRemoval: ClassToRenameSelector #m1 stamp: 'aa 5/13/2023 20:03:19'!
m1!

!methodRemoval: ClassOfSender #m1 stamp: 'aa 5/13/2023 20:03:19'!
m1!

!testRun: #RenameSelectorWithActualScopeTest #test06RenamesDifferentMessageSendsWithReceiverTypeEqualToImplementorsType stamp: 'aa 5/13/2023 20:03:20'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'aa 5/13/2023 20:03:20'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'aa 5/13/2023 20:03:20'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:20'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:20'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:20'!
m3 | x | self m1. false ifTrue: [ x m1 ]! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:20'!
m2! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:20' prior: 50610195!
m3 | x | self m2. false ifTrue: [ x m2 ]! !

!methodRemoval: ClassToRenameSelector #m1 stamp: 'aa 5/13/2023 20:03:20'!
m1!

!testRun: #RenameSelectorWithActualScopeTest #test07RenamePossibleMessageSendIfInstructedToDoSo stamp: 'aa 5/13/2023 20:03:20'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'aa 5/13/2023 20:03:21'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:21'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:21'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:21'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:21'!
m3 | x | x := self. x := ClassOfSender new. x m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:21'!
m2! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:21' prior: 50610243!
m3 | x | x := self. x := ClassOfSender new. x m2! !

!methodRemoval: ClassOfSender #m1 stamp: 'aa 5/13/2023 20:03:21'!
m1!

!testRun: #RenameSelectorWithActualScopeTest #test08RenamesWithReceiverTypeOfMessageSendNotIncludedInImplementorsButSelectorNotImplementedInTypeHierarchy stamp: 'aa 5/13/2023 20:03:21'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'aa 5/13/2023 20:03:21'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'aa 5/13/2023 20:03:21'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:21'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:22'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:22'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:22'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:22'!
m3 self m1. ClassOfSender new m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:22'!
m2! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:22' prior: 50610303!
m3 self m2. ClassOfSender new m1! !

!methodRemoval: ClassToRenameSelector #m1 stamp: 'aa 5/13/2023 20:03:22'!
m1!

!testRun: #RenameSelectorWithActualScopeTest #test09RenamesOnlyValidMessageSendWhenMoreSendsInSameMethod stamp: 'aa 5/13/2023 20:03:22'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'aa 5/13/2023 20:03:22'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'aa 5/13/2023 20:03:22'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:22'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:22'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:22'!
m3 |x| self m1. x m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:23'!
m2! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:23' prior: 50610349!
m3 |x| self m2. x m1! !

!methodRemoval: ClassToRenameSelector #m1 stamp: 'aa 5/13/2023 20:03:23'!
m1!

!testRun: #RenameSelectorWithActualScopeTest #test10UsesTheModifiedSourceCodeWhenRenamingAMethodWithSureAndPossibleSenders stamp: 'aa 5/13/2023 20:03:23'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'aa 5/13/2023 20:03:23'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:23'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:23'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:23'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:23'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:23'!
m3 | x | x := self. x := ClassOfSender new. x m1; printString! !

!testRun: #RenameSelectorWithActualScopeTest #test11CanNotRenameWithReceiverTypeOfCascadeMessageSendNotIncludedInImplementors stamp: 'aa 5/13/2023 20:03:23'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'aa 5/13/2023 20:03:24'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'aa 5/13/2023 20:03:24'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameSelectorWithActualScopeTest #test12SuperclassInstanceCreationMessagesShouldNotBeUsed stamp: 'aa 5/13/2023 20:03:24'!
PASSED!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:24'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:24'!
m1 1! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:24'!
sender_m1 self m1! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:24'!
m1: newParam 1! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:24' prior: 50610442!
sender_m1 self m1: 1! !

!methodRemoval: ClassToIntroduceParameter #m1 stamp: 'aa 5/13/2023 20:03:24'!
m1 1!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:24' prior: 50610446!
m1: newParam newParam! !

!testRun: #ExtractAsParameterTest #test01CanExtractLiterals stamp: 'aa 5/13/2023 20:03:24'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:25'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:25'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:25'!
m1 self! !

!testRun: #ExtractAsParameterTest #test02CannotExtract_self stamp: 'aa 5/13/2023 20:03:25'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:25'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:25'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:25'!
m1 super! !

!testRun: #ExtractAsParameterTest #test03CannotExtract_super stamp: 'aa 5/13/2023 20:03:25'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:26'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:26'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:26'!
m1 thisContext! !

!testRun: #ExtractAsParameterTest #test04CannotExtract_thisContext stamp: 'aa 5/13/2023 20:03:26'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:26'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:26'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:26'!
m1 1 + 1! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:26'!
sender_m1 self m1! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:26'!
m1: newParam 1 + 1! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:26' prior: 50610557!
sender_m1 self m1: 1 + 1! !

!methodRemoval: ClassToIntroduceParameter #m1 stamp: 'aa 5/13/2023 20:03:26'!
m1 1 + 1!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:26' prior: 50610561!
m1: newParam newParam! !

!testRun: #ExtractAsParameterTest #test05CanExtractMessageSendToLiteralWithLiterals stamp: 'aa 5/13/2023 20:03:26'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:27'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:27'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:27'!
m1 true! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:27'!
sender_m1 self m1! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:27'!
m1: newParam true! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:27' prior: 50610603!
sender_m1 self m1: true! !

!methodRemoval: ClassToIntroduceParameter #m1 stamp: 'aa 5/13/2023 20:03:27'!
m1 true!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:27' prior: 50610607!
m1: newParam newParam! !

!testRun: #ExtractAsParameterTest #test06CanExtract_true stamp: 'aa 5/13/2023 20:03:27'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:28'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:28'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:28'!
m1 "comment"! !

!testRun: #ExtractAsParameterTest #test07CannotExtract_comment stamp: 'aa 5/13/2023 20:03:28'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:28'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:28'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:28'!
m1  10 ! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:28'!
sender_m1 self m1! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:28'!
m1: newParam  10 ! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:28' prior: 50610671!
sender_m1 self m1: 10! !

!methodRemoval: ClassToIntroduceParameter #m1 stamp: 'aa 5/13/2023 20:03:28'!
m1  10 !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:28' prior: 50610675!
m1: newParam newParam! !

!testRun: #ExtractAsParameterTest #test08CanExtractSelectionWithSeparators stamp: 'aa 5/13/2023 20:03:28'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:29'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:29'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:29'!
m1 1. self printString! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:29'!
sender_m1 self m1! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:29'!
m1: newParam 1. self printString! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:29' prior: 50610716!
sender_m1 self m1: 1! !

!methodRemoval: ClassToIntroduceParameter #m1 stamp: 'aa 5/13/2023 20:03:29'!
m1 1. self printString!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:29' prior: 50610720!
m1: newParam newParam. self printString! !

!testRun: #ExtractAsParameterTest #test09RemovesTrailingDotsFromSelection stamp: 'aa 5/13/2023 20:03:29'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:29'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:29'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:29'!
m1 (1)! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:29'!
sender_m1 self m1! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:30'!
m1: newParam (1)! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:30' prior: 50610762!
sender_m1 self m1: 1! !

!methodRemoval: ClassToIntroduceParameter #m1 stamp: 'aa 5/13/2023 20:03:30'!
m1 (1)!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:30' prior: 50610766!
m1: newParam newParam! !

!testRun: #ExtractAsParameterTest #test10CanExtractWithParenthesis stamp: 'aa 5/13/2023 20:03:30'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:30'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:30'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:30'!
m1 #assert:! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:30'!
sender_m1 self m1! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:30'!
m1: newParam #assert:! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:30' prior: 50610806!
sender_m1 self m1: #assert:! !

!methodRemoval: ClassToIntroduceParameter #m1 stamp: 'aa 5/13/2023 20:03:30'!
m1 #assert:!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:30' prior: 50610810!
m1: newParam newParam! !

!testRun: #ExtractAsParameterTest #test11CanExtract_symbol stamp: 'aa 5/13/2023 20:03:30'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:31'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:31'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:31'!
m1 false! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:31'!
sender_m1 self m1! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:31'!
m1: newParam false! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:31' prior: 50610851!
sender_m1 self m1: false! !

!methodRemoval: ClassToIntroduceParameter #m1 stamp: 'aa 5/13/2023 20:03:31'!
m1 false!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:31' prior: 50610855!
m1: newParam newParam! !

!testRun: #ExtractAsParameterTest #test12CanExtract_false stamp: 'aa 5/13/2023 20:03:31'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:31'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:31'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:31'!
m1 nil! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:32'!
sender_m1 self m1! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:32'!
m1: newParam nil! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:32' prior: 50610896!
sender_m1 self m1: nil! !

!methodRemoval: ClassToIntroduceParameter #m1 stamp: 'aa 5/13/2023 20:03:32'!
m1 nil!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:32' prior: 50610900!
m1: newParam newParam! !

!testRun: #ExtractAsParameterTest #test13CanExtract_nil stamp: 'aa 5/13/2023 20:03:32'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:32'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:32'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:32'!
m1: p1 1. self printString! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:32'!
sender_m1 self m1: #x ! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:32'!
m1: p1 m2: newParam  1. self printString! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:32' prior: 50610940!
sender_m1 self m1: #x m2: 1 ! !

!methodRemoval: ClassToIntroduceParameter #m1: stamp: 'aa 5/13/2023 20:03:32'!
m1: p1 1. self printString!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:32' prior: 50610944!
m1: p1 m2: newParam  newParam. self printString! !

!testRun: #ExtractAsParameterTest #test14CanExtactFromKeywordSelector stamp: 'aa 5/13/2023 20:03:32'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:33'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:33'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:33'!
m1 10 factorial! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:33'!
sender_m1 self m1! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:33'!
m1: newParam 10 factorial! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:33' prior: 50610986!
sender_m1 self m1: 10 factorial! !

!methodRemoval: ClassToIntroduceParameter #m1 stamp: 'aa 5/13/2023 20:03:33'!
m1 10 factorial!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:33' prior: 50610990!
m1: newParam newParam! !

!testRun: #ExtractAsParameterTest #test15CanExtractMessageSendToLiteral stamp: 'aa 5/13/2023 20:03:33'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:34'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:34'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:34'!
m1 10 + self! !

!testRun: #ExtractAsParameterTest #test16CannotExtractMessageSendWithInvalidNode stamp: 'aa 5/13/2023 20:03:34'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:34'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:34'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:34'!
m1 self + 10! !

!testRun: #ExtractAsParameterTest #test17CannotExtractMessageSendToInvalidNode stamp: 'aa 5/13/2023 20:03:34'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:34'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:34'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:34'!
m1 10 + 10 + 10! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:35'!
sender_m1 self m1! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:35'!
m1: newParam 10 + 10 + 10! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:35' prior: 50611081!
sender_m1 self m1: 10 + 10 + 10! !

!methodRemoval: ClassToIntroduceParameter #m1 stamp: 'aa 5/13/2023 20:03:35'!
m1 10 + 10 + 10!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:35' prior: 50611085!
m1: newParam newParam! !

!testRun: #ExtractAsParameterTest #test18CanExtractManyMessageSends stamp: 'aa 5/13/2023 20:03:35'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:35'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:35'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:35'!
m1 10 + 10 + self! !

!testRun: #ExtractAsParameterTest #test19CannotExtractManyMessageSendsWithInvalidNode stamp: 'aa 5/13/2023 20:03:35'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:36'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:36'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:36'!
m1 10 + 10! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:36'!
sender_m1 self m1! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:36'!
m1: newParam 10 + 10! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:36' prior: 50611151!
sender_m1 self m1: 10! !

!methodRemoval: ClassToIntroduceParameter #m1 stamp: 'aa 5/13/2023 20:03:36'!
m1 10 + 10!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:36' prior: 50611155!
m1: newParam newParam + 10! !

!testRun: #ExtractAsParameterTest #test20CanExtractPartOfAValidExpression stamp: 'aa 5/13/2023 20:03:36'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:36'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:36'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:36'!
m1 [10]! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:36'!
sender_m1 self m1! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:37'!
m1: newParam [10]! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:37' prior: 50611197!
sender_m1 self m1: [10]! !

!methodRemoval: ClassToIntroduceParameter #m1 stamp: 'aa 5/13/2023 20:03:37'!
m1 [10]!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:37' prior: 50611201!
m1: newParam newParam! !

!testRun: #ExtractAsParameterTest #test21CanExtractABlock stamp: 'aa 5/13/2023 20:03:37'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:37'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:37'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:37'!
m1 [self]! !

!testRun: #ExtractAsParameterTest #test22CannotExtractBlockWithInvalidNode stamp: 'aa 5/13/2023 20:03:37'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:38'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:38'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:38'!
m1 [1 + self]! !

!testRun: #ExtractAsParameterTest #test23CannotExtractBlockWithMessageSendWithInvalidNode stamp: 'aa 5/13/2023 20:03:38'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:38'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:38'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:38'!
m1 [1 + 1. 2 + 2]! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:38'!
sender_m1 self m1! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:39'!
m1: newParam [1 + 1. 2 + 2]! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:39' prior: 50611290!
sender_m1 self m1: [1 + 1. 2 + 2]! !

!methodRemoval: ClassToIntroduceParameter #m1 stamp: 'aa 5/13/2023 20:03:39'!
m1 [1 + 1. 2 + 2]!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:39' prior: 50611294!
m1: newParam newParam! !

!testRun: #ExtractAsParameterTest #test24CanExtractBlockWithManyExpressions stamp: 'aa 5/13/2023 20:03:39'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:39'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:39'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:39'!
m1 [:p1 | 1 + p1]! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:39'!
sender_m1 self m1! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:39'!
m1: newParam [:p1 | 1 + p1]! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:39' prior: 50611336!
sender_m1 self m1: [:p1 | 1 + p1]! !

!methodRemoval: ClassToIntroduceParameter #m1 stamp: 'aa 5/13/2023 20:03:39'!
m1 [:p1 | 1 + p1]!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:39' prior: 50611340!
m1: newParam newParam! !

!testRun: #ExtractAsParameterTest #test25CanExtractBlockWithParameters stamp: 'aa 5/13/2023 20:03:39'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:40'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:40'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:40'!
m1 | var1 | [ 1 + var1 ]! !

!testRun: #ExtractAsParameterTest #test26CannotExtractBlockThatReferencesMethodVariable stamp: 'aa 5/13/2023 20:03:40'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:40'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:40'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:40'!
m1 [:p1 | | v1 | v1 := 1. v1 + p1]! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:40'!
sender_m1 self m1! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:41'!
m1: newParam [:p1 | | v1 | v1 := 1. v1 + p1]! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:41' prior: 50611407!
sender_m1 self m1: [:p1 | | v1 | v1 := 1. v1 + p1]! !

!methodRemoval: ClassToIntroduceParameter #m1 stamp: 'aa 5/13/2023 20:03:41'!
m1 [:p1 | | v1 | v1 := 1. v1 + p1]!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:41' prior: 50611411!
m1: newParam newParam! !

!testRun: #ExtractAsParameterTest #test27CanExtractBlockWithParameterAndLocalVariable stamp: 'aa 5/13/2023 20:03:41'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:41'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:41'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:41'!
m1 [:p1 | p1] value: 1! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:41'!
sender_m1 self m1! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:41'!
m1: newParam [:p1 | p1] value: 1! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:42' prior: 50611454!
sender_m1 self m1: ([:p1 | p1] value: 1)! !

!methodRemoval: ClassToIntroduceParameter #m1 stamp: 'aa 5/13/2023 20:03:42'!
m1 [:p1 | p1] value: 1!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:42' prior: 50611458!
m1: newParam newParam! !

!testRun: #ExtractAsParameterTest #test28CanExtractBlockEvaluation stamp: 'aa 5/13/2023 20:03:42'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:42'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:42'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:42'!
m1! !

!testRun: #ExtractAsParameterTest #test29CannotExtractInvalidInterval stamp: 'aa 5/13/2023 20:03:42'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:43'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:43'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:43'!
m1! !

!testRun: #ExtractAsParameterTest #test30CannotExtractIntervalOutOfBounds stamp: 'aa 5/13/2023 20:03:43'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:43'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:43'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:43'!
m1 1! !

!testRun: #ExtractAsParameterTest #test31CannotExtractIfOriginalMethodIsNotInImplementors stamp: 'aa 5/13/2023 20:03:43'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:43'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:43'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:43'!
m1 1+1. 2+2! !

!testRun: #ExtractAsParameterTest #test32CannotExtractMoreThanOneExpression stamp: 'aa 5/13/2023 20:03:44'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:44'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:44'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:44'!
m1: p1 1! !

!testRun: #ExtractAsParameterTest #test33WhenAddingToUnaryMessageSelectorMustBeUnary stamp: 'aa 5/13/2023 20:03:44'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:44'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:44'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:44'!
m1 1! !

!testRun: #ExtractAsParameterTest #test34WhenAddingToKeywordMessageSelectorMustBeKeyword stamp: 'aa 5/13/2023 20:03:45'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:45'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:45'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:45'!
m1 10 + 10! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:45'!
m1: newParam 10 + 10! !

!methodRemoval: ClassToIntroduceParameter #m1 stamp: 'aa 5/13/2023 20:03:45'!
m1 10 + 10!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:45' prior: 50611646!
m1: newParam newParam + newParam! !

!testRun: #ExtractAsParameterTest #test35CanExtractManyIntervals stamp: 'aa 5/13/2023 20:03:45'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:46'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:46'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:46'!
m1 10 + self! !

!testRun: #ExtractAsParameterTest #test36CannotExtractIfAnyIntervalIsNotValid stamp: 'aa 5/13/2023 20:03:46'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:46'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:46'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:46'!
m1 10 + 11! !

!testRun: #ExtractAsParameterTest #test37CannotExtractIfSourceToExtractAreNotEqualInAllIntervals stamp: 'aa 5/13/2023 20:03:46'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:47'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:47'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:47'!
m1 [10] + [10]! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:47'!
m1: newParam [10] + [10]! !

!methodRemoval: ClassToIntroduceParameter #m1 stamp: 'aa 5/13/2023 20:03:47'!
m1 [10] + [10]!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:47' prior: 50611731!
m1: newParam newParam + newParam! !

!testRun: #ExtractAsParameterTest #test38CanExtractManyBlocksIfAreEqual stamp: 'aa 5/13/2023 20:03:47'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:47'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:47'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:47'!
m1 [10] + [ 10 ]! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:47'!
m1: newParam [10] + [ 10 ]! !

!methodRemoval: ClassToIntroduceParameter #m1 stamp: 'aa 5/13/2023 20:03:47'!
m1 [10] + [ 10 ]!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:47' prior: 50611768!
m1: newParam newParam + newParam! !

!testRun: #ExtractAsParameterTest #test39CanExtractManyBlocksIfSourceCodeNotEqualButSameAst stamp: 'aa 5/13/2023 20:03:47'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:48'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:48'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:48'!
m1 10 + 11! !

!testRun: #ExtractAsParameterTest #test40CannotExtractWithoutIntervals stamp: 'aa 5/13/2023 20:03:48'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:48'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:48'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:48'!
m1 10 + 10! !

!testRun: #ExtractAsParameterTest #test41DetectsAllRangesForLiteral stamp: 'aa 5/13/2023 20:03:48'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:49'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:49'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:49'!
m1 10 + 100! !

!testRun: #ExtractAsParameterTest #test42DoesNotMixesRangesForDifferentLiterals stamp: 'aa 5/13/2023 20:03:49'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:49'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:49'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:49'!
m1 [10] + [ 10 ]! !

!testRun: #ExtractAsParameterTest #test43DetectsRangesForEquivalentBlocks stamp: 'aa 5/13/2023 20:03:49'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:50'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:50'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:50'!
m1 10 factorial + 10    factorial! !

!testRun: #ExtractAsParameterTest #test44DetectsRangesForEquivalentMessageSends stamp: 'aa 5/13/2023 20:03:50'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:50'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:50'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:50'!
m1 [:p1 | 1 ] + [:p2 | 1]! !

!testRun: #ExtractAsParameterTest #test45DoesNotDetectEquiallySemanticBlocks stamp: 'aa 5/13/2023 20:03:50'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:51'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:51'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:51'!
m1 Array with: 1! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:51'!
sender_m1 self m1! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:51'!
m1: newParam Array with: 1! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:51' prior: 50611951!
sender_m1 self m1: (Array with: 1)! !

!methodRemoval: ClassToIntroduceParameter #m1 stamp: 'aa 5/13/2023 20:03:51'!
m1 Array with: 1!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:51' prior: 50611955!
m1: newParam newParam! !

!testRun: #ExtractAsParameterTest #test46CanExtractMessageSendToClassWithValidParameters stamp: 'aa 5/13/2023 20:03:51'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:51'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:51'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:51'!
m1 {}! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:51'!
sender_m1 self m1! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:51'!
m1: newParam {}! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:52' prior: 50611997!
sender_m1 self m1: {}! !

!methodRemoval: ClassToIntroduceParameter #m1 stamp: 'aa 5/13/2023 20:03:52'!
m1 {}!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:52' prior: 50612001!
m1: newParam newParam! !

!testRun: #ExtractAsParameterTest #test47CanExtractEmptyBraceArray stamp: 'aa 5/13/2023 20:03:52'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:52'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:52'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:52'!
m1 {1. {}. Array with: 1}! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:52'!
sender_m1 self m1! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:52'!
m1: newParam {1. {}. Array with: 1}! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:52' prior: 50612040!
sender_m1 self m1: {1. {}. Array with: 1}! !

!methodRemoval: ClassToIntroduceParameter #m1 stamp: 'aa 5/13/2023 20:03:52'!
m1 {1. {}. Array with: 1}!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:52' prior: 50612044!
m1: newParam newParam! !

!testRun: #ExtractAsParameterTest #test48CanExtractBraceArrayWithExtractableElements stamp: 'aa 5/13/2023 20:03:52'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:53'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:53'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:53'!
m1 {1. self m2 }! !

!testRun: #ExtractAsParameterTest #test49CannotExtractBraceArrayWithNoExtractableElements stamp: 'aa 5/13/2023 20:03:53'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:53'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:53'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:53'!
m1 Smalltalk! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:54'!
sender_m1 self m1! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:54'!
m1: newParam Smalltalk! !
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:54' prior: 50612112!
sender_m1 self m1: Smalltalk! !

!methodRemoval: ClassToIntroduceParameter #m1 stamp: 'aa 5/13/2023 20:03:54'!
m1 Smalltalk!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:54' prior: 50612116!
m1: newParam newParam! !

!testRun: #ExtractAsParameterTest #test50CanExtractReferenceToGlobal stamp: 'aa 5/13/2023 20:03:54'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:54'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToIntroduceParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:54'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToIntroduceParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:54'!
m1 __Smalltalk__! !

!testRun: #ExtractAsParameterTest #test51CannotExtractNotExistingGlobalReference stamp: 'aa 5/13/2023 20:03:54'!
PASSED!

!classRemoval: #ClassToIntroduceParameter stamp: 'aa 5/13/2023 20:03:55'!
RefactoringClassTestData subclass: #ClassToIntroduceParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:55'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:55'!
m1 ^ 8! !

!testRun: #ExtractMethodTest #test01NewSelectorShouldNotBeEmpty stamp: 'aa 5/13/2023 20:03:55'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:03:55'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:55'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:56'!
m1 ^ 8! !

!testRun: #ExtractMethodTest #test02NewSelectorShouldNotContainSeparators stamp: 'aa 5/13/2023 20:03:56'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:03:56'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:56'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:56'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:56'!
m1 ^ 8! !

!testRun: #ExtractMethodTest #test03ExtractingToSelectorAlreadyDefinedInTheClassRaisesAWarning stamp: 'aa 5/13/2023 20:03:56'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:03:57'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:57'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:57'!
m1 ^ 8! !

!testRun: #ExtractMethodTest #test04NewSelectorShouldNotStartWithANumber stamp: 'aa 5/13/2023 20:03:57'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:03:57'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:57'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:57'!
m1 ^ 8! !

!testRun: #ExtractMethodTest #test05NewUnarySelectorShouldNotStartWithASymbol stamp: 'aa 5/13/2023 20:03:57'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:03:58'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:58'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:58'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !

!testRun: #ExtractMethodTest #test06IntervalToExtractIsNotBeforeMethodSourceCodeBoundaries stamp: 'aa 5/13/2023 20:03:58'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:03:58'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:58'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:58'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !

!testRun: #ExtractMethodTest #test07IntervalToExtractIsNotAfterMethodSourceCodeBoundaries stamp: 'aa 5/13/2023 20:03:58'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:03:59'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:59'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:03:59'!
m1 ^ localVar + ((4))! !

!testRun: #ExtractMethodTest #test08IntervalToExtractShouldNotContainAReturnExpression stamp: 'aa 5/13/2023 20:03:59'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:03:59'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:03:59'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:03:59'!
m1 ^ 4! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:03:59'!
m2

	^ 4! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:03:59' prior: 50612392!
m1 ^ self m2! !

!testRun: #ExtractMethodTest #test09ExtractingALiteralCreatesANewMethodAndChangesExistingCodeToCallThatNewMethod stamp: 'aa 5/13/2023 20:03:59'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:00'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:00'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:00'!
m1 ^ 8! !

!testRun: #ExtractMethodTest #test10IntervalToExtractDoesNotContainsPartOfTheOriginalSelector stamp: 'aa 5/13/2023 20:04:00'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:00'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:00'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:00'!
m1 | localVar | ^ localVar + 3! !

!testRun: #ExtractMethodTest #test11IntervalToExtractDoesNotContainsPartOfLocalVariablesDefinition stamp: 'aa 5/13/2023 20:04:00'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:01'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:01'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:01'!
m1 <annoyingPragma>! !

!testRun: #ExtractMethodTest #test12IntervalToExtractDoesNotContainsPartOfPragmasDefinition stamp: 'aa 5/13/2023 20:04:01'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:01'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:01'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:01'!
m1 ^ 3 + ((4))! !

!testRun: #ExtractMethodTest #test13IntervalToExtractShouldBeAValidSmalltalkExpression stamp: 'aa 5/13/2023 20:04:01'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:02'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:02'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:02'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !

!testRun: #ExtractMethodTest #test14ItIsNotPossibleToExtractTheLeftSideOfAnAssignment stamp: 'aa 5/13/2023 20:04:02'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:02'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:02'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:02'!
m1 self m3.
	self m4: 5! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:02'!
m2

	self m3.
	self m4: 5! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:02' prior: 50612552!
m1 self m2! !

!testRun: #ExtractMethodTest #test15ExtractingAListOfStatementsCreatesANewMethodWithoutReturn stamp: 'aa 5/13/2023 20:04:02'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:03'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:03'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:03'!
m1 ^ 'hey true'! !

!testRun: #ExtractMethodTest #test16CanNotExtractPartOfALiteral stamp: 'aa 5/13/2023 20:04:03'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:03'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:03'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:03'!
m1 ^ '^ 3' size! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:03'!
m2

	^ '^ 3' size! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:04' prior: 50612607!
m1 ^ self m2! !

!testRun: #ExtractMethodTest #test17AStringContainingTheReturnCharacterCanBeExtracted stamp: 'aa 5/13/2023 20:04:04'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:04'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:04'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:04'!
m1
	
	self m3.
	self m4: 5.! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:04'!
m2

	self m3.
	self m4: 5! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:04' prior: 50612638!
m1
	
	self m2.! !

!testRun: #ExtractMethodTest #test18ExtractingAListOfStatementsIncludingDotsRemovesThemAndContinuesWithMethodExtraction stamp: 'aa 5/13/2023 20:04:04'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:05'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:05'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:05'!
m1 ^ ((42))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:05'!
m2

	^ 42! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:05' prior: 50612671!
m1 ^ ((self m2))! !

!testRun: #ExtractMethodTest #test19ASelectionContainingAdditionalParenthesesAtTheBeginningAndOrEndCanBeExtracted stamp: 'aa 5/13/2023 20:04:05'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:05'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:05'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:05'!
m1 | local | ^ local + 3! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:05'!
m2: local

	^ local + 3! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:05' prior: 50612703!
m1 | local | ^ self m2: local! !

!testRun: #ExtractMethodTest #test20ASelectionContainingALocalVariableIsParameterizedOnTheExtractedMessage stamp: 'aa 5/13/2023 20:04:05'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:06'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:06'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:06'!
m1 ^ (9) * 3! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:06'!
m2

	^ (9) * 3! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:06' prior: 50612736!
m1 ^ self m2! !

!testRun: #ExtractMethodTest #test21ASelectionContainingAdditionalParenthesesOnOneSideCanBeExtractedAndItIsNotTrimmed stamp: 'aa 5/13/2023 20:04:06'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:06'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:06'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:06'!
m1 | localVar | ^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:07'!
m2: localVar

	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:07' prior: 50612768!
m1 | localVar | ^ self m2: localVar! !

!testRun: #ExtractMethodTest #test22ItIsPossibleToExtractTheLastExpressionOfAMethod stamp: 'aa 5/13/2023 20:04:07'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:07'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:07'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:07'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !

!testRun: #ExtractMethodTest #test23CanNotExtractWithAnInvalidInterval stamp: 'aa 5/13/2023 20:04:07'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:07'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:07'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:07'!
m1 | localVar | localVar _ 8! !

!testRun: #ExtractMethodTest #test24ItIsNotPossibleToExtractAnIntervalIncludingATemporaryAssignmentExpression stamp: 'aa 5/13/2023 20:04:08'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:08'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:08'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:08'!
m1 ^ 8! !

!testRun: #ExtractMethodTest #test25NewUnarySelectorShouldNotContainInvalidCharacters stamp: 'aa 5/13/2023 20:04:08'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:08'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:08'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:08'!
m1 ^ [ |something| something _ 3 ]! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:09'!
m2

	^ [ |something| something _ 3 ]! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:09' prior: 50612881!
m1 ^ self m2! !

!testRun: #ExtractMethodTest #test26ItIsPossibleToExtractAnEntireBlockIncludingALocalAssignment stamp: 'aa 5/13/2023 20:04:09'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:09'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:09'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:09'!
m1 ^ 2 ifNil: [ #boo ] ifNotNil: [ #yay ]! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:09'!
m2

	^ 2 ifNil: [ #boo ] ifNotNil: [ #yay ]! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:09' prior: 50612914!
m1 ^ self m2! !

!testRun: #ExtractMethodTest #test27ItIsPossibleToExtractExpressionsWithOptimizedSelectors stamp: 'aa 5/13/2023 20:04:09'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:10'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:10'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:10'!
m1 | localVar | ^ #foo! !

!testRun: #ExtractMethodTest #test28ItIsNotPossibleToExtractALocalVariableInsideOfItsDeclaration stamp: 'aa 5/13/2023 20:04:10'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:10'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:10'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:10'!
m1: arg ^ 2 + arg * 3! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:10'!
m2: arg

	^ 2 + arg! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:10' prior: 50612971!
m1: arg ^ (self m2: arg) * 3! !

!testRun: #ExtractMethodTest #test29ExtractingABinaryExpressionToAKeywordMessageIntroducesParenthesesToNotBreakOriginalPrecedence stamp: 'aa 5/13/2023 20:04:10'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:11'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:11'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:11'!
m1 ^ `3 + 4`! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:11'!
m2

	^ `3 + 4`! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:11' prior: 50613004!
m1 ^ self m2! !

!testRun: #ExtractMethodTest #test30ItIsPossibleToExtractAQuotedExpression stamp: 'aa 5/13/2023 20:04:11'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:11'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:11'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:11'!
m1 ^ 2 factorial ifNotNil: [ #boo ]! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:11'!
m2

	^ 2 factorial ifNotNil: [ #boo ]! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:11' prior: 50613034!
m1 ^ self m2! !

!testRun: #ExtractMethodTest #test31ItIsPossibleToExtractExpressionsWithOptimizedSelectorsWhereTheReceiverIsNotASimpleLiteral stamp: 'aa 5/13/2023 20:04:11'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:12'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:12'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:12'!
m1 ^ [ | a | a _ 3 factorial ]! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:12'!
m2

	| a | a _ 3 factorial! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:12' prior: 50613068!
m1 ^ [ self m2 ]! !

!testRun: #ExtractMethodTest #test32ItIsPossibleToExtractATemporaryDeclarationOfABlockIfItIsNotUsedOutsideOfSelectionInterval stamp: 'aa 5/13/2023 20:04:12'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:12'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:12'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:12'!
m1 | a | a _ 3 factorial! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:12'!
m2

	| a | a _ 3 factorial! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:13' prior: 50613101!
m1 self m2! !

!testRun: #ExtractMethodTest #test33ItIsPossibleToExtractATemporaryDeclarationIfItIsNotUsedOutsideOfSelectionInterval stamp: 'aa 5/13/2023 20:04:13'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:13'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:13'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:13'!
m1 | localVar1 localVar2 | ^ localVar1 + localVar2 + 2! !

!testRun: #ExtractMethodTest #test34TryingToExtractAMethodWithLessArgumentsThanNeededFails stamp: 'aa 5/13/2023 20:04:13'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:13'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:13'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:13'!
m1 | localVar1 localVar2 | ^ localVar1 + localVar2 + 2! !

!testRun: #ExtractMethodTest #test35TryingToExtractAMethodWithMoreArgumentsThanNeededFails stamp: 'aa 5/13/2023 20:04:13'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:14'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:14'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:14'!
m1 ^ (3 + 2) factorial; yourself! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:14'!
m2

	^ (3 + 2) factorial; yourself! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:14' prior: 50613184!
m1 ^ self m2! !

!testRun: #ExtractMethodTest #test36ItIsPossibleToExtractACascadeExpression stamp: 'aa 5/13/2023 20:04:14'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:15'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:15'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:15'!
m1 | temp | []! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:15'!
m2

	| temp | []! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:15' prior: 50613216!
m1 self m2! !

!testRun: #ExtractMethodTest #test37ItIsPossibleATempDeclarationAlongWithABlock stamp: 'aa 5/13/2023 20:04:15'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:15'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:15'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:15'!
m1 ^ (  (3 + 4))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:15'!
m2

	^ 3 + 4! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:15' prior: 50613246!
m1 ^ (  (self m2))! !

!testRun: #ExtractMethodTest #test38ItIsPossibleToExtractCodeThatContainsMultipleParenthesisWithSpacesBetweenThem stamp: 'aa 5/13/2023 20:04:15'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:16'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:16'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:16'!
m1 ^ 42! !

!testRun: #ExtractMethodTest #test39TryingToExtractToAMethodThatExistsInASuperclassRaisesAWarning stamp: 'aa 5/13/2023 20:04:16'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:16'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:16'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:16'!
m1 |var| var _ 42. ^ var! !

!testRun: #ExtractMethodTest #test40CanNotExtractTemporaryAssignmentWithDeclarationIfTheVariableIsUsedOutsideOfSelectionInterval stamp: 'aa 5/13/2023 20:04:16'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:17'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:17'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:17'!
m1: arg ^ self! !

!testRun: #ExtractMethodTest #test41CannotExtractPartOfMethodSignature stamp: 'aa 5/13/2023 20:04:17'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:17'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:17'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:17'!
m1 10. 10! !
!ClassToExtractMethod methodsFor: 'something' stamp: 'aa 5/13/2023 20:04:17'!
m2

	^ 10! !
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:17' prior: 50613352!
m1 self m2. 10! !
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:17' prior: 50613359!
m1 self m2. self m2! !

!testRun: #ExtractMethodTest #test42ExtractsManyRepetitionsOnSameMethod stamp: 'aa 5/13/2023 20:04:17'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:18'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:18'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:18'!
m1 10! !
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:18'!
m1b 100+10! !
!ClassToExtractMethod methodsFor: 'something' stamp: 'aa 5/13/2023 20:04:18'!
m2

	^ 10! !
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:18' prior: 50613391!
m1b 100+self m2! !
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:18' prior: 50613387!
m1 self m2! !

!testRun: #ExtractMethodTest #test43ExtractsRepetitionsOnMoreThanOneMethod stamp: 'aa 5/13/2023 20:04:18'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:18'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:18'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:18'!
m1 true ifTrue: [self m1.
	self m2]! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:19'!
m2

	self m1.
	self m2! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:19' prior: 50613425!
m1 true ifTrue: [self m2]! !

!testRun: #ExtractMethodTest #test44CanExtractManyStatementsInsideABlock stamp: 'aa 5/13/2023 20:04:19'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:19'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:19'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:19'!
m1 [true] whileTrue: [ true ifTrue: [ self m1 ].
	true ifTrue: [ self m2 ].
	self m3]! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:19'!
m4

	true ifTrue: [ self m1 ].
	true ifTrue: [ self m2 ]! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'aa 5/13/2023 20:04:19' prior: 50613457!
m1 [true] whileTrue: [ self m4.
	self m3]! !

!testRun: #ExtractMethodTest #test45CanExtractCodeWithMoreThanOneBlockAndABlockAtTheEndInsideAnotherBlock stamp: 'aa 5/13/2023 20:04:19'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:20'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:20'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:20'!
m1 10! !

!testRun: #ExtractMethodFinderTest #test01FindsSelectionOnSourceMethod stamp: 'aa 5/13/2023 20:04:20'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:20'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:20'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:20'!
m1 10. 10! !

!testRun: #ExtractMethodFinderTest #test02FindsRepetitionsAfterSelection stamp: 'aa 5/13/2023 20:04:20'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:21'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:21'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:21'!
m1 10. 10! !

!testRun: #ExtractMethodFinderTest #test03FindsRepetitionsBeforeSelection stamp: 'aa 5/13/2023 20:04:21'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:21'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:21'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:21'!
m1 10. "10"! !

!testRun: #ExtractMethodFinderTest #test04DoesNotIncludeComments stamp: 'aa 5/13/2023 20:04:21'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:22'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:22'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:22'!
m1 10. 100! !

!testRun: #ExtractMethodFinderTest #test05DoesNotIncludeNotExtractableSourceCode stamp: 'aa 5/13/2023 20:04:22'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:22'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:22'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:22'!
m1 10! !
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:22'!
m1b 100+10! !

!testRun: #ExtractMethodFinderTest #test06FindsRepetitionsInOtherClassMethods stamp: 'aa 5/13/2023 20:04:22'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:23'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:23'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:23'!
m1 10. 10! !
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:23'!
m1b 100+10! !

!classDefinition: #SubclassToExtractMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:23'!
ClassToExtractMethod subclass: #SubclassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!SubclassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:23'!
m3 10! !

!testRun: #ExtractMethodFinderTest #test07FindsRepetitionsInSubclassesMethods stamp: 'aa 5/13/2023 20:04:23'!
PASSED!

!classRemoval: #SubclassToExtractMethod stamp: 'aa 5/13/2023 20:04:23'!
ClassToExtractMethod subclass: #SubclassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToExtractMethod stamp: 'aa 5/13/2023 20:04:23'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:23'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:23'!
m1 ^ 2! !

!testRun: #ExtractToTemporaryTest #test01NewVariableCanNotBeEmpty stamp: 'aa 5/13/2023 20:04:24'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'aa 5/13/2023 20:04:24'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:24'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:24'!
m1 ^ 2! !

!testRun: #ExtractToTemporaryTest #test02NewVariableHasToBeValid stamp: 'aa 5/13/2023 20:04:24'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'aa 5/13/2023 20:04:24'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:24'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:24'!
m1 | new | ^ 2! !

!testRun: #ExtractToTemporaryTest #test03NewVariableNameCanNotBeDefinedInMethod stamp: 'aa 5/13/2023 20:04:25'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'aa 5/13/2023 20:04:25'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:25'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:25'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:25'!
m1 ^ 78! !

!testRun: #ExtractToTemporaryTest #test04FailsIfNewTemporaryIsEqualToInstanceVariableInClass stamp: 'aa 5/13/2023 20:04:25'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'aa 5/13/2023 20:04:26'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:26'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRefactorSuperclass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:26'!
RefactoringClassTestData subclass: #ClassToRefactorSuperclass
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:26'!
m1 ^ 78! !

!testRun: #ExtractToTemporaryTest #test05FailsIfNewTemporaryIsEqualToInstanceVariableInAnySuperclass stamp: 'aa 5/13/2023 20:04:26'!
PASSED!

!classRemoval: #ClassToRefactorSuperclass stamp: 'aa 5/13/2023 20:04:26'!
RefactoringClassTestData subclass: #ClassToRefactorSuperclass
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToDoExtractTemporary stamp: 'aa 5/13/2023 20:04:26'!
AnObsoleteClassToRefactorSuperclass subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:26'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:26'!
m1 ^ 1! !

!testRun: #ExtractToTemporaryTest #test06SourceCodeToExtractCanNotIncludeReturn stamp: 'aa 5/13/2023 20:04:26'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'aa 5/13/2023 20:04:27'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:27'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:27'!
m1 ^ 1! !

!testRun: #ExtractToTemporaryTest #test07SourceCodeToExtractCanNotBeEmpty stamp: 'aa 5/13/2023 20:04:27'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'aa 5/13/2023 20:04:27'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:27'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:27'!
m1 ^ 1 + 3! !

!testRun: #ExtractToTemporaryTest #test08SourceCodeToExtractCanNotHaveSyntaxErrors stamp: 'aa 5/13/2023 20:04:27'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'aa 5/13/2023 20:04:28'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:28'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:28'!
m1 1+2. 3+4! !

!testRun: #ExtractToTemporaryTest #test09SourceCodeToExtractHasToBeOneStatement stamp: 'aa 5/13/2023 20:04:28'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'aa 5/13/2023 20:04:28'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:28'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:28'!
m1 ^ 1! !

!testRun: #ExtractToTemporaryTest #test10FailsIfIntervalToExtractIsBeforeMethodSourceCodeBoundaries stamp: 'aa 5/13/2023 20:04:28'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'aa 5/13/2023 20:04:29'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:29'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:29'!
m1 ^ 1! !

!testRun: #ExtractToTemporaryTest #test11FailsIfIntervalToExtractIsAfterMethodSourceCodeBoundaries stamp: 'aa 5/13/2023 20:04:29'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'aa 5/13/2023 20:04:29'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:29'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:29'!
m1

	^ 42! !
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:29' prior: 50613981!
m1

	| new |
	new _ 42.
	^ new! !

!testRun: #ExtractToTemporaryTest #test12ItIsPossibleToExtractASingleLiteralFromAMethodWithoutAnyTempsOrArguments stamp: 'aa 5/13/2023 20:04:29'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'aa 5/13/2023 20:04:30'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:30'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:30'!
m1

	| four |
	four _ 4.
	^ four + 2! !
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:30' prior: 50614011!
m1

	| four two |
	four _ 4.
	two _ 2.
	^ four + two! !

!testRun: #ExtractToTemporaryTest #test13ItIsPossibleToExtractASingleExpressionFromAMethodThatHasAlreadyOtherTemporary stamp: 'aa 5/13/2023 20:04:30'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'aa 5/13/2023 20:04:30'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:30'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:30'!
m1

	| |
	^ 3 factorial! !
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:30' prior: 50614043!
m1

	| f |
	f _ 3 factorial.
	^ f! !

!testRun: #ExtractToTemporaryTest #test14ItIsPossibleToExtractASingleExpressionFromAMethodThatHasAnEmptyTemporariesDeclaration stamp: 'aa 5/13/2023 20:04:30'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'aa 5/13/2023 20:04:31'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:31'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:31'!
m1

	^ 42! !
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:31' prior: 50614075!
m1

	| new |
	new := 42.
	^ new! !

!testRun: #ExtractToTemporaryTest #test15ItIsPossibleToExtractCodeAndGenerateAssignmentUsingAnsiAssignmentStyle stamp: 'aa 5/13/2023 20:04:31'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'aa 5/13/2023 20:04:31'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:31'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:31'!
m1

	^ [ self m2 ]! !
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:31' prior: 50614105!
m1

	^ [ | new |
	new _ self m2 ]! !

!testRun: #ExtractToTemporaryTest #test16ItIsPossibleToExtractASingleLiteralFromABlockWithoutAnyTempsOrArguments stamp: 'aa 5/13/2023 20:04:31'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'aa 5/13/2023 20:04:32'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:32'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:32'!
m1 ^ 1! !

!testRun: #ExtractToTemporaryTest #test17CannotExtractPartOfMethodName stamp: 'aa 5/13/2023 20:04:32'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'aa 5/13/2023 20:04:32'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:32'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:32'!
m1 ^ self m2! !

!testRun: #ExtractToTemporaryTest #test18CannotExtractPartOfMessageSend stamp: 'aa 5/13/2023 20:04:32'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'aa 5/13/2023 20:04:33'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:33'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:33'!
m1

	^ 42! !
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:33' prior: 50614184!
m1

	| new |
	new _ 42.
	^ new! !

!testRun: #ExtractToTemporaryTest #test19ItIsPossibleToExtractAnIntervalWithSomeExtraSpaces stamp: 'aa 5/13/2023 20:04:33'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'aa 5/13/2023 20:04:33'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:33'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:33'!
m1

	^ []! !
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:33' prior: 50614213!
m1

	| new |
	new _ [].
	^ new! !

!testRun: #ExtractToTemporaryTest #test20ItIsPossibleToExtractAnEmptyBlock stamp: 'aa 5/13/2023 20:04:33'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'aa 5/13/2023 20:04:34'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:34'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:34'!
m1 | existing | existing := 2! !

!testRun: #ExtractToTemporaryTest #test21CannotExtractLeftSideOfAssignment stamp: 'aa 5/13/2023 20:04:34'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'aa 5/13/2023 20:04:34'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:34'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:34'!
m1

	^ 3 factorial; yourself! !
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:34' prior: 50614267!
m1

	| new |
	new _ 3 factorial; yourself.
	^ new! !

!testRun: #ExtractToTemporaryTest #test22ItIsPossibleToExtractACascadeExpression stamp: 'aa 5/13/2023 20:04:34'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'aa 5/13/2023 20:04:35'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:35'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:35'!
m1 ^ 2! !
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:35' prior: 50614298!
m1 ^ 2! !
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:35' prior: 50614302!
m1 ^ 2! !
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:35' prior: 50614306!
m1 ^ 2! !
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:35' prior: 50614310!
m1 ^ 2! !
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:35' prior: 50614314!
m1 ^ 2! !

!testRun: #ExtractToTemporaryTest #test23CannotUseAReservedNameAsTheNewTemporaryVariable stamp: 'aa 5/13/2023 20:04:35'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'aa 5/13/2023 20:04:35'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:35'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:35'!
m1

	self run! !
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:35' prior: 50614343!
m1

	| action |
	action _ self run! !

!testRun: #ExtractToTemporaryTest #test24WhenExtractingAnEntireStatementItOnlyGeneratesTheVariableAssignment stamp: 'aa 5/13/2023 20:04:35'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'aa 5/13/2023 20:04:36'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:36'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:36'!
m1: arg ^ self! !

!testRun: #ExtractToTemporaryTest #test25CannotExtractArgumentNamesFromMethodSignature stamp: 'aa 5/13/2023 20:04:36'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'aa 5/13/2023 20:04:36'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ImplementorOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:36'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:36'!
m1 self doSomething.! !
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:36'!
m2 | t | self m1. ^t! !
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:36' prior: 50614402!
m2 | t | self doSomething. ^t! !

!testRun: #InlineMethodTest #test01InlineMethodOfSameClassWithoutReturnValue stamp: 'aa 5/13/2023 20:04:36'!
PASSED!

!classRemoval: #ImplementorOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:37'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ImplementorOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:37'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:37'!
m1: firstParam with: secondParam
	self use: firstParam. 
	self doSomethingWithParam: firstParam andParam: secondParam.! !
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:37'!
m2 | t | self m1: 5 with: 'aString'.
	 ^t! !
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:37' prior: 50614440!
m2 | t | self use: 5.
self doSomethingWithParam: 5 andParam: 'aString'.
	 ^t! !

!testRun: #InlineMethodTest #test02InlineMethodOfSameClassWithParametersAndWithoutReturnValue stamp: 'aa 5/13/2023 20:04:37'!
PASSED!

!classRemoval: #ImplementorOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:37'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ImplementorOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:37'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:37'!
m1 ^10.! !
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:37'!
m2 | t | t := self m1. ^t! !
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:37' prior: 50614478!
m2 | t | t := 10. ^t! !

!testRun: #InlineMethodTest #test03InlineMethodOfSameClassReturningConstantLiteral stamp: 'aa 5/13/2023 20:04:37'!
PASSED!

!classRemoval: #ImplementorOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:38'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ImplementorOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:38'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:38'!
m1 self m3.
self m4: 5.
 ^10.! !
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:38'!
m2 | t | t := self m1. ^t! !
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:38' prior: 50614514!
m2 | t | self m3.
self m4: 5.
t := 10. ^t! !

!testRun: #InlineMethodTest #test04InlineMethodOfSameClassWithMultipleStatementsAndReturn stamp: 'aa 5/13/2023 20:04:38'!
PASSED!

!classRemoval: #ImplementorOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:38'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ImplementorOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:38'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:38'!
m1 self m3. ^10.! !
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:39'!
m2 self m1. ^20! !
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:39' prior: 50614550!
m2 self m3.
10. ^20! !

!testRun: #InlineMethodTest #test05InlineMethodOfSameClassWithUnusedReturn stamp: 'aa 5/13/2023 20:04:39'!
PASSED!

!classRemoval: #ImplementorOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:39'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ImplementorOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:39'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:39'!
m1 | y z | y := 10. self m3. ^y.! !
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:39'!
m2 | t | t := self m1. ^20! !
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:39' prior: 50614586!
m2 | t y z | y := 10.
self m3.
t := y. ^20! !

!testRun: #InlineMethodTest #test06InlineMethodOfSameClassThatDeclaresTemporaryVariables stamp: 'aa 5/13/2023 20:04:39'!
PASSED!

!classRemoval: #ImplementorOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:40'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ImplementorOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:40'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:40'!
m1 | y z | y := 10. self m3. ^y.! !
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:40'!
m2 | t y | t := self m1. ^20! !
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:40' prior: 50614623!
m2 | t y y1 z | y1 := 10.
self m3.
t := y1. ^20! !

!testRun: #InlineMethodTest #test07InlineMethodOfSameClassThatDeclaresTemporaryVariablesAlreadyDeclared stamp: 'aa 5/13/2023 20:04:40'!
PASSED!

!classRemoval: #ImplementorOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:40'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ImplementorOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:40'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:40'!
m1 | y z | y := 10. self m3. ^y.! !
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:40'!
m2 | t y | t := [self m1]. ^20! !
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:40' prior: 50614660!
m2 | t y | t := [| y1 z |
	y1 := 10.
self m3.
y1.]. ^20! !

!testRun: #InlineMethodTest #test08InlineMethodDeclaresVariablesInClosestScope stamp: 'aa 5/13/2023 20:04:40'!
PASSED!

!classRemoval: #ImplementorOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:41'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ImplementorOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:41'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:41'!
m1 | y z | y := 10. ^y.! !
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:41'!
m2 | t y | t := [^self m1]. ^20! !
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:41' prior: 50614696!
m2 | t y | t := [| y1 z |
	y1 := 10.
^y1.]. ^20! !

!testRun: #InlineMethodTest #test09InlineMethodReturnedInFullClosureKeepsTheReturnSymbol stamp: 'aa 5/13/2023 20:04:41'!
PASSED!

!classRemoval: #ImplementorOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:41'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ImplementorOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:41'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SenderOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:41'!
RefactoringClassTestData subclass: #SenderOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:41'!
m1 | y z | y := 10. ^y.! !
!SenderOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:41'!
m2 | t y | ^ImplementorOfMethodToInlineClass new m1! !
!SenderOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:41' prior: 50614741!
m2 | t y y1 z | y1 := 10.
^y1.! !

!testRun: #InlineMethodTest #test10InlineMethodOfAnotherClass stamp: 'aa 5/13/2023 20:04:41'!
PASSED!

!classRemoval: #SenderOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:42'!
RefactoringClassTestData subclass: #SenderOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ImplementorOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:42'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ImplementorOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:42'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SenderOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:42'!
RefactoringClassTestData subclass: #SenderOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:42'!
m1 | y z | y := 10. self m3. ^y.! !
!SenderOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:42'!
m2 | t y | ^ImplementorOfMethodToInlineClass m1! !
!SenderOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:42' prior: 50614795!
m2 | t y y1 z | y1 := 10.
ImplementorOfMethodToInlineClass m3.
^y1.! !

!testRun: #InlineMethodTest #test11InlineClassMethodOfAnotherClass stamp: 'aa 5/13/2023 20:04:42'!
PASSED!

!classRemoval: #SenderOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:43'!
RefactoringClassTestData subclass: #SenderOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ImplementorOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:43'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ImplementorOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:43'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ImplementorOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:43'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: 'y'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SenderOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:43'!
RefactoringClassTestData subclass: #SenderOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:43'!
m1 y := 10. ^y.! !
!SenderOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:43'!
m2 ^ImplementorOfMethodToInlineClass new m1! !

!testRun: #InlineMethodTest #test12CanNotInlineMethodAccessingPrivateVariablesNotVisibleToSender stamp: 'aa 5/13/2023 20:04:43'!
PASSED!

!classRemoval: #SenderOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:43'!
RefactoringClassTestData subclass: #SenderOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ImplementorOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:43'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: 'y'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ImplementorOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:43'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SenderOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:43'!
RefactoringClassTestData subclass: #SenderOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:44'!
m1 | y | y := 10. (y > 9) ifTrue: [^y]. ^20.! !
!SenderOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:44'!
m2 ^ImplementorOfMethodToInlineClass new m1! !

!testRun: #InlineMethodTest #test13CanNotInlineMethodWithMultipleReturns stamp: 'aa 5/13/2023 20:04:44'!
PASSED!

!classRemoval: #SenderOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:44'!
RefactoringClassTestData subclass: #SenderOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ImplementorOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:44'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ImplementorOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:44'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SenderOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:44'!
RefactoringClassTestData subclass: #SenderOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:44'!
m1 | y | y := 10. (y > 9) ifTrue: [^y]! !
!SenderOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:44'!
m2 ^ImplementorOfMethodToInlineClass new m1! !

!testRun: #InlineMethodTest #test14CanNotInlineMethodWithExplicitAndImplicitReturns stamp: 'aa 5/13/2023 20:04:44'!
PASSED!

!classRemoval: #SenderOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:45'!
RefactoringClassTestData subclass: #SenderOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ImplementorOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:45'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ImplementorOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:45'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SenderOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:45'!
RefactoringClassTestData subclass: #SenderOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:45'!
m1 | y z | y := 10. self m3. ^y.! !
!SenderOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:45'!
m2 | t y | t := self m1. y := self m1. ^20! !
!SenderOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:45' prior: 50615004!
m2 | t y y1 z y2 z1 | y1 := 10.
self m3.
t := y1. y2 := 10.
self m3.
y := y2. ^20! !

!testRun: #InlineMethodTest #test15InlineUsagesOnSameClase stamp: 'aa 5/13/2023 20:04:45'!
PASSED!

!classRemoval: #SenderOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:46'!
RefactoringClassTestData subclass: #SenderOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ImplementorOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:46'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ImplementorOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:46'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SenderOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:46'!
RefactoringClassTestData subclass: #SenderOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:46'!
m1 | y z | y := 10. self m3. ^y.! !
!SenderOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:46'!
m2 | t y | t := self m1. ^20! !

!methodRemoval: ImplementorOfMethodToInlineClass #m1 stamp: 'aa 5/13/2023 20:04:46'!
m1 | y z | y := 10. self m3. ^y.!
!SenderOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:46' prior: 50615058!
m2 | t y y1 z | y1 := 10.
self m3.
t := y1. ^20! !

!testRun: #InlineMethodTest #test16InlineUsageAndRemoveMethod stamp: 'aa 5/13/2023 20:04:46'!
PASSED!

!classRemoval: #SenderOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:46'!
RefactoringClassTestData subclass: #SenderOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ImplementorOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:47'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ImplementorOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:47'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SenderOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:47'!
RefactoringClassTestData subclass: #SenderOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:47'!
m1 ^1.! !
!SenderOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:47'!
m2 self m1. ^20! !

!methodRemoval: ImplementorOfMethodToInlineClass #m1 stamp: 'aa 5/13/2023 20:04:47'!
m1 ^1.!
!SenderOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:47' prior: 50615114!
m2 1. ^20! !

!testRun: #InlineMethodTest #test17InlineMethodWithASingleReturnLineWhenLiteralResultIsNotAssigned stamp: 'aa 5/13/2023 20:04:47'!
PASSED!

!classRemoval: #SenderOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:47'!
RefactoringClassTestData subclass: #SenderOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ImplementorOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:47'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ImplementorOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:47'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SenderOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:47'!
RefactoringClassTestData subclass: #SenderOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:47'!
m1 | x y | x := 1. y := 2. ^x + y.! !
!SenderOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:47'!
m2 | b | b := [1 + self m1]. ^b value! !

!methodRemoval: ImplementorOfMethodToInlineClass #m1 stamp: 'aa 5/13/2023 20:04:47'!
m1 | x y | x := 1. y := 2. ^x + y.!
!SenderOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:47' prior: 50615169!
m2 | b | b := [| x y |
	x := 1.
y := 2.
1 + (x + y).]. ^b value! !

!testRun: #InlineMethodTest #test18InlineMethodUsedInLastStatementOfClosure stamp: 'aa 5/13/2023 20:04:47'!
PASSED!

!classRemoval: #SenderOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:48'!
RefactoringClassTestData subclass: #SenderOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ImplementorOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:48'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ImplementorOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:48'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SenderOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:48'!
RefactoringClassTestData subclass: #SenderOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:48'!
m1 | x y | 
		x := 1.
		y := 2.
		^x + y.! !
!SenderOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:48'!
m2 | b |
		b := [
			1 + self m1
		].
		^b value! !

!methodRemoval: ImplementorOfMethodToInlineClass #m1 stamp: 'aa 5/13/2023 20:04:48'!
m1 | x y | 
		x := 1.
		y := 2.
		^x + y.!
!SenderOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:48' prior: 50615227!
m2 | b |
		b := [
			| x y |
	x := 1.
			y := 2.
			1 + (x + y).
		].
		^b value! !

!testRun: #InlineMethodTest #test19InlineMethodIndentation stamp: 'aa 5/13/2023 20:04:48'!
PASSED!

!classRemoval: #SenderOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:49'!
RefactoringClassTestData subclass: #SenderOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ImplementorOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:49'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ImplementorOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:49'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SenderOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:49'!
RefactoringClassTestData subclass: #SenderOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:49'!
m1 ^5! !
!SenderOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:49'!
m2 ^3 * self m1! !

!methodRemoval: ImplementorOfMethodToInlineClass #m1 stamp: 'aa 5/13/2023 20:04:49'!
m1 ^5!
!SenderOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:49' prior: 50615285!
m2 ^3 * 5! !

!testRun: #InlineMethodTest #test20InlineMethodUsedInReturn stamp: 'aa 5/13/2023 20:04:49'!
PASSED!

!classRemoval: #SenderOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:49'!
RefactoringClassTestData subclass: #SenderOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ImplementorOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:50'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ImplementorOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:50'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SenderOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:50'!
RefactoringClassTestData subclass: #SenderOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:50'!
m1^5 + 10! !
!SenderOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:50'!
m2 ^3 * self m1! !

!methodRemoval: ImplementorOfMethodToInlineClass #m1 stamp: 'aa 5/13/2023 20:04:50'!
m1^5 + 10!
!SenderOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:50' prior: 50615338!
m2 ^3 * (5 + 10)! !

!testRun: #InlineMethodTest #test21InlineMethodAddsParenthesesWhenNeeded stamp: 'aa 5/13/2023 20:04:50'!
PASSED!

!classRemoval: #SenderOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:50'!
RefactoringClassTestData subclass: #SenderOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ImplementorOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:50'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ImplementorOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:50'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SenderOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:50'!
RefactoringClassTestData subclass: #SenderOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:50'!
m1 ^1.! !
!SenderOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:51'!
m2 ^self m1.! !
!SenderOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:51'!
m3 ^self m1.! !

!methodRemoval: ImplementorOfMethodToInlineClass #m1 stamp: 'aa 5/13/2023 20:04:51'!
m1 ^1.!
!SenderOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:51' prior: 50615397!
m3 ^1.! !
!SenderOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:51' prior: 50615393!
m2 ^1.! !

!testRun: #InlineMethodTest #test22InlineMethodOnSeveralSenders stamp: 'aa 5/13/2023 20:04:51'!
PASSED!

!classRemoval: #SenderOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:51'!
RefactoringClassTestData subclass: #SenderOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ImplementorOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:51'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ImplementorOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:51'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ImplementorOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:51'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: 'y'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:51'!
m1 y := 1. ^y.! !
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:51'!
m2 ^self m1.! !

!methodRemoval: ImplementorOfMethodToInlineClass #m1 stamp: 'aa 5/13/2023 20:04:52'!
m1 y := 1. ^y.!
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:52' prior: 50615454!
m2 y := 1.
^y.! !

!testRun: #InlineMethodTest #test23InlineMethodFromSameClassAccessingPrivateVariables stamp: 'aa 5/13/2023 20:04:52'!
PASSED!

!classRemoval: #ImplementorOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:52'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: 'y'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ImplementorOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:52'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:52'!
m2 ^5! !
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:52'!
m3 self m1 ; m2.! !

!testRun: #InlineMethodTest #test24CanNotInlineCascadingMessageSend stamp: 'aa 5/13/2023 20:04:52'!
PASSED!

!classRemoval: #ImplementorOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:53'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ImplementorOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:53'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SenderOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:53'!
RefactoringClassTestData subclass: #SenderOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:53'!
m1 | y z | y := 10. super m3. ^y.! !
!SenderOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:53'!
m2 | t y | ^ImplementorOfMethodToInlineClass new m1! !

!testRun: #InlineMethodTest #test25CanNotInlineMethodFromAnotherClassReferencingSuper stamp: 'aa 5/13/2023 20:04:53'!
PASSED!

!classRemoval: #SenderOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:53'!
RefactoringClassTestData subclass: #SenderOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ImplementorOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:53'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ImplementorOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:53'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SenderOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:53'!
RefactoringClassTestData subclass: #SenderOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:53'!
m1 | y z | y := 10. self m3. ^y.! !
!SenderOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:53'!
m2 | t y | ^ImplementorOfMethodToInlineClass new m1! !

!testRun: #InlineMethodTest #test26CanNotInlineMethodFromAnotherClassReferencingSelfWhenReceiverIsNotAVariable stamp: 'aa 5/13/2023 20:04:53'!
PASSED!

!classRemoval: #SenderOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:54'!
RefactoringClassTestData subclass: #SenderOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ImplementorOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:54'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ImplementorOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:54'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SenderOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:54'!
RefactoringClassTestData subclass: #SenderOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:54'!
m1 | y | y := 10. self m3. ^y.! !
!SenderOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:54'!
m2 | t | t := ImplementorOfMethodToInlineClass new . ^ t m1! !
!SenderOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:54' prior: 50615630!
m2 | t y | t := ImplementorOfMethodToInlineClass new . y := 10.
t m3.
^y.! !

!testRun: #InlineMethodTest #test27InlineMethodFromAnotherClassReferencingSelfWhenReceiverIsAVariable stamp: 'aa 5/13/2023 20:04:54'!
PASSED!

!classRemoval: #SenderOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:55'!
RefactoringClassTestData subclass: #SenderOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ImplementorOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:55'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ImplementorOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:55'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:55'!
m1 ^ 2 asString! !
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:55'!
m2 self m1! !
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:55' prior: 50615676!
m2  2 asString! !

!testRun: #InlineMethodTest #test28InlineMethodWithReturnUsedInSenderReturningImplicitSelf stamp: 'aa 5/13/2023 20:04:55'!
PASSED!

!classRemoval: #ImplementorOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:55'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ImplementorOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:55'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SenderOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:55'!
RefactoringClassTestData subclass: #SenderOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:55'!
m1 ^self doSomething.! !
!SenderOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:55'!
m2 self m1. ^20! !

!methodRemoval: ImplementorOfMethodToInlineClass #m1 stamp: 'aa 5/13/2023 20:04:55'!
m1 ^self doSomething.!
!SenderOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:55' prior: 50615720!
m2 self doSomething. ^20! !

!testRun: #InlineMethodTest #test29InlineMethodWithASingleReturnLineWhenNonLiteralResultIsNotAssigned stamp: 'aa 5/13/2023 20:04:55'!
PASSED!

!classRemoval: #SenderOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:56'!
RefactoringClassTestData subclass: #SenderOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ImplementorOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:56'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ImplementorOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:56'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SenderOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:56'!
RefactoringClassTestData subclass: #SenderOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:56'!
m1 ^10! !
!SenderOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:56'!
m2 ^self m2: { 2. self m1. 4 }! !

!methodRemoval: ImplementorOfMethodToInlineClass #m1 stamp: 'aa 5/13/2023 20:04:56'!
m1 ^10!
!SenderOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:56' prior: 50615776!
m2 ^self m2: { 2. 10. 4 }! !

!testRun: #InlineMethodTest #test30InlineMethodUsedInBrace stamp: 'aa 5/13/2023 20:04:56'!
PASSED!

!classRemoval: #SenderOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:57'!
RefactoringClassTestData subclass: #SenderOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ImplementorOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:57'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ImplementorOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:57'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SenderOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:57'!
RefactoringClassTestData subclass: #SenderOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:57'!
m1 ^10 + 5! !
!SenderOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:57'!
m2 ^self m2: { 2. self m1 * 3. 4 }! !

!methodRemoval: ImplementorOfMethodToInlineClass #m1 stamp: 'aa 5/13/2023 20:04:57'!
m1 ^10 + 5!
!SenderOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:57' prior: 50615830!
m2 ^self m2: { 2. (10 + 5) * 3. 4 }! !

!testRun: #InlineMethodTest #test31InlineMethodUsedInBraceAddingParentheses stamp: 'aa 5/13/2023 20:04:57'!
PASSED!

!classRemoval: #SenderOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:57'!
RefactoringClassTestData subclass: #SenderOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ImplementorOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:57'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ImplementorOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:57'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SenderOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:57'!
RefactoringClassTestData subclass: #SenderOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:57'!
m1 ^10.! !
!SenderOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:58'!
m2 self m1 + 10. ^20.! !

!methodRemoval: ImplementorOfMethodToInlineClass #m1 stamp: 'aa 5/13/2023 20:04:58'!
m1 ^10.!
!SenderOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:58' prior: 50615885!
m2 10 + 10. ^20.! !

!testRun: #InlineMethodTest #test32InlineMethodUsedReturningWithDotInMessageNode stamp: 'aa 5/13/2023 20:04:58'!
PASSED!

!classRemoval: #SenderOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:58'!
RefactoringClassTestData subclass: #SenderOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ImplementorOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:58'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ImplementorOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:58'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SenderOfMethodToInlineClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:58'!
RefactoringClassTestData subclass: #SenderOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ImplementorOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:58'!
m1^5 + 10! !
!SenderOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:58'!
m2 | res | res := self m1. ^res! !

!methodRemoval: ImplementorOfMethodToInlineClass #m1 stamp: 'aa 5/13/2023 20:04:59'!
m1^5 + 10!
!SenderOfMethodToInlineClass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:59' prior: 50615940!
m2 | res | res := 5 + 10. ^res! !

!testRun: #InlineMethodTest #test33InlineMethodReturningMessageNodeDoesNotAddParenthesesWhenNotNeeded stamp: 'aa 5/13/2023 20:04:59'!
PASSED!

!classRemoval: #SenderOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:59'!
RefactoringClassTestData subclass: #SenderOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ImplementorOfMethodToInlineClass stamp: 'aa 5/13/2023 20:04:59'!
RefactoringClassTestData subclass: #ImplementorOfMethodToInlineClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithMethodToInlineTemporaryVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:04:59'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:04:59'!
m1 | | ^nil.! !

!testRun: #InlineTemporaryVariableTest #test01VariableToInlineCanNotBeEmpty stamp: 'aa 5/13/2023 20:04:59'!
PASSED!

!classRemoval: #ClassWithMethodToInlineTemporaryVariable stamp: 'aa 5/13/2023 20:05:00'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithMethodToInlineTemporaryVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:00'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:00'!
m1 | |  ^nil.! !

!testRun: #InlineTemporaryVariableTest #test02VariableToInlineMustExistInSelector stamp: 'aa 5/13/2023 20:05:00'!
PASSED!

!classRemoval: #ClassWithMethodToInlineTemporaryVariable stamp: 'aa 5/13/2023 20:05:00'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithMethodToInlineTemporaryVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:00'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:00'!
m1 |t1| ^nil.! !
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:00' prior: 50616037!
m1 ^nil.! !

!testRun: #InlineTemporaryVariableTest #test03RefactoringRemovesUnusedTemporaryVariableDeclaration stamp: 'aa 5/13/2023 20:05:00'!
PASSED!

!classRemoval: #ClassWithMethodToInlineTemporaryVariable stamp: 'aa 5/13/2023 20:05:01'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithMethodToInlineTemporaryVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:01'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:01'!
m1 | t1 | t1 := 2. ^nil.! !
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:01' prior: 50616069!
m1 ^nil.! !

!testRun: #InlineTemporaryVariableTest #test04AssignmentToVariableToInlineIsDeleted stamp: 'aa 5/13/2023 20:05:01'!
PASSED!

!classRemoval: #ClassWithMethodToInlineTemporaryVariable stamp: 'aa 5/13/2023 20:05:01'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithMethodToInlineTemporaryVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:01'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:01'!
m1 | t1 | t1 := 1. t1 := 2. t1 := 3. ^nil.! !
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:01' prior: 50616101!
m1 | t1 | t1 := 1. t1 := 3. ^nil.! !

!testRun: #InlineTemporaryVariableTest #test05RefactoringScopeIsBetweenAssignments stamp: 'aa 5/13/2023 20:05:01'!
PASSED!

!classRemoval: #ClassWithMethodToInlineTemporaryVariable stamp: 'aa 5/13/2023 20:05:01'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithMethodToInlineTemporaryVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:01'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:01'!
m1 | t1 | t1 := self m1: 1. self m2: t1! !
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:02' prior: 50616135!
m1 self m2: self m1: 1! !

!testRun: #InlineTemporaryVariableTest #test06InlinedVariableUsagesAreReplacedWithTheVariablesValue stamp: 'aa 5/13/2023 20:05:02'!
PASSED!

!classRemoval: #ClassWithMethodToInlineTemporaryVariable stamp: 'aa 5/13/2023 20:05:02'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithMethodToInlineTemporaryVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:02'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:02'!
m1 | t1 | t1 := 1. ^t1 abs! !
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:02' prior: 50616169!
m1 ^1 abs! !

!testRun: #InlineTemporaryVariableTest #test07RefactoringDoesNotAddParenthesesWhenTempIsLiteralAndReferenceIsReceiverOfUnaryMessage stamp: 'aa 5/13/2023 20:05:02'!
PASSED!

!classRemoval: #ClassWithMethodToInlineTemporaryVariable stamp: 'aa 5/13/2023 20:05:02'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithMethodToInlineTemporaryVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:02'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:02'!
m1 | t1 | t1 := 1. ^5 * t1! !
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:03' prior: 50616202!
m1 ^5 * 1! !

!testRun: #InlineTemporaryVariableTest #test08RefactoringDoesNotAddParenthesesWhenTempIsLiteralAndReferenceIsArgumentOfBinaryMessage stamp: 'aa 5/13/2023 20:05:03'!
PASSED!

!classRemoval: #ClassWithMethodToInlineTemporaryVariable stamp: 'aa 5/13/2023 20:05:03'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithMethodToInlineTemporaryVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:03'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:03'!
m1 | t1 | t1 := 1 + 2. ^5 * t1! !
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:03' prior: 50616235!
m1 ^5 * (1 + 2)! !

!testRun: #InlineTemporaryVariableTest #test09RefactoringAddsParenthesesWhenTempIsBinaryAndReferenceIsArgumentOfBinaryMessage stamp: 'aa 5/13/2023 20:05:03'!
PASSED!

!classRemoval: #ClassWithMethodToInlineTemporaryVariable stamp: 'aa 5/13/2023 20:05:03'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithMethodToInlineTemporaryVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:03'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:03'!
m1 | t1 | t1 := 1 + 2. ^t1 * 5! !
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:03' prior: 50616268!
m1 ^1 + 2 * 5! !

!testRun: #InlineTemporaryVariableTest #test10RefactoringDoesNotAddParenthesesWhenTempIsBinaryAndReferenceIsReceiverOfBinaryMessage stamp: 'aa 5/13/2023 20:05:03'!
PASSED!

!classRemoval: #ClassWithMethodToInlineTemporaryVariable stamp: 'aa 5/13/2023 20:05:04'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithMethodToInlineTemporaryVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:04'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:04'!
m1 | t1 | t1 := 1 - 2. ^t1 abs! !
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:04' prior: 50616301!
m1 ^(1 - 2) abs! !

!testRun: #InlineTemporaryVariableTest #test11RefactoringAddsParenthesesWhenTempIsBinaryAndReferenceIsReceiverOfUnaryMessage stamp: 'aa 5/13/2023 20:05:04'!
PASSED!

!classRemoval: #ClassWithMethodToInlineTemporaryVariable stamp: 'aa 5/13/2023 20:05:04'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithMethodToInlineTemporaryVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:04'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:04'!
m1 | t1 | t1 := 1 * 5. ^t1 + t1 + t1! !
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:04' prior: 50616334!
m1 ^1 * 5 + (1 * 5) + (1 * 5)! !

!testRun: #InlineTemporaryVariableTest #test12RefactoringAddsParenthesesWhenTempIsBinaryAndReferenceIsPartOfMessageWhereReceiverIsAnotherReferenceToTemp stamp: 'aa 5/13/2023 20:05:04'!
PASSED!

!classRemoval: #ClassWithMethodToInlineTemporaryVariable stamp: 'aa 5/13/2023 20:05:05'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithMethodToInlineTemporaryVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:05'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:05'!
m1 | t1 | t1 := 1 + 2. ^self m2: t1! !
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:05' prior: 50616370!
m1 ^self m2: 1 + 2! !

!testRun: #InlineTemporaryVariableTest #test13RefactoringDoesNotAddParenthesesWhenTempIsBinaryAndReferenceIsArgumentOfKeywordMessage stamp: 'aa 5/13/2023 20:05:05'!
PASSED!

!classRemoval: #ClassWithMethodToInlineTemporaryVariable stamp: 'aa 5/13/2023 20:05:05'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithMethodToInlineTemporaryVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:05'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:05'!
m1 | t1 | t1 := self m2: 5. ^t1 * 2! !
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:05' prior: 50616405!
m1 ^(self m2: 5) * 2! !

!testRun: #InlineTemporaryVariableTest #test14RefactoringAddsParenthesesWhenTempIsKeywordMessageAndReferenceIsReceiverOfBinaryMessage stamp: 'aa 5/13/2023 20:05:05'!
PASSED!

!classRemoval: #ClassWithMethodToInlineTemporaryVariable stamp: 'aa 5/13/2023 20:05:06'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithMethodToInlineTemporaryVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:06'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:06'!
m1 | t1 | t1 := self m2: 5. ^2 * t1! !
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:06' prior: 50616440!
m1 ^2 * self m2: 5! !

!testRun: #InlineTemporaryVariableTest #test15RefactoringDoesNotAddParenthesesWhenTempIsKeywordMessageAndReferenceIsArgumentOfBinaryMessage stamp: 'aa 5/13/2023 20:05:06'!
PASSED!

!classRemoval: #ClassWithMethodToInlineTemporaryVariable stamp: 'aa 5/13/2023 20:05:06'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithMethodToInlineTemporaryVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:06'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:06'!
m1 | t1 | t1 := self m2: 5. ^t1 + t1 + 2 + t1 + t1! !
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:06' prior: 50616475!
m1 ^(self m2: 5) + (self m2: 5) + 2 + (self m2: 5) + self m2: 5! !

!testRun: #InlineTemporaryVariableTest #test16RefactoringAddsParenthesesWhenTempIsKeywordAndReferenceIsPartOfMessageWhereArgumentIsAnotherReferenceToTemp stamp: 'aa 5/13/2023 20:05:06'!
PASSED!

!classRemoval: #ClassWithMethodToInlineTemporaryVariable stamp: 'aa 5/13/2023 20:05:07'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithMethodToInlineTemporaryVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:07'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:07'!
m1 | t1 | t1 := (1 + 2). ^t1 + t1! !
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:07' prior: 50616512!
m1 ^(1 + 2) + (1 + 2)! !

!testRun: #InlineTemporaryVariableTest #test17RefactoringDoesNotAddParenthesesWhenBothValueAndReferenceAlreadyHaveThem stamp: 'aa 5/13/2023 20:05:07'!
PASSED!

!classRemoval: #ClassWithMethodToInlineTemporaryVariable stamp: 'aa 5/13/2023 20:05:07'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithMethodToInlineTemporaryVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:07'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:07'!
m1 | t1 t2 | t1 := 2 * 3. t2 := 5 * t1. t1 := 3 + t1! !
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:07' prior: 50616546!
m1 | t1 t2 | t2 := 5 * (2 * 3). t1 := 3 + (2 * 3)! !

!testRun: #InlineTemporaryVariableTest #test18RefactoringInlinesUsageOnNextAssignment stamp: 'aa 5/13/2023 20:05:07'!
PASSED!

!classRemoval: #ClassWithMethodToInlineTemporaryVariable stamp: 'aa 5/13/2023 20:05:08'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithMethodToInlineTemporaryVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:08'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:08'!
m1 | t1 b| t1 := 2. b := [5 * t1]. t1 := 3. ^b value.! !

!testRun: #InlineTemporaryVariableTest #test19CanNotRefactorTemporaryWhenAssignedAfterBeingReferencedInBlock stamp: 'aa 5/13/2023 20:05:08'!
PASSED!

!classRemoval: #ClassWithMethodToInlineTemporaryVariable stamp: 'aa 5/13/2023 20:05:08'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithMethodToInlineTemporaryVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:08'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:08'!
m1 | b1 b2| b1 := [ | t | t := 2. ^t * 2]. b2 := [ | t | t := 10. ^t+1]! !
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:08' prior: 50616609!
m1 | b1 b2| b1 := [ ^2 * 2]. b2 := [ | t | t := 10. ^t+1]! !

!testRun: #InlineTemporaryVariableTest #test20RefactoringBlockTemporaryDoesNotChangeFollowingBlocksDeclaringTemporaryWithSameName stamp: 'aa 5/13/2023 20:05:08'!
PASSED!

!classRemoval: #ClassWithMethodToInlineTemporaryVariable stamp: 'aa 5/13/2023 20:05:09'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithMethodToInlineTemporaryVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:09'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:09'!
m1 | b1 b2| b1 := [ | t | t := 2. ^t * 2]. b2 := [ | t | t := 10. ^t+1]! !
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:09' prior: 50616646!
m1 | b1 b2| b1 := [ | t | t := 2. ^t * 2]. b2 := [ ^10+1]! !

!testRun: #InlineTemporaryVariableTest #test21RefactoringBlockTemporaryDoesNotChangePreviousBlocksDeclaringTemporaryWithSameName stamp: 'aa 5/13/2023 20:05:09'!
PASSED!

!classRemoval: #ClassWithMethodToInlineTemporaryVariable stamp: 'aa 5/13/2023 20:05:09'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithMethodToInlineTemporaryVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:09'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:09'!
m1 | b1 b2| b1 := [ | b3 | b3 := [ | t | t := 2. ^t * 2]. ^b3 ]. b2 := [ | t | t := 10. ^t+1]! !
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:09' prior: 50616683!
m1 | b1 b2| b1 := [ | b3 | b3 := [ ^2 * 2]. ^b3 ]. b2 := [ | t | t := 10. ^t+1]! !

!testRun: #InlineTemporaryVariableTest #test22RefactoringNestedBlockTemporaryDoesNotChangeFollowingBlocksDeclaringTemporaryWithSameName stamp: 'aa 5/13/2023 20:05:09'!
PASSED!

!classRemoval: #ClassWithMethodToInlineTemporaryVariable stamp: 'aa 5/13/2023 20:05:10'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithMethodToInlineTemporaryVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:10'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:10'!
m1 | b1 b2| b1 := [ | t | t := 2. ^t * 2]. b2 := [ | t | t := 10. ^t+1]! !
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:10' prior: 50616721!
m1 | b1 b2| b1 := [ | t | t := 2. ^t * 2]. b2 := [ ^10+1]! !

!testRun: #InlineTemporaryVariableTest #test23RefactoringBlockTemporaryFromDeclarationDoesNotChangePreviousBlocksDeclaringTemporaryWithSameName stamp: 'aa 5/13/2023 20:05:10'!
PASSED!

!classRemoval: #ClassWithMethodToInlineTemporaryVariable stamp: 'aa 5/13/2023 20:05:10'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithMethodToInlineTemporaryVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:10'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:10'!
m1 | b1 b2| b1 := [ | t | t := 2. ^t * 2]. b2 := [ | t t2 t3 | t := 10. ^t+1]! !
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:10' prior: 50616758!
m1 | b1 b2| b1 := [ | t | t := 2. ^t * 2]. b2 := [ | t t3 | t := 10. ^t+1]! !

!testRun: #InlineTemporaryVariableTest #test24RefactoringOnlyRemovesDeclarationOfInlinedTemporary stamp: 'aa 5/13/2023 20:05:10'!
PASSED!

!classRemoval: #ClassWithMethodToInlineTemporaryVariable stamp: 'aa 5/13/2023 20:05:11'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithMethodToInlineTemporaryVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:11'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:11'!
m1 | t1 b| t1 := 2. b := 5 * t1. t1 := 3. ^b value.! !

!testRun: #InlineTemporaryVariableTest #test25CanNotRefactorTemporaryFromDeclarationWhenThereAreMultipleAssignments stamp: 'aa 5/13/2023 20:05:11'!
PASSED!

!classRemoval: #ClassWithMethodToInlineTemporaryVariable stamp: 'aa 5/13/2023 20:05:11'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithMethodToInlineTemporaryVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:11'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:11'!
m1 | t1 | t1 := self m2: 5. ^t1 do: 10! !
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:11' prior: 50616823!
m1 ^(self m2: 5) do: 10! !

!testRun: #InlineTemporaryVariableTest #test26RefactoringAddsParenthesesWhenTempIsKeywordMessageAndReferenceIsArgumentOfKeywordMessage stamp: 'aa 5/13/2023 20:05:11'!
PASSED!

!classRemoval: #ClassWithMethodToInlineTemporaryVariable stamp: 'aa 5/13/2023 20:05:12'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithMethodToInlineTemporaryVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:12'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:12'!
m1 | t1 b | t1 := 2. b := [5 * t1]. ^b value.! !
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:12' prior: 50616858!
m1 | b | b := [5 * 2]. ^b value.! !

!testRun: #InlineTemporaryVariableTest #test27RefactoringIsAllowedWhenVariableIsUsedInBlockButThereAreNoMoreAssignments stamp: 'aa 5/13/2023 20:05:12'!
PASSED!

!classRemoval: #ClassWithMethodToInlineTemporaryVariable stamp: 'aa 5/13/2023 20:05:12'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithMethodToInlineTemporaryVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:12'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:12'!
m1 | t1 b | b := 5 * t1. ^b value.! !

!testRun: #InlineTemporaryVariableTest #test28CanNotRefactorTemporaryFromDeclarationWhenVariableIsReferencedButNotAssigned stamp: 'aa 5/13/2023 20:05:12'!
PASSED!

!classRemoval: #ClassWithMethodToInlineTemporaryVariable stamp: 'aa 5/13/2023 20:05:13'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithMethodToInlineTemporaryVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:13'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:13'!
m1 | a | a := 1. ^self printOn: a! !
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:13' prior: 50616922!
m1 ^self printOn: 1! !

!testRun: #InlineTemporaryVariableTest #test29InlineReferenceAtEndOfMethodWithoutStatementEndingCharacter stamp: 'aa 5/13/2023 20:05:13'!
PASSED!

!classRemoval: #ClassWithMethodToInlineTemporaryVariable stamp: 'aa 5/13/2023 20:05:13'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithMethodToInlineTemporaryVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:13'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:13'!
m1 | a | a := 1. self printOn: a. ^a! !
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:13' prior: 50616956!
m1 self printOn: 1. ^1! !

!testRun: #InlineTemporaryVariableTest #test30InlineFromReferenceLocatedAfterAssignment stamp: 'aa 5/13/2023 20:05:13'!
PASSED!

!classRemoval: #ClassWithMethodToInlineTemporaryVariable stamp: 'aa 5/13/2023 20:05:13'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithMethodToInlineTemporaryVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:14'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:14'!
m1 | b t1 | b := [ t1 := 30. ^t1]. ^t1! !
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:14' prior: 50616989!
m1 | b t1 | b := [ ^30]. ^t1! !

!testRun: #InlineTemporaryVariableTest #test31InlineTemporaryUsedAfterAssignmentInBlock stamp: 'aa 5/13/2023 20:05:14'!
PASSED!

!classRemoval: #ClassWithMethodToInlineTemporaryVariable stamp: 'aa 5/13/2023 20:05:14'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithMethodToInlineTemporaryVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:14'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:14'!
m1 | b t1 t2 | b := [ t1 := 30. 15.]. t2 := 20. ^b2 value: 10 + t2! !
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:14' prior: 50617023!
m1 | b t1 | b := [ t1 := 30. 15.]. ^b2 value: 10 + 20! !

!testRun: #InlineTemporaryVariableTest #test32InlineTemporaryUsedAfterBlockWhenNotReferencedByIt stamp: 'aa 5/13/2023 20:05:14'!
PASSED!

!classRemoval: #ClassWithMethodToInlineTemporaryVariable stamp: 'aa 5/13/2023 20:05:14'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithMethodToInlineTemporaryVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:14'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithMethodToInlineTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:14'!
m1 | a | a := 1. 10 > 9 ifTrue: [a := 10]. ^a.! !

!testRun: #InlineTemporaryVariableTest #test33InlineTemporaryFromReferenceAfterAssignmentInBlock stamp: 'aa 5/13/2023 20:05:15'!
PASSED!

!classRemoval: #ClassWithMethodToInlineTemporaryVariable stamp: 'aa 5/13/2023 20:05:15'!
RefactoringClassTestData subclass: #ClassWithMethodToInlineTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddSuperclass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:15'!
RefactoringClassTestData subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AddedSuperclass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:15'!
RefactoringClassTestData subclass: #AddedSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddSuperclass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:15'!
AddedSuperclass subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #InsertSuperclassTest #test01ChangesTheSuperclassOfTheClassToRefactor stamp: 'aa 5/13/2023 20:05:15'!
PASSED!

!classRemoval: #ClassToAddSuperclass stamp: 'aa 5/13/2023 20:05:15'!
AddedSuperclass subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AddedSuperclass stamp: 'aa 5/13/2023 20:05:15'!
RefactoringClassTestData subclass: #AddedSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddSuperclass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:15'!
RefactoringClassTestData subclass: #ClassToAddSuperclass
	instanceVariableNames: 'instVar1 instVar2'
	classVariableNames: 'ClassVar1 ClassVar2'
	poolDictionaries: 'SharedAAA'
	category: '__Refactoring-TestData__'!

!classDefinition: #AddedSuperclass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:15'!
RefactoringClassTestData subclass: #AddedSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddSuperclass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:16'!
AddedSuperclass subclass: #ClassToAddSuperclass
	instanceVariableNames: 'instVar1 instVar2'
	classVariableNames: 'ClassVar1 ClassVar2'
	poolDictionaries: 'SharedAAA'
	category: '__Refactoring-TestData__'!

!testRun: #InsertSuperclassTest #test02ClassToRefactorStructureIsMaintained stamp: 'aa 5/13/2023 20:05:16'!
PASSED!

!classRemoval: #ClassToAddSuperclass stamp: 'aa 5/13/2023 20:05:16'!
AddedSuperclass subclass: #ClassToAddSuperclass
	instanceVariableNames: 'instVar1 instVar2'
	classVariableNames: 'ClassVar1 ClassVar2'
	poolDictionaries: 'private'
	category: '__Refactoring-TestData__'!

!classRemoval: #AddedSuperclass stamp: 'aa 5/13/2023 20:05:16'!
RefactoringClassTestData subclass: #AddedSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddSuperclass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:16'!
RefactoringClassTestData subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AddedSuperclass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:16'!
RefactoringClassTestData subclass: #AddedSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddSuperclass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:16'!
AddedSuperclass subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #InsertSuperclassTest #test03NewSuperclassCategoryIsTheSameAsClassToRefactorCategory stamp: 'aa 5/13/2023 20:05:16'!
PASSED!

!classRemoval: #ClassToAddSuperclass stamp: 'aa 5/13/2023 20:05:16'!
AddedSuperclass subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AddedSuperclass stamp: 'aa 5/13/2023 20:05:17'!
RefactoringClassTestData subclass: #AddedSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddSuperclass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:17'!
RefactoringClassTestData subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AddedSuperclass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:17'!
RefactoringClassTestData subclass: #AddedSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddSuperclass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:17'!
AddedSuperclass subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #InsertSuperclassTest #test04NewSuperclassHasNoVariables stamp: 'aa 5/13/2023 20:05:17'!
PASSED!

!classRemoval: #ClassToAddSuperclass stamp: 'aa 5/13/2023 20:05:17'!
AddedSuperclass subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AddedSuperclass stamp: 'aa 5/13/2023 20:05:17'!
RefactoringClassTestData subclass: #AddedSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddSuperclass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:17'!
RefactoringClassTestData subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AlreadyExistingClass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:17'!
RefactoringClassTestData subclass: #AlreadyExistingClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #InsertSuperclassTest #test05NewSuperclassShouldNotExist stamp: 'aa 5/13/2023 20:05:17'!
PASSED!

!classRemoval: #ClassToAddSuperclass stamp: 'aa 5/13/2023 20:05:17'!
RefactoringClassTestData subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AlreadyExistingClass stamp: 'aa 5/13/2023 20:05:18'!
RefactoringClassTestData subclass: #AlreadyExistingClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #InsertSuperclassTest #test06NewSuperclassNameHasToBeASymbol stamp: 'aa 5/13/2023 20:05:18'!
PASSED!

!testRun: #InsertSuperclassTest #test07NewSuperclassNameHasToStartWithUppercaseLetter stamp: 'aa 5/13/2023 20:05:18'!
PASSED!

!classDefinition: #ClassToAddSuperclass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:18'!
RefactoringClassTestData subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AddedSuperclass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:18'!
RefactoringClassTestData subclass: #AddedSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddSuperclass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:18'!
AddedSuperclass subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #InsertSuperclassTest #test08WhenAppliedToMetaclassWorksAsWithClass stamp: 'aa 5/13/2023 20:05:18'!
PASSED!

!classRemoval: #ClassToAddSuperclass stamp: 'aa 5/13/2023 20:05:18'!
AddedSuperclass subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AddedSuperclass stamp: 'aa 5/13/2023 20:05:18'!
RefactoringClassTestData subclass: #AddedSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #InsertSuperclassTest #test09NewSuperclassNameCanNotBeEmpty stamp: 'aa 5/13/2023 20:05:18'!
PASSED!

!testRun: #InsertSuperclassTest #test10NewSuperclassNameCanNotHaveSpaces stamp: 'aa 5/13/2023 20:05:18'!
PASSED!

!classDefinition: #ClassToMoveMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:19'!
RefactoringClassTestData subclass: #ClassToMoveMethod
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToMoveMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:19'!
newMethod ^a! !

!testRun: #MoveToInstanceOrClassMethodTest #test01CannotMoveWhenReferencingInstanceVariables stamp: 'aa 5/13/2023 20:05:19'!
PASSED!

!classRemoval: #ClassToMoveMethod stamp: 'aa 5/13/2023 20:05:19'!
RefactoringClassTestData subclass: #ClassToMoveMethod
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToMoveMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:19'!
RefactoringClassTestData subclass: #ClassToMoveMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: 'ClassToMoveMethod class' category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:19'!
ClassToMoveMethod class
	instanceVariableNames: 'a'!
!ClassToMoveMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:19'!
newMethod|a|! !

!testRun: #MoveToInstanceOrClassMethodTest #test02CannotMoveToClassWhenLocalVariableIsTheSameAsClassInstanceVariable stamp: 'aa 5/13/2023 20:05:19'!
PASSED!

!classRemoval: #ClassToMoveMethod stamp: 'aa 5/13/2023 20:05:20'!
RefactoringClassTestData subclass: #ClassToMoveMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToMoveMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:20'!
RefactoringClassTestData subclass: #ClassToMoveMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToMoveMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:20'!
RefactoringClassTestData subclass: #ClassToMoveMethod
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToMoveMethod class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:20'!
newMethod|a|! !

!testRun: #MoveToInstanceOrClassMethodTest #test03CannotMoveToInstanceWhenLocalVariableIsTheSameAsClassInstanceVariable stamp: 'aa 5/13/2023 20:05:20'!
PASSED!

!classRemoval: #ClassToMoveMethod stamp: 'aa 5/13/2023 20:05:20'!
RefactoringClassTestData subclass: #ClassToMoveMethod
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToMoveMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:20'!
RefactoringClassTestData subclass: #ClassToMoveMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToMoveMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:20'!
newMethod! !
!ClassToMoveMethod class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:20'!
newMethod! !

!methodRemoval: ClassToMoveMethod #newMethod stamp: 'aa 5/13/2023 20:05:20'!
newMethod!

!testRun: #MoveToInstanceOrClassMethodTest #test04InstanceMethodIsMovedToClassMethod stamp: 'aa 5/13/2023 20:05:20'!
PASSED!

!classRemoval: #ClassToMoveMethod stamp: 'aa 5/13/2023 20:05:21'!
RefactoringClassTestData subclass: #ClassToMoveMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToMoveMethod category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:21'!
RefactoringClassTestData subclass: #ClassToMoveMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToMoveMethod class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:21'!
newMethod! !
!ClassToMoveMethod methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:21'!
newMethod! !

!methodRemoval: ClassToMoveMethod class #newMethod stamp: 'aa 5/13/2023 20:05:21'!
newMethod!

!testRun: #MoveToInstanceOrClassMethodTest #test05ClassMethodIsMovedToInstanceMethod stamp: 'aa 5/13/2023 20:05:21'!
PASSED!

!classRemoval: #ClassToMoveMethod stamp: 'aa 5/13/2023 20:05:21'!
RefactoringClassTestData subclass: #ClassToMoveMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameClassTest #test01NewClassNameHasToBeDifferentToOldOne stamp: 'aa 5/13/2023 20:05:21'!
PASSED!

!testRun: #RenameClassTest #test02NewClassNameHasToBeASymbol stamp: 'aa 5/13/2023 20:05:21'!
PASSED!

!testRun: #RenameClassTest #test03NewClassNameHasToStartWithUppercaseLetter stamp: 'aa 5/13/2023 20:05:21'!
PASSED!

!testRun: #RenameClassTest #test04NewClassShouldNotExist stamp: 'aa 5/13/2023 20:05:21'!
PASSED!

!testRun: #RenameClassTest #test04_01NewClassNameShouldNotBeAGlobalVariable stamp: 'aa 5/13/2023 20:05:22'!
PASSED!

!testRun: #RenameClassTest #test05NewClassShouldNotBeUndeclare stamp: 'aa 5/13/2023 20:05:22'!
PASSED!

!classDefinition: #OldClassTest07 category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:22'!
RefactoringClassTestData subclass: #OldClassTest07
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRenamed: #OldClassTest07 as: #NewClassTest07 stamp: 'aa 5/13/2023 20:05:22'!
Smalltalk renameClassNamed: #OldClassTest07 as: #NewClassTest07!

!testRun: #RenameClassTest #test06OldClassIsRenamedToNewClass stamp: 'aa 5/13/2023 20:05:22'!
PASSED!

!classRemoval: #NewClassTest07 stamp: 'aa 5/13/2023 20:05:22'!
RefactoringClassTestData subclass: #NewClassTest07
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #OldClassTest07 category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:22'!
RefactoringClassTestData subclass: #OldClassTest07
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!OldClassTest07 methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:22'!
m1 OldClassTest07 new! !

!classRenamed: #OldClassTest07 as: #NewClassTest07 stamp: 'aa 5/13/2023 20:05:23'!
Smalltalk renameClassNamed: #OldClassTest07 as: #NewClassTest07!
!NewClassTest07 methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:23' prior: 50617549!
m1 NewClassTest07 new! !

!testRun: #RenameClassTest #test07OldClassDirectReferencesAreRenamed stamp: 'aa 5/13/2023 20:05:23'!
PASSED!

!classRemoval: #NewClassTest07 stamp: 'aa 5/13/2023 20:05:23'!
RefactoringClassTestData subclass: #NewClassTest07
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #OldClassTest08 category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:23'!
RefactoringClassTestData subclass: #OldClassTest08
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!OldClassTest08 methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:23'!
m1 #OldClassTest08 size! !

!classRenamed: #OldClassTest08 as: #NewClassTest8 stamp: 'aa 5/13/2023 20:05:23'!
Smalltalk renameClassNamed: #OldClassTest08 as: #NewClassTest8!
!NewClassTest8 methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:23' prior: 50617581!
m1 #NewClassTest8 size! !

!testRun: #RenameClassTest #test08OldClassLiteralReferencesAreRenamed stamp: 'aa 5/13/2023 20:05:23'!
PASSED!

!classRemoval: #NewClassTest8 stamp: 'aa 5/13/2023 20:05:23'!
RefactoringClassTestData subclass: #NewClassTest8
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #OldClassTest09 category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:24'!
RefactoringClassTestData subclass: #OldClassTest09
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!OldClassTest09 methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:24'!
m1 OldClassTest09 new. Object new! !

!classRenamed: #OldClassTest09 as: #NewClassTest09 stamp: 'aa 5/13/2023 20:05:24'!
Smalltalk renameClassNamed: #OldClassTest09 as: #NewClassTest09!
!NewClassTest09 methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:24' prior: 50617613!
m1 NewClassTest09 new. Object new! !

!testRun: #RenameClassTest #test09OtherClassDirectReferencesAreNotRenamed stamp: 'aa 5/13/2023 20:05:24'!
PASSED!

!classRemoval: #NewClassTest09 stamp: 'aa 5/13/2023 20:05:24'!
RefactoringClassTestData subclass: #NewClassTest09
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #OldClassTest10 category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:24'!
RefactoringClassTestData subclass: #OldClassTest10
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!OldClassTest10 methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:24'!
m1 #OldClassTest10 size. #Object size! !

!classRenamed: #OldClassTest10 as: #NewClassTest10 stamp: 'aa 5/13/2023 20:05:24'!
Smalltalk renameClassNamed: #OldClassTest10 as: #NewClassTest10!
!NewClassTest10 methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:24' prior: 50617645!
m1 #NewClassTest10 size. #Object size! !

!testRun: #RenameClassTest #test10OtherLiteralReferencesAreNotRenamed stamp: 'aa 5/13/2023 20:05:24'!
PASSED!

!classRemoval: #NewClassTest10 stamp: 'aa 5/13/2023 20:05:25'!
RefactoringClassTestData subclass: #NewClassTest10
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #OldClassTest11 category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:25'!
RefactoringClassTestData subclass: #OldClassTest11
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!OldClassTest11 methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:25'!
m1 OldClassTest11 new. #OldClassTest11 size! !

!classRenamed: #OldClassTest11 as: #NewClassTest11 stamp: 'aa 5/13/2023 20:05:25'!
Smalltalk renameClassNamed: #OldClassTest11 as: #NewClassTest11!
!NewClassTest11 methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:25' prior: 50617677!
m1 NewClassTest11 new. #NewClassTest11 size! !

!testRun: #RenameClassTest #test11OldClassDirectAndLiteralReferencesAreRenameAtOnce stamp: 'aa 5/13/2023 20:05:25'!
PASSED!

!classRemoval: #NewClassTest11 stamp: 'aa 5/13/2023 20:05:25'!
RefactoringClassTestData subclass: #NewClassTest11
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameClassTest #test12CanNotRenameAMetaclass stamp: 'aa 5/13/2023 20:05:25'!
PASSED!

!testRun: #RenameClassTest #test13NewClassNameHasToBeASymbol stamp: 'aa 5/13/2023 20:05:25'!
PASSED!

!classDefinition: #OldClassTest14 category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:26'!
RefactoringClassTestData subclass: #OldClassTest14
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameClassTest #test14NewClassNameCanNotHaveSpaces stamp: 'aa 5/13/2023 20:05:26'!
PASSED!

!classRemoval: #OldClassTest14 stamp: 'aa 5/13/2023 20:05:26'!
RefactoringClassTestData subclass: #OldClassTest14
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassReferencingClassVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:26'!
RefactoringClassTestData subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassReferencingClassVar methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:26'!
m1 ^OldClassTest15! !

!classDefinition: #OldClassTest15 category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:26'!
RefactoringClassTestData subclass: #OldClassTest15
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRenamed: #OldClassTest15 as: #NewClassTest15 stamp: 'aa 5/13/2023 20:05:26'!
Smalltalk renameClassNamed: #OldClassTest15 as: #NewClassTest15!

!testRun: #RenameClassTest #test15ItDoesNotRenameReferencesToClassVariableWithSameName stamp: 'aa 5/13/2023 20:05:26'!
PASSED!

!classRemoval: #NewClassTest15 stamp: 'aa 5/13/2023 20:05:26'!
RefactoringClassTestData subclass: #NewClassTest15
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassReferencingClassVar stamp: 'aa 5/13/2023 20:05:27'!
RefactoringClassTestData subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: 'OldClassTest15'
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassReferencingClassVarSuperclass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:27'!
RefactoringClassTestData subclass: #ClassReferencingClassVarSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassReferencingClassVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:27'!
ClassReferencingClassVarSuperclass subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassReferencingClassVar methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:27'!
m1 ^OldClassTest16! !

!classDefinition: #OldClassTest16 category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:27'!
RefactoringClassTestData subclass: #OldClassTest16
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRenamed: #OldClassTest16 as: #NewClassTest16 stamp: 'aa 5/13/2023 20:05:27'!
Smalltalk renameClassNamed: #OldClassTest16 as: #NewClassTest16!

!testRun: #RenameClassTest #test16ItDoesNotRenameReferencesToClassVariableWithSameNameDefinedInAnySuperclass stamp: 'aa 5/13/2023 20:05:27'!
PASSED!

!classRemoval: #NewClassTest16 stamp: 'aa 5/13/2023 20:05:27'!
RefactoringClassTestData subclass: #NewClassTest16
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassReferencingClassVar stamp: 'aa 5/13/2023 20:05:27'!
ClassReferencingClassVarSuperclass subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassReferencingClassVarSuperclass stamp: 'aa 5/13/2023 20:05:28'!
RefactoringClassTestData subclass: #ClassReferencingClassVarSuperclass
	instanceVariableNames: ''
	classVariableNames: 'OldClassTest16'
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassReferencingClassVarSuperclass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:28'!
RefactoringClassTestData subclass: #ClassReferencingClassVarSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassReferencingClassVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:28'!
ClassReferencingClassVarSuperclass subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassReferencingClassVar methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:28'!
m1 ^NewClassTest17! !

!classDefinition: #OldClassTest17 category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:28'!
RefactoringClassTestData subclass: #OldClassTest17
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRenamed: #OldClassTest17 as: #NewClassTest17 stamp: 'aa 5/13/2023 20:05:28'!
Smalltalk renameClassNamed: #OldClassTest17 as: #NewClassTest17!

!testRun: #RenameClassTest #test17ItDoesNotRenameReferencesToClassVariableWithSameNameAsNewClassDefinedInAnySuperclass stamp: 'aa 5/13/2023 20:05:28'!
PASSED!

!classRemoval: #NewClassTest17 stamp: 'aa 5/13/2023 20:05:28'!
RefactoringClassTestData subclass: #NewClassTest17
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassReferencingClassVar stamp: 'aa 5/13/2023 20:05:28'!
ClassReferencingClassVarSuperclass subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassReferencingClassVarSuperclass stamp: 'aa 5/13/2023 20:05:28'!
RefactoringClassTestData subclass: #ClassReferencingClassVarSuperclass
	instanceVariableNames: ''
	classVariableNames: 'NewClassTest17'
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #OldClassTest18 category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:28'!
RefactoringClassTestData subclass: #OldClassTest18
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!OldClassTest18 methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:28'!
m1 ^OldClassTest18! !

!classRenamed: #OldClassTest18 as: #NewClassTest18 stamp: 'aa 5/13/2023 20:05:29'!
Smalltalk renameClassNamed: #OldClassTest18 as: #NewClassTest18!
!NewClassTest18 methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:29' prior: 50617911!
m1 ^NewClassTest18! !

!testRun: #RenameClassTest #test18WorksCorrectlyWhenSourceCodeEndsWithClassToRename stamp: 'aa 5/13/2023 20:05:29'!
PASSED!

!classRemoval: #NewClassTest18 stamp: 'aa 5/13/2023 20:05:29'!
RefactoringClassTestData subclass: #NewClassTest18
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #OldClassTest18 category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:29'!
RefactoringClassTestData subclass: #OldClassTest18
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameClassTest #test19RenamesClassWhenMethodReferencesClassAndDoesNothing stamp: 'aa 5/13/2023 20:05:29'!
PASSED!

!classRemoval: #OldClassTest18 stamp: 'aa 5/13/2023 20:05:29'!
RefactoringClassTestData subclass: #OldClassTest18
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassReferencingClassVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:29'!
RefactoringClassTestData subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassReferencingClassVar class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:29'!
m1 ^OldClassTest15! !

!classDefinition: #OldClassTest15 category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:30'!
RefactoringClassTestData subclass: #OldClassTest15
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRenamed: #OldClassTest15 as: #NewClassTest15 stamp: 'aa 5/13/2023 20:05:30'!
Smalltalk renameClassNamed: #OldClassTest15 as: #NewClassTest15!

!testRun: #RenameClassTest #test20ItDoesNotRenameReferencesToClassVariableWithSameNameAndReferencedInClassMethod stamp: 'aa 5/13/2023 20:05:30'!
PASSED!

!classRemoval: #NewClassTest15 stamp: 'aa 5/13/2023 20:05:30'!
RefactoringClassTestData subclass: #NewClassTest15
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassReferencingClassVar stamp: 'aa 5/13/2023 20:05:30'!
RefactoringClassTestData subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: 'OldClassTest15'
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameGlobalTest #test00GlobalCanNotBeClass stamp: 'aa 5/13/2023 20:05:30'!
PASSED!

!testRun: #RenameGlobalTest #test01NewNameHasToBeDifferentToOldOne stamp: 'aa 5/13/2023 20:05:30'!
PASSED!

!testRun: #RenameGlobalTest #test02NewNameHasToBeASymbol stamp: 'aa 5/13/2023 20:05:31'!
PASSED!

!testRun: #RenameGlobalTest #test03NewNameShouldNotBeAClass stamp: 'aa 5/13/2023 20:05:31'!
PASSED!

!testRun: #RenameGlobalTest #test04NewNameShouldNotBeAGlobalVariable stamp: 'aa 5/13/2023 20:05:31'!
PASSED!

!testRun: #RenameGlobalTest #test06OldNameIsRenamedToNewName stamp: 'aa 5/13/2023 20:05:31'!
PASSED!

!classDefinition: #AClassToRefactor category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:32'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:32'!
m1 ^OldNameToRename__! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:32' prior: 50618032!
m1 ^NewNameToRename__! !

!testRun: #RenameGlobalTest #test07OldDirectReferencesAreRenamed stamp: 'aa 5/13/2023 20:05:32'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'aa 5/13/2023 20:05:32'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:32'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:32'!
m1 ^#OldNameToRename__! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:32' prior: 50618059!
m1 ^#NewNameToRename__! !

!testRun: #RenameGlobalTest #test08OldNameLiteralReferencesAreRenamed stamp: 'aa 5/13/2023 20:05:32'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'aa 5/13/2023 20:05:33'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameGlobalTest #test09NewNameHasToBeASymbol stamp: 'aa 5/13/2023 20:05:33'!
PASSED!

!testRun: #RenameGlobalTest #test10NewNameCanNotHaveSpaces stamp: 'aa 5/13/2023 20:05:33'!
PASSED!

!classDefinition: #ClassReferencingClassVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:33'!
RefactoringClassTestData subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassReferencingClassVar methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:33'!
m1 ^OldNameToRename__! !

!testRun: #RenameGlobalTest #test11ItDoesNotRenameReferencesToClassVariableWithSameName stamp: 'aa 5/13/2023 20:05:33'!
PASSED!

!classRemoval: #ClassReferencingClassVar stamp: 'aa 5/13/2023 20:05:34'!
RefactoringClassTestData subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: 'OldNameToRename__'
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassReferencingClassVarSuperclass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:34'!
RefactoringClassTestData subclass: #ClassReferencingClassVarSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassReferencingClassVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:34'!
ClassReferencingClassVarSuperclass subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassReferencingClassVar methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:34'!
m1 ^OldNameRenamed__! !

!testRun: #RenameGlobalTest #test12ItDoesNotRenameReferencesToClassVariableWithSameNameDefinedInAnySuperclass stamp: 'aa 5/13/2023 20:05:34'!
PASSED!

!classRemoval: #ClassReferencingClassVar stamp: 'aa 5/13/2023 20:05:34'!
ClassReferencingClassVarSuperclass subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassReferencingClassVarSuperclass stamp: 'aa 5/13/2023 20:05:34'!
RefactoringClassTestData subclass: #ClassReferencingClassVarSuperclass
	instanceVariableNames: ''
	classVariableNames: 'OldNameRenamed__'
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameGlobalTest #test13OldNameMustBeDefined stamp: 'aa 5/13/2023 20:05:34'!
PASSED!

!classDefinition: #ClassReferencingClassVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:35'!
RefactoringClassTestData subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassReferencingClassVar class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:35'!
m1 ^OldNameToRename__! !

!testRun: #RenameGlobalTest #test14ItDoesNotRenameReferencesToClassVariableFromClassSideWithSameName stamp: 'aa 5/13/2023 20:05:35'!
PASSED!

!classRemoval: #ClassReferencingClassVar stamp: 'aa 5/13/2023 20:05:35'!
RefactoringClassTestData subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: 'OldNameToRename__'
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameGlobalTest #test15OldNameCanNotBeEmpty stamp: 'aa 5/13/2023 20:05:35'!
PASSED!

!testRun: #RenameTemporaryTest #test01VariableToRenameHasToBeDefined stamp: 'aa 5/13/2023 20:05:35'!
PASSED!

!testRun: #RenameTemporaryTest #test02NewVariableNameCanNotBeEmpty stamp: 'aa 5/13/2023 20:05:36'!
PASSED!

!testRun: #RenameTemporaryTest #test03NewVariableHasToBeValid stamp: 'aa 5/13/2023 20:05:36'!
PASSED!

!testRun: #RenameTemporaryTest #test04NewVariableNameCanNotBeDefinedInMethod stamp: 'aa 5/13/2023 20:05:36'!
PASSED!

!classDefinition: #ClassToRenameTemp category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:36'!
RefactoringClassTestData subclass: #ClassToRenameTemp
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameTemporaryTest #test05FailsIfNewTemporaryIsEqualToInstanceVariableInClass stamp: 'aa 5/13/2023 20:05:36'!
PASSED!

!classRemoval: #ClassToRenameTemp stamp: 'aa 5/13/2023 20:05:37'!
RefactoringClassTestData subclass: #ClassToRenameTemp
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRefactorSuperclass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:37'!
RefactoringClassTestData subclass: #ClassToRefactorSuperclass
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameTemp category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:37'!
ClassToRefactorSuperclass subclass: #ClassToRenameTemp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameTemporaryTest #test06FailsIfNewTemporaryIsEqualToInstanceVariableInAnySuperclass stamp: 'aa 5/13/2023 20:05:37'!
PASSED!

!classRemoval: #ClassToRenameTemp stamp: 'aa 5/13/2023 20:05:37'!
ClassToRefactorSuperclass subclass: #ClassToRenameTemp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRefactorSuperclass stamp: 'aa 5/13/2023 20:05:37'!
RefactoringClassTestData subclass: #ClassToRefactorSuperclass
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameTemporaryTest #test07RenameCreatesNewTemporaryVariableAndDeletesOldOne stamp: 'aa 5/13/2023 20:05:37'!
PASSED!

!testRun: #RenameTemporaryTest #test08RenameChangesReferencesFromOldVariableToNewVariable stamp: 'aa 5/13/2023 20:05:37'!
PASSED!

!testRun: #RenameTemporaryTest #test09RenamesArguments stamp: 'aa 5/13/2023 20:05:38'!
PASSED!

!testRun: #RenameTemporaryTest #test10NewVariableNameCanNotBeDefinedAsBlockArgument stamp: 'aa 5/13/2023 20:05:38'!
PASSED!

!testRun: #RenameTemporaryTest #test11RenamesBlockArguments stamp: 'aa 5/13/2023 20:05:38'!
PASSED!

!testRun: #RenameTemporaryTest #test12RenamesBlockTemporaries stamp: 'aa 5/13/2023 20:05:38'!
PASSED!

!testRun: #RenameTemporaryTest #test13OldNodeMustBePartOfMethodNode stamp: 'aa 5/13/2023 20:05:38'!
PASSED!

!testRun: #RenameTemporaryTest #test14OldVariableNodeMustBeArgOrTempNode stamp: 'aa 5/13/2023 20:05:39'!
PASSED!

!testRun: #RenameTemporaryTest #test15RenameVariablesWithSameNameInDifferentBlocksCorrectly stamp: 'aa 5/13/2023 20:05:39'!
PASSED!

!testRun: #RenameTemporaryTest #test16CantRenameVariableToANameAlreadyUsedInAnUpperBlock stamp: 'aa 5/13/2023 20:05:39'!
PASSED!

!testRun: #RenameTemporaryTest #test17RenamesOneCharVariableAfterAReturnWithoutCharsAfterThatCorrectly stamp: 'aa 5/13/2023 20:05:39'!
PASSED!

!testRun: #RenameTemporaryTest #test18CantRenameVariableToAReservedName stamp: 'aa 5/13/2023 20:05:39'!
PASSED!

!classDefinition: #ClassToPushInstanceVariableDown category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:39'!
RefactoringClassTestData subclass: #ClassToPushInstanceVariableDown
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #PushDownInstanceVariableTest #test01AnInstanceVariableDoesNotExistOnClassToFactorCannotBePushedDownToSubclasses stamp: 'aa 5/13/2023 20:05:39'!
PASSED!

!classRemoval: #ClassToPushInstanceVariableDown stamp: 'aa 5/13/2023 20:05:40'!
RefactoringClassTestData subclass: #ClassToPushInstanceVariableDown
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushInstanceVariableDown category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:40'!
RefactoringClassTestData subclass: #ClassToPushInstanceVariableDown
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToPushInstanceVariableDown methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:40'!
newMethod^ a! !

!classDefinition: #SubclassWithoutInstVarOne category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:40'!
ClassToPushInstanceVariableDown subclass: #SubclassWithoutInstVarOne
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SubclassWithoutInstVarTwo category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:40'!
ClassToPushInstanceVariableDown subclass: #SubclassWithoutInstVarTwo
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #PushDownInstanceVariableTest #test02AnInstanceVariableThatIsAccessedOnClassToRefactorCannotBePushedDownToAllSubclasses stamp: 'aa 5/13/2023 20:05:40'!
PASSED!

!classRemoval: #SubclassWithoutInstVarTwo stamp: 'aa 5/13/2023 20:05:40'!
ClassToPushInstanceVariableDown subclass: #SubclassWithoutInstVarTwo
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #SubclassWithoutInstVarOne stamp: 'aa 5/13/2023 20:05:40'!
ClassToPushInstanceVariableDown subclass: #SubclassWithoutInstVarOne
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToPushInstanceVariableDown stamp: 'aa 5/13/2023 20:05:41'!
RefactoringClassTestData subclass: #ClassToPushInstanceVariableDown
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushInstanceVariableDown category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:41'!
RefactoringClassTestData subclass: #ClassToPushInstanceVariableDown
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SubclassWithoutInstVarOne category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:41'!
ClassToPushInstanceVariableDown subclass: #SubclassWithoutInstVarOne
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SubclassWithoutInstVarTwo category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:41'!
ClassToPushInstanceVariableDown subclass: #SubclassWithoutInstVarTwo
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushInstanceVariableDown category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:41'!
RefactoringClassTestData subclass: #ClassToPushInstanceVariableDown
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SubclassWithoutInstVarOne category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:41'!
ClassToPushInstanceVariableDown subclass: #SubclassWithoutInstVarOne
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SubclassWithoutInstVarTwo category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:41'!
ClassToPushInstanceVariableDown subclass: #SubclassWithoutInstVarTwo
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #PushDownInstanceVariableTest #test03AnInstanceVariableThatIsNotAccessedOnClassToRefactorShouldBePushedDownToAllSubclasses stamp: 'aa 5/13/2023 20:05:41'!
PASSED!

!classRemoval: #SubclassWithoutInstVarTwo stamp: 'aa 5/13/2023 20:05:41'!
ClassToPushInstanceVariableDown subclass: #SubclassWithoutInstVarTwo
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #SubclassWithoutInstVarOne stamp: 'aa 5/13/2023 20:05:41'!
ClassToPushInstanceVariableDown subclass: #SubclassWithoutInstVarOne
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToPushInstanceVariableDown stamp: 'aa 5/13/2023 20:05:41'!
RefactoringClassTestData subclass: #ClassToPushInstanceVariableDown
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushMethodDown category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:41'!
RefactoringClassTestData subclass: #ClassToPushMethodDown
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Subclass1 category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:42'!
ClassToPushMethodDown subclass: #Subclass1
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Subclass2 category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:42'!
ClassToPushMethodDown subclass: #Subclass2
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToPushMethodDown methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:42'!
newMethod! !
!Subclass1 methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:42' overrides: 50618496!
newMethod! !
!Subclass2 methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:42' overrides: 50618496!
newMethod! !

!methodRemoval: ClassToPushMethodDown #newMethod stamp: 'aa 5/13/2023 20:05:42'!
newMethod!

!testRun: #PushDownMethodTest #test01AnEmptyMethodOnClassToRefactorShouldBePushedDownToSubclasses stamp: 'aa 5/13/2023 20:05:42'!
PASSED!

!classRemoval: #Subclass2 stamp: 'aa 5/13/2023 20:05:42'!
ClassToPushMethodDown subclass: #Subclass2
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #Subclass1 stamp: 'aa 5/13/2023 20:05:42'!
ClassToPushMethodDown subclass: #Subclass1
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToPushMethodDown stamp: 'aa 5/13/2023 20:05:43'!
RefactoringClassTestData subclass: #ClassToPushMethodDown
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushMethodDown category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:43'!
RefactoringClassTestData subclass: #ClassToPushMethodDown
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Subclass1 category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:43'!
ClassToPushMethodDown subclass: #Subclass1
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Subclass2 category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:43'!
ClassToPushMethodDown subclass: #Subclass2
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToPushMethodDown methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:43'!
newMethod|a|! !

!testRun: #PushDownMethodTest #test02AMethodTemporaryVarDeclaredAsInstVarOnASubclassCanNotBePushedDownToSubclasses stamp: 'aa 5/13/2023 20:05:43'!
PASSED!

!classRemoval: #Subclass2 stamp: 'aa 5/13/2023 20:05:43'!
ClassToPushMethodDown subclass: #Subclass2
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #Subclass1 stamp: 'aa 5/13/2023 20:05:43'!
ClassToPushMethodDown subclass: #Subclass1
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToPushMethodDown stamp: 'aa 5/13/2023 20:05:43'!
RefactoringClassTestData subclass: #ClassToPushMethodDown
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushMethodDown category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:43'!
RefactoringClassTestData subclass: #ClassToPushMethodDown
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Subclass1 category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:43'!
ClassToPushMethodDown subclass: #Subclass1
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Subclass2 category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:43'!
ClassToPushMethodDown subclass: #Subclass2
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToPushMethodDown methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:43'!
newMethod:a! !

!testRun: #PushDownMethodTest #test03AMethodArgumentDeclaredAsInstVarOnASubclassCanNotBePushedDownToSubclasses stamp: 'aa 5/13/2023 20:05:44'!
PASSED!

!classRemoval: #Subclass2 stamp: 'aa 5/13/2023 20:05:44'!
ClassToPushMethodDown subclass: #Subclass2
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #Subclass1 stamp: 'aa 5/13/2023 20:05:44'!
ClassToPushMethodDown subclass: #Subclass1
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToPushMethodDown stamp: 'aa 5/13/2023 20:05:44'!
RefactoringClassTestData subclass: #ClassToPushMethodDown
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushMethodDown category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:44'!
RefactoringClassTestData subclass: #ClassToPushMethodDown
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Subclass1 category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:44'!
ClassToPushMethodDown subclass: #Subclass1
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Subclass2 category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:44'!
ClassToPushMethodDown subclass: #Subclass2
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToPushMethodDown methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:44'!
newMethod^ 1 + a! !
!Subclass1 methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:44' overrides: 50618669!
newMethod^ 1 + a! !
!Subclass2 methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:44' overrides: 50618669!
newMethod^ 1 + a! !

!methodRemoval: ClassToPushMethodDown #newMethod stamp: 'aa 5/13/2023 20:05:45'!
newMethod^ 1 + a!

!testRun: #PushDownMethodTest #test04AMethodAccessesClassToRefactorInstVarShouldBePushedDownToSubclasses stamp: 'aa 5/13/2023 20:05:45'!
PASSED!

!classRemoval: #Subclass2 stamp: 'aa 5/13/2023 20:05:45'!
ClassToPushMethodDown subclass: #Subclass2
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #Subclass1 stamp: 'aa 5/13/2023 20:05:45'!
ClassToPushMethodDown subclass: #Subclass1
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToPushMethodDown stamp: 'aa 5/13/2023 20:05:45'!
RefactoringClassTestData subclass: #ClassToPushMethodDown
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushMethodDown category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:45'!
RefactoringClassTestData subclass: #ClassToPushMethodDown
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Subclass1 category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:45'!
ClassToPushMethodDown subclass: #Subclass1
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Subclass2 category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:45'!
ClassToPushMethodDown subclass: #Subclass2
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToPushMethodDown methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:45'!
newMethod a = 1! !
!Subclass1 methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:45' overrides: 50618734!
newMethod a = 1! !
!Subclass2 methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:45' overrides: 50618734!
newMethod a = 1! !

!methodRemoval: ClassToPushMethodDown #newMethod stamp: 'aa 5/13/2023 20:05:46'!
newMethod a = 1!

!testRun: #PushDownMethodTest #test05AMethodWritesClassToRefactorInstVarShouldBePushedDownToSubclasses stamp: 'aa 5/13/2023 20:05:46'!
PASSED!

!classRemoval: #Subclass2 stamp: 'aa 5/13/2023 20:05:46'!
ClassToPushMethodDown subclass: #Subclass2
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #Subclass1 stamp: 'aa 5/13/2023 20:05:46'!
ClassToPushMethodDown subclass: #Subclass1
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToPushMethodDown stamp: 'aa 5/13/2023 20:05:46'!
RefactoringClassTestData subclass: #ClassToPushMethodDown
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushMethodDown category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:46'!
RefactoringClassTestData subclass: #ClassToPushMethodDown
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToPushMethodDown methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:46'!
newMethod
	^ 2 + a.! !

!classDefinition: #Subclass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:46'!
ClassToPushMethodDown subclass: #Subclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!Subclass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:46' overrides: 50618783!
newMethod^ 1 + a! !

!testRun: #PushDownMethodTest #test06AMethodInClassToRefactorExistsInSubClassesShouldOverrideTheExistingSubClassesMethod stamp: 'aa 5/13/2023 20:05:46'!
PASSED!

!classRemoval: #Subclass stamp: 'aa 5/13/2023 20:05:47'!
ClassToPushMethodDown subclass: #Subclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToPushMethodDown stamp: 'aa 5/13/2023 20:05:47'!
RefactoringClassTestData subclass: #ClassToPushMethodDown
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SuperclassWithoutInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:47'!
RefactoringClassTestData subclass: #SuperclassWithoutInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushInstanceVariableUp category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:47'!
SuperclassWithoutInstVar subclass: #ClassToPushInstanceVariableUp
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushInstanceVariableUp category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:47'!
SuperclassWithoutInstVar subclass: #ClassToPushInstanceVariableUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SuperclassWithoutInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:47'!
RefactoringClassTestData subclass: #SuperclassWithoutInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #PushUpInstanceVariableTest #test01AnInstanceVariableThatIsNotUsedOnClassToRefactorShouldBePushedUpToSuperclass stamp: 'aa 5/13/2023 20:05:47'!
PASSED!

!classRemoval: #ClassToPushInstanceVariableUp stamp: 'aa 5/13/2023 20:05:47'!
SuperclassWithoutInstVar subclass: #ClassToPushInstanceVariableUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #SuperclassWithoutInstVar stamp: 'aa 5/13/2023 20:05:48'!
RefactoringClassTestData subclass: #SuperclassWithoutInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SuperclassWithoutInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:48'!
RefactoringClassTestData subclass: #SuperclassWithoutInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushInstanceVariableUp category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:48'!
SuperclassWithoutInstVar subclass: #ClassToPushInstanceVariableUp
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AnoterSubClassWithInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:48'!
SuperclassWithoutInstVar subclass: #AnoterSubClassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushInstanceVariableUp category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:48'!
SuperclassWithoutInstVar subclass: #ClassToPushInstanceVariableUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AnoterSubClassWithInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:48'!
SuperclassWithoutInstVar subclass: #AnoterSubClassWithInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SuperclassWithoutInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:48'!
RefactoringClassTestData subclass: #SuperclassWithoutInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #PushUpInstanceVariableTest #test02AnInstanceVariableOnMultipleSubclassesShouldBeRemovedFromAllSubclassesAndPushedUpToSuperClass stamp: 'aa 5/13/2023 20:05:48'!
PASSED!

!classRemoval: #ClassToPushInstanceVariableUp stamp: 'aa 5/13/2023 20:05:48'!
SuperclassWithoutInstVar subclass: #ClassToPushInstanceVariableUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AnoterSubClassWithInstVar stamp: 'aa 5/13/2023 20:05:48'!
SuperclassWithoutInstVar subclass: #AnoterSubClassWithInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #SuperclassWithoutInstVar stamp: 'aa 5/13/2023 20:05:48'!
RefactoringClassTestData subclass: #SuperclassWithoutInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushInstanceVariableUp category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:48'!
RefactoringClassTestData subclass: #ClassToPushInstanceVariableUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #PushUpInstanceVariableTest #test03AnInstanceVariableDoesNotExistOnClassToRefactorCannotBePushedUp stamp: 'aa 5/13/2023 20:05:48'!
PASSED!

!classRemoval: #ClassToPushInstanceVariableUp stamp: 'aa 5/13/2023 20:05:49'!
RefactoringClassTestData subclass: #ClassToPushInstanceVariableUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SuperclassWithVariableAsTemporaryVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:49'!
RefactoringClassTestData subclass: #SuperclassWithVariableAsTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!SuperclassWithVariableAsTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:49'!
newMethod| a |! !

!classDefinition: #ClassToPushInstanceVariableUp category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:49'!
SuperclassWithVariableAsTemporaryVariable subclass: #ClassToPushInstanceVariableUp
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #PushUpInstanceVariableTest #test04AnInstanceVariableThatIsUsedOnSuperClassAsTemporaryVariableCannotBePushedUp stamp: 'aa 5/13/2023 20:05:49'!
PASSED!

!classRemoval: #ClassToPushInstanceVariableUp stamp: 'aa 5/13/2023 20:05:49'!
SuperclassWithVariableAsTemporaryVariable subclass: #ClassToPushInstanceVariableUp
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #SuperclassWithVariableAsTemporaryVariable stamp: 'aa 5/13/2023 20:05:49'!
RefactoringClassTestData subclass: #SuperclassWithVariableAsTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Superclass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:49'!
RefactoringClassTestData subclass: #Superclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushMethodUp category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:49'!
Superclass subclass: #ClassToPushMethodUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToPushMethodUp methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:49'!
newMethod! !
!Superclass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:49'!
newMethod! !

!methodRemoval: ClassToPushMethodUp #newMethod stamp: 'aa 5/13/2023 20:05:49'!
newMethod!

!testRun: #PushUpMethodTest #test01AnEmptyMethodOnClassToRefactorShouldBePushedUpToSuperclass stamp: 'aa 5/13/2023 20:05:49'!
PASSED!

!classRemoval: #ClassToPushMethodUp stamp: 'aa 5/13/2023 20:05:50'!
Superclass subclass: #ClassToPushMethodUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #Superclass stamp: 'aa 5/13/2023 20:05:50'!
RefactoringClassTestData subclass: #Superclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Superclass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:50'!
RefactoringClassTestData subclass: #Superclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushMethodUp category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:50'!
Superclass subclass: #ClassToPushMethodUp
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToPushMethodUp methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:50'!
newMethod^ 1 + a! !

!testRun: #PushUpMethodTest #test02AMethodAccessesClassToRefactorInstVarCanNotBePushedUpToSuperclass stamp: 'aa 5/13/2023 20:05:50'!
PASSED!

!classRemoval: #ClassToPushMethodUp stamp: 'aa 5/13/2023 20:05:50'!
Superclass subclass: #ClassToPushMethodUp
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #Superclass stamp: 'aa 5/13/2023 20:05:50'!
RefactoringClassTestData subclass: #Superclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Superclass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:50'!
RefactoringClassTestData subclass: #Superclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushMethodUp category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:50'!
Superclass subclass: #ClassToPushMethodUp
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToPushMethodUp methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:50'!
newMethod a = 1! !

!testRun: #PushUpMethodTest #test03AMethodWritesClassToRefactorInstVarCanNotBePushedUpToSuperclass stamp: 'aa 5/13/2023 20:05:50'!
PASSED!

!classRemoval: #ClassToPushMethodUp stamp: 'aa 5/13/2023 20:05:51'!
Superclass subclass: #ClassToPushMethodUp
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #Superclass stamp: 'aa 5/13/2023 20:05:51'!
RefactoringClassTestData subclass: #Superclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Superclass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:51'!
RefactoringClassTestData subclass: #Superclass
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushMethodUp category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:51'!
Superclass subclass: #ClassToPushMethodUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToPushMethodUp methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:51'!
newMethod a = 1! !
!Superclass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:51'!
newMethod a = 1! !

!methodRemoval: ClassToPushMethodUp #newMethod stamp: 'aa 5/13/2023 20:05:51'!
newMethod a = 1!

!testRun: #PushUpMethodTest #test04AMethodWritesSuperClassInstVarShouldBePushedUpToSuperclass stamp: 'aa 5/13/2023 20:05:51'!
PASSED!

!classRemoval: #ClassToPushMethodUp stamp: 'aa 5/13/2023 20:05:51'!
Superclass subclass: #ClassToPushMethodUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #Superclass stamp: 'aa 5/13/2023 20:05:52'!
RefactoringClassTestData subclass: #Superclass
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Superclass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:52'!
RefactoringClassTestData subclass: #Superclass
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushMethodUp category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:52'!
Superclass subclass: #ClassToPushMethodUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToPushMethodUp methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:52'!
newMethod^ 1 + a! !
!Superclass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:52'!
newMethod^ 1 + a! !

!methodRemoval: ClassToPushMethodUp #newMethod stamp: 'aa 5/13/2023 20:05:52'!
newMethod^ 1 + a!

!testRun: #PushUpMethodTest #test05AMethodAccessesSuperClassClassToRefactorInstVarShouldBePushedUpToSuperclass stamp: 'aa 5/13/2023 20:05:52'!
PASSED!

!classRemoval: #ClassToPushMethodUp stamp: 'aa 5/13/2023 20:05:52'!
Superclass subclass: #ClassToPushMethodUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #Superclass stamp: 'aa 5/13/2023 20:05:52'!
RefactoringClassTestData subclass: #Superclass
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Superclass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:52'!
RefactoringClassTestData subclass: #Superclass
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushMethodUp category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:52'!
Superclass subclass: #ClassToPushMethodUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToPushMethodUp methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:52'!
newMethod^ 1 + a! !
!Superclass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:52'!
newMethod^ 1 + a! !

!methodRemoval: ClassToPushMethodUp #newMethod stamp: 'aa 5/13/2023 20:05:52'!
newMethod^ 1 + a!

!testRun: #PushUpMethodTest #test06AMethodAccessesSuperClassClassToRefactorInstVarShouldBePushedUpToSuperclass stamp: 'aa 5/13/2023 20:05:52'!
PASSED!

!classRemoval: #ClassToPushMethodUp stamp: 'aa 5/13/2023 20:05:53'!
Superclass subclass: #ClassToPushMethodUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #Superclass stamp: 'aa 5/13/2023 20:05:53'!
RefactoringClassTestData subclass: #Superclass
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Superclass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:53'!
RefactoringClassTestData subclass: #Superclass
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!Superclass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:53'!
newMethod^ 1 + a! !

!classDefinition: #ClassToPushMethodUp category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:53'!
Superclass subclass: #ClassToPushMethodUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToPushMethodUp methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:53' overrides: 50619292!
newMethod
	^ 2 + a.! !

!testRun: #PushUpMethodTest #test07AMethodInClassToRefactorExistsInSuperClassShouldOverrideTheExistingSuperClassMethod stamp: 'aa 5/13/2023 20:05:53'!
PASSED!

!classRemoval: #ClassToPushMethodUp stamp: 'aa 5/13/2023 20:05:53'!
Superclass subclass: #ClassToPushMethodUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #Superclass stamp: 'aa 5/13/2023 20:05:54'!
RefactoringClassTestData subclass: #Superclass
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithoutInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:54'!
RefactoringClassTestData subclass: #ClassWithoutInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RemoveAllUnreferencedInstanceVariablesTest #test01NoVariableIsRemovedWhenClassHasNoInstanceVariable stamp: 'aa 5/13/2023 20:05:54'!
PASSED!

!classRemoval: #ClassWithoutInstVar stamp: 'aa 5/13/2023 20:05:54'!
RefactoringClassTestData subclass: #ClassWithoutInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:54'!
RefactoringClassTestData subclass: #ClassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:54'!
RefactoringClassTestData subclass: #ClassWithInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RemoveAllUnreferencedInstanceVariablesTest #test02UnreferencedVariablesAreRemoved stamp: 'aa 5/13/2023 20:05:54'!
PASSED!

!classRemoval: #ClassWithInstVar stamp: 'aa 5/13/2023 20:05:54'!
RefactoringClassTestData subclass: #ClassWithInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:54'!
RefactoringClassTestData subclass: #ClassWithInstVar
	instanceVariableNames: 'a b'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithInstVar methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:54'!
m1 ^a! !

!classDefinition: #ClassWithInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:54'!
RefactoringClassTestData subclass: #ClassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RemoveAllUnreferencedInstanceVariablesTest #test03VariablesWithReferencesAreNotRemoved stamp: 'aa 5/13/2023 20:05:54'!
PASSED!

!classRemoval: #ClassWithInstVar stamp: 'aa 5/13/2023 20:05:55'!
RefactoringClassTestData subclass: #ClassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:55'!
RefactoringClassTestData subclass: #ClassWithInstVar
	instanceVariableNames: 'a b'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithReferenceInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:55'!
ClassWithInstVar subclass: #ClassWithReferenceInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithReferenceInstVar methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:55'!
m1 ^a! !

!classDefinition: #ClassWithInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:55'!
RefactoringClassTestData subclass: #ClassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RemoveAllUnreferencedInstanceVariablesTest #test04VariablesWithReferencesInSubclassesAreNotRemoved stamp: 'aa 5/13/2023 20:05:55'!
PASSED!

!classRemoval: #ClassWithReferenceInstVar stamp: 'aa 5/13/2023 20:05:55'!
ClassWithInstVar subclass: #ClassWithReferenceInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassWithInstVar stamp: 'aa 5/13/2023 20:05:55'!
RefactoringClassTestData subclass: #ClassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithoutInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:55'!
RefactoringClassTestData subclass: #ClassWithoutInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RemoveInstanceVariableTest #test01CanNotRemoveAnInstanceVariableNotDefinedInClass stamp: 'aa 5/13/2023 20:05:55'!
PASSED!

!classRemoval: #ClassWithoutInstVar stamp: 'aa 5/13/2023 20:05:55'!
RefactoringClassTestData subclass: #ClassWithoutInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:55'!
RefactoringClassTestData subclass: #ClassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithInstVar methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:55'!
m1 ^a! !

!testRun: #RemoveInstanceVariableTest #test02CanNotRemoveInstanceVariableWithReferences stamp: 'aa 5/13/2023 20:05:56'!
PASSED!

!classRemoval: #ClassWithInstVar stamp: 'aa 5/13/2023 20:05:56'!
RefactoringClassTestData subclass: #ClassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:56'!
RefactoringClassTestData subclass: #ClassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithInstVar category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:56'!
RefactoringClassTestData subclass: #ClassWithInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RemoveInstanceVariableTest #test03WhenAppliedRemovesInstanceVariable stamp: 'aa 5/13/2023 20:05:56'!
PASSED!

!classRemoval: #ClassWithInstVar stamp: 'aa 5/13/2023 20:05:56'!
RefactoringClassTestData subclass: #ClassWithInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RemoveParameterTest #test01CanNotRemoveParameterFromUnaryMessages stamp: 'aa 5/13/2023 20:05:56'!
PASSED!

!testRun: #RemoveParameterTest #test02CanNotRemoveParameterFromBinaryMessages stamp: 'aa 5/13/2023 20:05:56'!
PASSED!

!classDefinition: #ClassToRemoveParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:56'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:57'!
m1: parameter! !

!testRun: #RemoveParameterTest #test03CanNotRemoveParameterNotInMessage stamp: 'aa 5/13/2023 20:05:57'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'aa 5/13/2023 20:05:57'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:57'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:57'!
m1: parameter! !

!testRun: #RemoveParameterTest #test04AllImplementorsMustImplementSelector stamp: 'aa 5/13/2023 20:05:57'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'aa 5/13/2023 20:05:57'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:57'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:57'!
m1: parameter! !

!testRun: #RemoveParameterTest #test05AllSendersShouldSendSelector stamp: 'aa 5/13/2023 20:05:57'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'aa 5/13/2023 20:05:58'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:58'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:58'!
m1: parameter ^parameter! !

!testRun: #RemoveParameterTest #test06NoImplementorReferencesParameterToRemove stamp: 'aa 5/13/2023 20:05:58'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'aa 5/13/2023 20:05:58'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:58'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:58'!
m1:parameter1 
	m2:parameter2! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:58'!
m2:parameter2! !

!methodRemoval: ClassToRemoveParameter #m1:m2: stamp: 'aa 5/13/2023 20:05:58'!
m1:parameter1 
	m2:parameter2!

!testRun: #RemoveParameterTest #test07FirstParameterIsRemovedCorrectly stamp: 'aa 5/13/2023 20:05:58'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'aa 5/13/2023 20:05:58'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:58'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:58'!
m1:parameter1 m2:parameter2
	| t1 |! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:58'!
m1:parameter1 
	| t1 |! !

!methodRemoval: ClassToRemoveParameter #m1:m2: stamp: 'aa 5/13/2023 20:05:59'!
m1:parameter1 m2:parameter2
	| t1 |!

!testRun: #RemoveParameterTest #test08LastParameterIsRemovedCorrectly stamp: 'aa 5/13/2023 20:05:59'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'aa 5/13/2023 20:05:59'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:59'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:59'!
m0: parameter0 
	m1:parameter1 
	m2:parameter2! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:59'!
m0: parameter0 
	m2:parameter2! !

!methodRemoval: ClassToRemoveParameter #m0:m1:m2: stamp: 'aa 5/13/2023 20:05:59'!
m0: parameter0 
	m1:parameter1 
	m2:parameter2!

!testRun: #RemoveParameterTest #test09MiddleParameterIsRemovedCorrectly stamp: 'aa 5/13/2023 20:05:59'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'aa 5/13/2023 20:05:59'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:05:59'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:59'!
m1:parameter1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:05:59'!
m1! !

!methodRemoval: ClassToRemoveParameter #m1: stamp: 'aa 5/13/2023 20:06:00'!
m1:parameter1!

!testRun: #RemoveParameterTest #test10ParameterFromOneKeywordSelectorIsRemovedCorrectly stamp: 'aa 5/13/2023 20:06:00'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'aa 5/13/2023 20:06:00'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:00'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:00'!
m1:parameter1 m2:parameter2! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:00'!
sender
		self 
			m1: 1 
			m2: 2 ! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:00'!
m2:parameter2! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:00' prior: 50619773!
sender
		self 
			m2: 2 ! !

!methodRemoval: ClassToRemoveParameter #m1:m2: stamp: 'aa 5/13/2023 20:06:00'!
m1:parameter1 m2:parameter2!

!testRun: #RemoveParameterTest #test11ParameterOfSendersOfMoreThanOneKeywordSelectorsIsRemovedCorrectly stamp: 'aa 5/13/2023 20:06:00'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'aa 5/13/2023 20:06:01'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:01'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:01'!
m1:parameter1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:01'!
sender
		self 
			m1:
			 (1+2).! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:01'!
m1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:01' prior: 50619814!
sender
		self 
			m1.! !

!methodRemoval: ClassToRemoveParameter #m1: stamp: 'aa 5/13/2023 20:06:01'!
m1:parameter1!

!testRun: #RemoveParameterTest #test12ParameterOfSendersOfOneKeywordSelectorsIsRemovedCorrectly stamp: 'aa 5/13/2023 20:06:01'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'aa 5/13/2023 20:06:01'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:01'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:01'!
m1:parameter1 m2:parameter2! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:01'!
sender
		self m1: (1+1) m2: 2.
		self m1: 3 m2: 4.! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:01'!
m2:parameter2! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:01' prior: 50619854!
sender
		self m2: 2.
		self m2: 4.! !

!methodRemoval: ClassToRemoveParameter #m1:m2: stamp: 'aa 5/13/2023 20:06:01'!
m1:parameter1 m2:parameter2!

!testRun: #RemoveParameterTest #test13ParameterIsRemovedCorrecltyFromSendersWithMoreThanOneSend stamp: 'aa 5/13/2023 20:06:01'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'aa 5/13/2023 20:06:02'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RemoveParameterTest #test14CanNotRemoveParameterIndexLessThanOne stamp: 'aa 5/13/2023 20:06:02'!
PASSED!

!testRun: #RemoveParameterTest #test15CanNotRemoveParameterIndexBiggerThanOldSelectorNumberOfKeywords stamp: 'aa 5/13/2023 20:06:02'!
PASSED!

!testRun: #RemoveParameterTest #test16ParameterIndexMustBeInteger stamp: 'aa 5/13/2023 20:06:02'!
PASSED!

!classDefinition: #ClassToRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:02'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:02'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:02'!
newXyz__! !

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'aa 5/13/2023 20:06:03'!
oldXyz__!

!testRun: #RenameSelectorTest #test01MessageWithNoSendersCreatesNewMethodAndRemovesOldOne stamp: 'aa 5/13/2023 20:06:03'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'aa 5/13/2023 20:06:03'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:03'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:03'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:03'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:03'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:03' prior: 50619938!
m1__ self newXyz__! !

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'aa 5/13/2023 20:06:03'!
oldXyz__!

!testRun: #RenameSelectorTest #test02SendersOfMessageAreRenamed stamp: 'aa 5/13/2023 20:06:03'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'aa 5/13/2023 20:06:04'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:04'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:04'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:04'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:04' prior: 50619976!
m1__ self oldXyz__. self toKeep! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:04'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:04' prior: 50619980!
m1__ self newXyz__. self toKeep! !

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'aa 5/13/2023 20:06:04'!
oldXyz__!

!testRun: #RenameSelectorTest #test03OtherMessagesSendsAreNotRenamed stamp: 'aa 5/13/2023 20:06:04'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'aa 5/13/2023 20:06:04'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameSelectorTest #test04OldSelectorCanNotBeEmpty stamp: 'aa 5/13/2023 20:06:04'!
PASSED!

!testRun: #RenameSelectorTest #test05NewSelectorCanNotBeEmpty stamp: 'aa 5/13/2023 20:06:05'!
PASSED!

!testRun: #RenameSelectorTest #test06CanRenameWithoutImplementors stamp: 'aa 5/13/2023 20:06:05'!
PASSED!

!testRun: #RenameSelectorTest #test07AllImplementorsMustImplementOldSelector stamp: 'aa 5/13/2023 20:06:05'!
PASSED!

!testRun: #RenameSelectorTest #test08AllSendersShouldSendOldSelector stamp: 'aa 5/13/2023 20:06:05'!
PASSED!

!testRun: #RenameSelectorTest #test09NewSelectorMustBeOfSameTypeAsOldSelector stamp: 'aa 5/13/2023 20:06:05'!
PASSED!

!testRun: #RenameSelectorTest #test10NewSelectorMustHaveSameNumberOfArgumentsAsOldSelector stamp: 'aa 5/13/2023 20:06:05'!
PASSED!

!classDefinition: #ClassToRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:06'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:06'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:06'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'oldSelectorCategory' stamp: 'aa 5/13/2023 20:06:06'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:06' prior: 50620044!
m1__ self newXyz__! !

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'aa 5/13/2023 20:06:06'!
oldXyz__!

!testRun: #RenameSelectorTest #test11NewImplementorsKeepMethodCategory stamp: 'aa 5/13/2023 20:06:06'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'aa 5/13/2023 20:06:06'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:06'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:06'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:06'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:06' prior: 50620079!
oldXyz__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:06'!
newXyz__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:07' prior: 50620091!
newXyz__ self newXyz__! !

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'aa 5/13/2023 20:06:07'!
oldXyz__ self oldXyz__!

!testRun: #RenameSelectorTest #test12RenamesRecursiveMethodsWhenNotInSenders stamp: 'aa 5/13/2023 20:06:07'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'aa 5/13/2023 20:06:07'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:07'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:07'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:07'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:07' prior: 50620123!
oldXyz__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:07'!
newXyz__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:07' prior: 50620131!
oldXyz__ self newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:07' prior: 50620135!
newXyz__ self newXyz__! !

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'aa 5/13/2023 20:06:07'!
oldXyz__ self newXyz__!

!testRun: #RenameSelectorTest #test13RenamesRecursiveMethodsWhenInSenders stamp: 'aa 5/13/2023 20:06:07'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'aa 5/13/2023 20:06:08'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:08'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:08'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:08'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:08' prior: 50620172!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:08'!
m1 #oldXyz__ size! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:08'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:08' prior: 50620184!
m1 #newXyz__ size! !

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'aa 5/13/2023 20:06:08'!
oldXyz__!

!testRun: #RenameSelectorTest #test14RenamesSymbolsEqualToOldSelector stamp: 'aa 5/13/2023 20:06:08'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'aa 5/13/2023 20:06:08'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:08'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:08'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:09'!
m1__ self oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:09'!
oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:09'!
m1__ self oldXyz__! !

!classDefinition: #ClassToAvoidRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:09'!
RefactoringClassTestData subclass: #ClassToAvoidRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAvoidRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:09'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:09'!
newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:09'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:09' prior: 50620223!
m1__ self newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:09' prior: 50620231!
m1__ self newXyz__! !

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'aa 5/13/2023 20:06:09'!
oldXyz__!

!methodRemoval: ClassToRenameSelector class #oldXyz__ stamp: 'aa 5/13/2023 20:06:09'!
oldXyz__!

!testRun: #RenameSelectorTest #test15ScopeToRenameCanBeClassOnly stamp: 'aa 5/13/2023 20:06:09'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'aa 5/13/2023 20:06:09'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToAvoidRenameSelector stamp: 'aa 5/13/2023 20:06:10'!
RefactoringClassTestData subclass: #ClassToAvoidRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SuperclassToRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:10'!
RefactoringClassTestData subclass: #SuperclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:10'!
oldXyz__! !
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:10'!
m1__ self oldXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:10'!
oldXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:10'!
m1__ self oldXyz__! !

!classDefinition: #ClassToRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:10'!
SuperclassToRenameSelector subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:10' overrides: 50620299!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:10' overrides: 50620303!
m1__ self oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:10' overrides: 50620307!
oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:10' overrides: 50620311!
m1__ self oldXyz__! !

!classDefinition: #SubclassToRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:10'!
ClassToRenameSelector subclass: #SubclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:10' overrides: 50620324!
oldXyz__! !
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:10' overrides: 50620328!
m1__ self oldXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:10' overrides: 50620333!
oldXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:10' overrides: 50620337!
m1__ self oldXyz__! !

!classDefinition: #ClassToAvoidRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:11'!
RefactoringClassTestData subclass: #ClassToAvoidRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAvoidRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:11'!
m1__ self oldXyz__! !
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:11'!
newXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:11'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:11' overrides: 50620382!
newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:11' overrides: 50620386!
newXyz__! !
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:11' overrides: 50620390!
newXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:11' overrides: 50620394!
newXyz__! !
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:11' prior: 50620303!
m1__ self newXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:11' prior: 50620311!
m1__ self newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:11' prior: 50620328 overrides: 50620407!
m1__ self newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:11' prior: 50620337 overrides: 50620412!
m1__ self newXyz__! !
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:11' prior: 50620355 overrides: 50620417!
m1__ self newXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:11' prior: 50620365 overrides: 50620422!
m1__ self newXyz__! !

!methodRemoval: SuperclassToRenameSelector #oldXyz__ stamp: 'aa 5/13/2023 20:06:11'!
oldXyz__!

!methodRemoval: SuperclassToRenameSelector class #oldXyz__ stamp: 'aa 5/13/2023 20:06:11'!
oldXyz__!

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'aa 5/13/2023 20:06:11'!
oldXyz__!

!methodRemoval: ClassToRenameSelector class #oldXyz__ stamp: 'aa 5/13/2023 20:06:11'!
oldXyz__!

!methodRemoval: SubclassToRenameSelector #oldXyz__ stamp: 'aa 5/13/2023 20:06:11'!
oldXyz__!

!methodRemoval: SubclassToRenameSelector class #oldXyz__ stamp: 'aa 5/13/2023 20:06:11'!
oldXyz__!

!testRun: #RenameSelectorTest #test16ScopeToRenameCanBeHierarchyOnly stamp: 'aa 5/13/2023 20:06:11'!
PASSED!

!classRemoval: #SubclassToRenameSelector stamp: 'aa 5/13/2023 20:06:12'!
ClassToRenameSelector subclass: #SubclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRenameSelector stamp: 'aa 5/13/2023 20:06:12'!
SuperclassToRenameSelector subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #SuperclassToRenameSelector stamp: 'aa 5/13/2023 20:06:12'!
RefactoringClassTestData subclass: #SuperclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToAvoidRenameSelector stamp: 'aa 5/13/2023 20:06:12'!
RefactoringClassTestData subclass: #ClassToAvoidRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:12'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:12'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:12'!
m1__ self oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:12'!
oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:13'!
m1__ self oldXyz__! !

!classDefinition: #AnotherclassToRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:13'!
RefactoringClassTestData subclass: #AnotherclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AnotherclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:13'!
oldXyz__! !
!AnotherclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:13'!
m1__ self oldXyz__! !
!AnotherclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:13'!
oldXyz__! !
!AnotherclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:13'!
m1__ self oldXyz__! !

!classDefinition: #ClassToAvoidRenameSelector category: '__Refactoring-TestData__-toAvoid' stamp: 'aa 5/13/2023 20:06:13'!
RefactoringClassTestData subclass: #ClassToAvoidRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__-toAvoid'!
!ClassToAvoidRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:13'!
m1__ self oldXyz__! !
!AnotherclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:13'!
newXyz__! !
!AnotherclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:13'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:13'!
newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:13'!
newXyz__! !
!AnotherclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:13' prior: 50620526!
m1__ self newXyz__! !
!AnotherclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:13' prior: 50620534!
m1__ self newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:13' prior: 50620501!
m1__ self newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:13' prior: 50620509!
m1__ self newXyz__! !

!methodRemoval: AnotherclassToRenameSelector #oldXyz__ stamp: 'aa 5/13/2023 20:06:14'!
oldXyz__!

!methodRemoval: AnotherclassToRenameSelector class #oldXyz__ stamp: 'aa 5/13/2023 20:06:14'!
oldXyz__!

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'aa 5/13/2023 20:06:14'!
oldXyz__!

!methodRemoval: ClassToRenameSelector class #oldXyz__ stamp: 'aa 5/13/2023 20:06:14'!
oldXyz__!

!testRun: #RenameSelectorTest #test17ScopeToRenameCanBeCategoryOnly stamp: 'aa 5/13/2023 20:06:14'!
PASSED!

!classRemoval: #ClassToAvoidRenameSelector stamp: 'aa 5/13/2023 20:06:14'!
RefactoringClassTestData subclass: #ClassToAvoidRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__-toAvoid'!

!classRemoval: #ClassToRenameSelector stamp: 'aa 5/13/2023 20:06:14'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AnotherclassToRenameSelector stamp: 'aa 5/13/2023 20:06:14'!
RefactoringClassTestData subclass: #AnotherclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SuperclassToRenameSelector category: '__Refactoring-TestData__-Another' stamp: 'aa 5/13/2023 20:06:14'!
RefactoringClassTestData subclass: #SuperclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__-Another'!
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:14'!
oldXyz__! !
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:14'!
m1__ self oldXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:15'!
oldXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:15'!
m1__ self oldXyz__! !

!classDefinition: #ClassToRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:15'!
SuperclassToRenameSelector subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:15' overrides: 50620635!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:15' overrides: 50620639!
m1__ self oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:15' overrides: 50620643!
oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:15' overrides: 50620647!
m1__ self oldXyz__! !

!classDefinition: #SubclassToRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:15'!
ClassToRenameSelector subclass: #SubclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:15' overrides: 50620660!
oldXyz__! !
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:15' overrides: 50620664!
m1__ self oldXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:15' overrides: 50620669!
oldXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:15' overrides: 50620673!
m1__ self oldXyz__! !

!classDefinition: #AnotheclassToRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:15'!
RefactoringClassTestData subclass: #AnotheclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AnotheclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:15'!
oldXyz__! !
!AnotheclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:15'!
m1__ self oldXyz__! !
!AnotheclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:16'!
oldXyz__! !
!AnotheclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:16'!
m1__ self oldXyz__! !

!classDefinition: #OtherCatClassToRenameSelector category: '__Refactoring-TestData__-Another' stamp: 'aa 5/13/2023 20:06:16'!
RefactoringClassTestData subclass: #OtherCatClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__-Another'!
!OtherCatClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:16'!
oldXyz__! !
!OtherCatClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:16'!
m1__ self oldXyz__! !
!OtherCatClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:16'!
oldXyz__! !
!OtherCatClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:16'!
m1__ self oldXyz__! !

!classDefinition: #ClassToAvoidRenameSelector category: '__Refactoring-TestData__-toAvoid' stamp: 'aa 5/13/2023 20:06:16'!
RefactoringClassTestData subclass: #ClassToAvoidRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__-toAvoid'!
!ClassToAvoidRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:16'!
m1__ self oldXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:16'!
newXyz__! !
!AnotheclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:16'!
newXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:16'!
newXyz__! !
!OtherCatClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:16'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:16'!
newXyz__! !
!OtherCatClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:16'!
newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:17' overrides: 50620778!
newXyz__! !
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:17' overrides: 50620786!
newXyz__! !
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:17'!
newXyz__! !
!AnotheclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:17'!
newXyz__! !
!AnotheclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:17' prior: 50620718!
m1__ self newXyz__! !
!AnotheclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:17' prior: 50620726!
m1__ self newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:17' prior: 50620664 overrides: 50620639!
m1__ self newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:17' prior: 50620673 overrides: 50620647!
m1__ self newXyz__! !
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:17' prior: 50620691 overrides: 50620820!
m1__ self newXyz__! !
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:17' prior: 50620639!
m1__ self newXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:17' prior: 50620647!
m1__ self newXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:17' prior: 50620701 overrides: 50620825!
m1__ self newXyz__! !
!OtherCatClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:17' prior: 50620752!
m1__ self newXyz__! !
!OtherCatClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:17' prior: 50620744!
m1__ self newXyz__! !

!methodRemoval: SubclassToRenameSelector class #oldXyz__ stamp: 'aa 5/13/2023 20:06:17'!
oldXyz__!

!methodRemoval: AnotheclassToRenameSelector #oldXyz__ stamp: 'aa 5/13/2023 20:06:17'!
oldXyz__!

!methodRemoval: SuperclassToRenameSelector class #oldXyz__ stamp: 'aa 5/13/2023 20:06:17'!
oldXyz__!

!methodRemoval: OtherCatClassToRenameSelector class #oldXyz__ stamp: 'aa 5/13/2023 20:06:17'!
oldXyz__!

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'aa 5/13/2023 20:06:17'!
oldXyz__!

!methodRemoval: OtherCatClassToRenameSelector #oldXyz__ stamp: 'aa 5/13/2023 20:06:17'!
oldXyz__!

!methodRemoval: ClassToRenameSelector class #oldXyz__ stamp: 'aa 5/13/2023 20:06:17'!
oldXyz__!

!methodRemoval: SubclassToRenameSelector #oldXyz__ stamp: 'aa 5/13/2023 20:06:17'!
oldXyz__!

!methodRemoval: SuperclassToRenameSelector #oldXyz__ stamp: 'aa 5/13/2023 20:06:17'!
oldXyz__!

!methodRemoval: AnotheclassToRenameSelector class #oldXyz__ stamp: 'aa 5/13/2023 20:06:17'!
oldXyz__!

!testRun: #RenameSelectorTest #test18ScopeToRenameCanBeCategoriesAndHierarchyOnly stamp: 'aa 5/13/2023 20:06:17'!
PASSED!

!classRemoval: #ClassToAvoidRenameSelector stamp: 'aa 5/13/2023 20:06:18'!
RefactoringClassTestData subclass: #ClassToAvoidRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__-toAvoid'!

!classRemoval: #AnotheclassToRenameSelector stamp: 'aa 5/13/2023 20:06:18'!
RefactoringClassTestData subclass: #AnotheclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #SubclassToRenameSelector stamp: 'aa 5/13/2023 20:06:18'!
ClassToRenameSelector subclass: #SubclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRenameSelector stamp: 'aa 5/13/2023 20:06:18'!
SuperclassToRenameSelector subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #SuperclassToRenameSelector stamp: 'aa 5/13/2023 20:06:18'!
RefactoringClassTestData subclass: #SuperclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__-Another'!

!classRemoval: #OtherCatClassToRenameSelector stamp: 'aa 5/13/2023 20:06:19'!
RefactoringClassTestData subclass: #OtherCatClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__-Another'!

!classDefinition: #ClassToRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:19'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:19'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:19'!
m1__ self oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:19'!
oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:19'!
m1__ self oldXyz__! !

!classDefinition: #AnotherclassToRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:19'!
RefactoringClassTestData subclass: #AnotherclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AnotherclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:19'!
oldXyz__! !
!AnotherclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:19'!
m1__ self oldXyz__! !
!AnotherclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:19'!
oldXyz__! !
!AnotherclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:19'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:19'!
newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:19'!
newXyz__! !
!AnotherclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:19'!
newXyz__! !
!AnotherclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:20'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:20' prior: 50620954!
m1__ self newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:20' prior: 50620962!
m1__ self newXyz__! !
!AnotherclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:20' prior: 50620979!
m1__ self newXyz__! !
!AnotherclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:20' prior: 50620987!
m1__ self newXyz__! !

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'aa 5/13/2023 20:06:20'!
oldXyz__!

!methodRemoval: ClassToRenameSelector class #oldXyz__ stamp: 'aa 5/13/2023 20:06:20'!
oldXyz__!

!methodRemoval: AnotherclassToRenameSelector #oldXyz__ stamp: 'aa 5/13/2023 20:06:20'!
oldXyz__!

!methodRemoval: AnotherclassToRenameSelector class #oldXyz__ stamp: 'aa 5/13/2023 20:06:20'!
oldXyz__!

!testRun: #RenameSelectorTest #test19ScopeToRenameCanBeTheCompleteSystem stamp: 'aa 5/13/2023 20:06:20'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'aa 5/13/2023 20:06:20'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AnotherclassToRenameSelector stamp: 'aa 5/13/2023 20:06:20'!
RefactoringClassTestData subclass: #AnotherclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameSelectorTest #test20CanNotRenameToItSelf stamp: 'aa 5/13/2023 20:06:20'!
PASSED!

!testRun: #RenameSelectorTest #test21NewSelectorCanNotBeImplementedOnAnyClassImplementingOldSelector stamp: 'aa 5/13/2023 20:06:21'!
PASSED!

!testRun: #RenameSelectorTest #test22WarnsWhenOverridesSuperclassImplementation stamp: 'aa 5/13/2023 20:06:21'!
PASSED!

!classDefinition: #ClassToRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:21'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:21'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:21'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:21' prior: 50621077!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:21'!
m1 ^#(#oldXyz__)! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:21'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:21' prior: 50621089!
m1 ^#(#newXyz__)! !

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'aa 5/13/2023 20:06:21'!
oldXyz__!

!testRun: #RenameSelectorTest #test23OldSelectorIsRenamedWhenDefinedInLiteralArray stamp: 'aa 5/13/2023 20:06:21'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'aa 5/13/2023 20:06:22'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:22'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:22'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:22'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:22' prior: 50621124!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:22'!
m1 ^#(#oldXyz__ #oldXyz__)! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:22'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:22' prior: 50621136!
m1 ^#(#newXyz__ #newXyz__)! !

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'aa 5/13/2023 20:06:22'!
oldXyz__!

!testRun: #RenameSelectorTest #test24OldSelectorIsRenamedWhenDefinedInLiteralArrayMoreThanOnce stamp: 'aa 5/13/2023 20:06:22'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'aa 5/13/2023 20:06:22'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:22'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:22'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:23'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:23' prior: 50621172!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:23'!
m1 ^#(#oldXyz__ #oldXyz__), #(#oldXyz__ #oldXyz__)! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:23'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:23' prior: 50621184!
m1 ^#(#newXyz__ #newXyz__), #(#newXyz__ #newXyz__)! !

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'aa 5/13/2023 20:06:23'!
oldXyz__!

!testRun: #RenameSelectorTest #test25OldSelectorIsRenamedWhenDefinedInMoreThanOneLiteralArrayMoreThanOnce stamp: 'aa 5/13/2023 20:06:23'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'aa 5/13/2023 20:06:23'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:23'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:23'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:23'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:23' prior: 50621222!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:23'!
m1 ^#(#oldXyz__ #oldXyz__1)! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:23'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:24' prior: 50621234!
m1 ^#(#newXyz__ #oldXyz__1)! !

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'aa 5/13/2023 20:06:24'!
oldXyz__!

!testRun: #RenameSelectorTest #test26DoesNotRenameLiteralsThatBeginsWithOldSelectorInsideLiteralArray stamp: 'aa 5/13/2023 20:06:24'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'aa 5/13/2023 20:06:24'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:24'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:24'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:24'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:24' prior: 50621270!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:24'!
m1 ^#(#oldXyz__ #oldXyz__:)! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:24'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:24' prior: 50621282!
m1 ^#(#newXyz__ #oldXyz__:)! !

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'aa 5/13/2023 20:06:24'!
oldXyz__!

!testRun: #RenameSelectorTest #test27DoesNotRenameLiteralsThatBeginsWithOldSelectorAndEndWithColonInsideLiteralArray stamp: 'aa 5/13/2023 20:06:24'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'aa 5/13/2023 20:06:25'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:25'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:25'!
&& aParameter! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:25'!
m1 ^self && 1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:25'!
abc: aParameter! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:25' prior: 50621322!
m1 ^self abc: 1! !

!methodRemoval: ClassToRenameSelector #&& stamp: 'aa 5/13/2023 20:06:25'!
&& aParameter!

!testRun: #RenameSelectorTest #test28CanRenameFromBinaryToKeywordOfOneParameter stamp: 'aa 5/13/2023 20:06:25'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'aa 5/13/2023 20:06:25'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:25'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:25'!
abc: aParameter! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:26'!
m1 ^self abc: 1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:26'!
&& aParameter! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:26' prior: 50621361!
m1 ^self && 1! !

!methodRemoval: ClassToRenameSelector #abc: stamp: 'aa 5/13/2023 20:06:26'!
abc: aParameter!

!testRun: #RenameSelectorTest #test29CanRenameFromKeywordOfOneParameterToBinary stamp: 'aa 5/13/2023 20:06:26'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'aa 5/13/2023 20:06:26'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:26'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:26'!
&& aParameter! !

!testRun: #RenameSelectorTest #test30CanNotRenameFromBinaryToKeywordOfMoreThanOneParameter stamp: 'aa 5/13/2023 20:06:26'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'aa 5/13/2023 20:06:27'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:27'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:27'!
abc: p1 def: p2! !

!testRun: #RenameSelectorTest #test31CanNotRenameFromKeywordOfOneParameterToBinary stamp: 'aa 5/13/2023 20:06:27'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'aa 5/13/2023 20:06:27'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SuperclassToRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:27'!
RefactoringClassTestData subclass: #SuperclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:27'!
oldXyz__! !
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:27'!
m1__ self oldXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:27'!
oldXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:27'!
m1__ self oldXyz__! !

!classDefinition: #ClassToRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:27'!
SuperclassToRenameSelector subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:27' overrides: 50621445!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:27' overrides: 50621449!
m1__ self oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:28' overrides: 50621453!
oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:28' overrides: 50621457!
m1__ self oldXyz__! !

!classDefinition: #SubclassToRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:28'!
SuperclassToRenameSelector subclass: #SubclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:28' overrides: 50621445!
oldXyz__! !
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:28' overrides: 50621449!
m1__ self oldXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:28' overrides: 50621453!
oldXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:28' overrides: 50621457!
m1__ self oldXyz__! !
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:28'!
newXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:28'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:28' overrides: 50621515!
newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:28' overrides: 50621519!
newXyz__! !
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:28' overrides: 50621515!
newXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:28' overrides: 50621519!
newXyz__! !
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:29' prior: 50621449!
m1__ self newXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:29' prior: 50621457!
m1__ self newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:29' prior: 50621474 overrides: 50621540!
m1__ self newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:29' prior: 50621483 overrides: 50621545!
m1__ self newXyz__! !
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:29' prior: 50621501 overrides: 50621540!
m1__ self newXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:29' prior: 50621511 overrides: 50621545!
m1__ self newXyz__! !

!methodRemoval: SuperclassToRenameSelector #oldXyz__ stamp: 'aa 5/13/2023 20:06:29'!
oldXyz__!

!methodRemoval: SuperclassToRenameSelector class #oldXyz__ stamp: 'aa 5/13/2023 20:06:29'!
oldXyz__!

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'aa 5/13/2023 20:06:29'!
oldXyz__!

!methodRemoval: ClassToRenameSelector class #oldXyz__ stamp: 'aa 5/13/2023 20:06:29'!
oldXyz__!

!methodRemoval: SubclassToRenameSelector #oldXyz__ stamp: 'aa 5/13/2023 20:06:29'!
oldXyz__!

!methodRemoval: SubclassToRenameSelector class #oldXyz__ stamp: 'aa 5/13/2023 20:06:29'!
oldXyz__!

!testRun: #RenameSelectorTest #test32HierarchyScopeRenamesSelectorsFromSuperclassDefiningSelector stamp: 'aa 5/13/2023 20:06:29'!
PASSED!

!classRemoval: #SubclassToRenameSelector stamp: 'aa 5/13/2023 20:06:29'!
SuperclassToRenameSelector subclass: #SubclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRenameSelector stamp: 'aa 5/13/2023 20:06:29'!
SuperclassToRenameSelector subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #SuperclassToRenameSelector stamp: 'aa 5/13/2023 20:06:29'!
RefactoringClassTestData subclass: #SuperclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:29'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:29'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:29'!
m1__ self oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:30'!
oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:30'!
m1__ self oldXyz__! !

!classDefinition: #ClassToAvoidRenameSelector category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:30'!
RefactoringClassTestData subclass: #ClassToAvoidRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAvoidRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:30'!
oldXyz__! !
!ClassToAvoidRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:30'!
m1__ self oldXyz__! !
!ClassToAvoidRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:30'!
oldXyz__! !
!ClassToAvoidRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:30'!
m1__ self oldXyz__! !
!ClassToAvoidRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:30' overrides: 16785446!
compilerClass ^nil! !
!ClassToAvoidRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:30'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:30'!
newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:30'!
newXyz__! !
!ClassToAvoidRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:30' prior: 50621660!
m1__ self newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:30' prior: 50621627!
m1__ self newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:30' prior: 50621635!
m1__ self newXyz__! !

!methodRemoval: ClassToAvoidRenameSelector class #oldXyz__ stamp: 'aa 5/13/2023 20:06:30'!
oldXyz__!

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'aa 5/13/2023 20:06:30'!
oldXyz__!

!methodRemoval: ClassToRenameSelector class #oldXyz__ stamp: 'aa 5/13/2023 20:06:30'!
oldXyz__!

!testRun: #RenameSelectorTest #test33DoNotRenameSendersAndImplementorsWhoseCompilerClassIsDifferentToCompiler stamp: 'aa 5/13/2023 20:06:30'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'aa 5/13/2023 20:06:31'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToAvoidRenameSelector stamp: 'aa 5/13/2023 20:06:31'!
RefactoringClassTestData subclass: #ClassToAvoidRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemove category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:31'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRemove stamp: 'aa 5/13/2023 20:06:31'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #SafelyRemoveClassTest #test02ClassesWithNoReferencesAndNoSubclassesAreSafetelyRemoved stamp: 'aa 5/13/2023 20:06:31'!
PASSED!

!classDefinition: #ClassToRemove category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:31'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRemove stamp: 'aa 5/13/2023 20:06:32'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #SafelyRemoveClassTest #test03RemovingTheMetaclassRemovesTheClass stamp: 'aa 5/13/2023 20:06:32'!
PASSED!

!classDefinition: #ClassToRemove category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:32'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassReferencingClassToRemove category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:32'!
RefactoringClassTestData subclass: #ClassReferencingClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassReferencingClassToRemove methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:32'!
m1 ^ClassToRemove! !

!testRun: #SafelyRemoveClassTest #test04CanNotRemoveClassWithReferencesOutsideHierarchy stamp: 'aa 5/13/2023 20:06:32'!
PASSED!

!classRemoval: #ClassToRemove stamp: 'aa 5/13/2023 20:06:32'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassReferencingClassToRemove stamp: 'aa 5/13/2023 20:06:33'!
RefactoringClassTestData subclass: #ClassReferencingClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemove category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:33'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemove methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:33'!
m1 ^ClassToRemove! !

!classRemoval: #ClassToRemove stamp: 'aa 5/13/2023 20:06:33'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #SafelyRemoveClassTest #test05CanRemoveClassWithReferencesFromItself stamp: 'aa 5/13/2023 20:06:33'!
PASSED!

!classDefinition: #ClassToRemove category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:33'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveSubclass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:33'!
ClassToRemove subclass: #ClassToRemoveSubclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #SafelyRemoveClassTest #test06WarnIfClassToRemoveHasSubclasses stamp: 'aa 5/13/2023 20:06:33'!
PASSED!

!classRemoval: #ClassToRemoveSubclass stamp: 'aa 5/13/2023 20:06:34'!
ClassToRemove subclass: #ClassToRemoveSubclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRemove stamp: 'aa 5/13/2023 20:06:34'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemove category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:34'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveSubclass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:34'!
ClassToRemove subclass: #ClassToRemoveSubclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassReferencingClassToRemoveSubclass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:34'!
RefactoringClassTestData subclass: #ClassReferencingClassToRemoveSubclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassReferencingClassToRemoveSubclass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:34'!
m1 ^ClassToRemoveSubclass! !

!testRun: #SafelyRemoveClassTest #test07CanNotRemoveClassWhenSubclassesHaveReferencesOutsideTheHierarchy stamp: 'aa 5/13/2023 20:06:34'!
PASSED!

!classRemoval: #ClassToRemoveSubclass stamp: 'aa 5/13/2023 20:06:34'!
ClassToRemove subclass: #ClassToRemoveSubclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRemove stamp: 'aa 5/13/2023 20:06:34'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassReferencingClassToRemoveSubclass stamp: 'aa 5/13/2023 20:06:35'!
RefactoringClassTestData subclass: #ClassReferencingClassToRemoveSubclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemove category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:35'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveSubclass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:35'!
ClassToRemove subclass: #ClassToRemoveSubclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRemoveSubclass stamp: 'aa 5/13/2023 20:06:35'!
ClassToRemove subclass: #ClassToRemoveSubclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRemove stamp: 'aa 5/13/2023 20:06:35'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #SafelyRemoveClassTest #test08HierarchyIsRemovedIfSubclassesWarningIsResumed stamp: 'aa 5/13/2023 20:06:35'!
PASSED!

!classDefinition: #ClassToRemove category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:35'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveSubclass category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:35'!
ClassToRemove subclass: #ClassToRemoveSubclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemove methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:35'!
m1 ^ClassToRemoveSubclass! !
!ClassToRemoveSubclass methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:35'!
m2 ^ClassToRemove! !

!classRemoval: #ClassToRemoveSubclass stamp: 'aa 5/13/2023 20:06:36'!
ClassToRemove subclass: #ClassToRemoveSubclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRemove stamp: 'aa 5/13/2023 20:06:36'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #SafelyRemoveClassTest #test09CanRemoveIfReferencesToSubclassesAreInTheHierarchy stamp: 'aa 5/13/2023 20:06:36'!
PASSED!

!classDefinition: #ClassToRemove category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:36'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassReferencingClassToRemove category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:36'!
RefactoringClassTestData subclass: #ClassReferencingClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassReferencingClassToRemove methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:36'!
m1 ^#ClassToRemove! !

!testRun: #SafelyRemoveClassTest #test10WarnWhenHasReferencesToName stamp: 'aa 5/13/2023 20:06:36'!
PASSED!

!classRemoval: #ClassToRemove stamp: 'aa 5/13/2023 20:06:37'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassReferencingClassToRemove stamp: 'aa 5/13/2023 20:06:37'!
RefactoringClassTestData subclass: #ClassReferencingClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToChangeVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:37'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:37'!
m1| a |! !
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:37' prior: 50622045!
m1 ! !

!classDefinition: #ClassToChangeVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:37'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #TemporaryToInstanceVariableTest #test01ApplyChangesTemporaryVariableToInstanceVariable stamp: 'aa 5/13/2023 20:06:37'!
PASSED!

!classRemoval: #ClassToChangeVariable stamp: 'aa 5/13/2023 20:06:37'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToChangeVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:37'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:37'!
m1| a |a := 2.
	^a! !
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:37' prior: 50622082!
m1 a := 2.
	^a! !

!classDefinition: #ClassToChangeVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:37'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #TemporaryToInstanceVariableTest #test02ApplyDoesntChangeRestOfSourceCode stamp: 'aa 5/13/2023 20:06:37'!
PASSED!

!classRemoval: #ClassToChangeVariable stamp: 'aa 5/13/2023 20:06:38'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToChangeVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:38'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:38'!
m1! !

!testRun: #TemporaryToInstanceVariableTest #test03TemporaryToChangeShouldExist stamp: 'aa 5/13/2023 20:06:38'!
PASSED!

!classRemoval: #ClassToChangeVariable stamp: 'aa 5/13/2023 20:06:38'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToChangeVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:38'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:38'!
m1| a |! !
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:38'!
m2| a |! !

!testRun: #TemporaryToInstanceVariableTest #test04TemporaryShouldNotExistInOtherClassMethod stamp: 'aa 5/13/2023 20:06:38'!
PASSED!

!classRemoval: #ClassToChangeVariable stamp: 'aa 5/13/2023 20:06:39'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToChangeVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:39'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SubclassToRefactor category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:39'!
ClassToChangeVariable subclass: #SubclassToRefactor
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:39'!
m1| a |! !

!testRun: #TemporaryToInstanceVariableTest #test05InstanceVariableShouldNotExistInSubclass stamp: 'aa 5/13/2023 20:06:39'!
PASSED!

!classRemoval: #SubclassToRefactor stamp: 'aa 5/13/2023 20:06:39'!
ClassToChangeVariable subclass: #SubclassToRefactor
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToChangeVariable stamp: 'aa 5/13/2023 20:06:39'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToChangeVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:39'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SubclassToRefactor category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:39'!
ClassToChangeVariable subclass: #SubclassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:39'!
m1| a |! !
!SubclassToRefactor methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:39'!
m2| a |! !

!testRun: #TemporaryToInstanceVariableTest #test06TemporaryShouldNotExistInSubclassMethod stamp: 'aa 5/13/2023 20:06:39'!
PASSED!

!classRemoval: #SubclassToRefactor stamp: 'aa 5/13/2023 20:06:40'!
ClassToChangeVariable subclass: #SubclassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToChangeVariable stamp: 'aa 5/13/2023 20:06:40'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToChangeVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:40'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:40'!
m1| a |! !
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:40' prior: 50622255!
m1 ! !

!classDefinition: #ClassToChangeVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:40'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #TemporaryToInstanceVariableTest #test07RemovesPipesWhenRemovingLastTemporaryInMethod stamp: 'aa 5/13/2023 20:06:40'!
PASSED!

!classRemoval: #ClassToChangeVariable stamp: 'aa 5/13/2023 20:06:40'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToChangeVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:40'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:40'!
m1| a b |! !
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:41' prior: 50622292!
m1|  b |! !

!classDefinition: #ClassToChangeVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:41'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #TemporaryToInstanceVariableTest #test08DoesntRemoveOtherVariables stamp: 'aa 5/13/2023 20:06:41'!
PASSED!

!classRemoval: #ClassToChangeVariable stamp: 'aa 5/13/2023 20:06:41'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToChangeVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:41'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:41'!
m1
	[ | a | ].
	[ | a | ].! !

!testRun: #TemporaryToInstanceVariableTest #test09TemporaryShouldNotExistInOtherBlockInSameMethod stamp: 'aa 5/13/2023 20:06:41'!
PASSED!

!classRemoval: #ClassToChangeVariable stamp: 'aa 5/13/2023 20:06:41'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToChangeVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:41'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:41'!
m1
	[ | a | ].! !
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:41' prior: 50622353!
m1
	[   ].! !

!classDefinition: #ClassToChangeVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:41'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #TemporaryToInstanceVariableTest #test10RemovesPipesWhenRemovingLastTemporaryInBlock stamp: 'aa 5/13/2023 20:06:41'!
PASSED!

!classRemoval: #ClassToChangeVariable stamp: 'aa 5/13/2023 20:06:42'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToChangeVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:42'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:42'!
m1 [ | a | ]. [ :a | ].! !

!testRun: #TemporaryToInstanceVariableTest #test11TemporaryShouldNotExistAsArgumentInOtherBlocksInSameMethod stamp: 'aa 5/13/2023 20:06:42'!
PASSED!

!classRemoval: #ClassToChangeVariable stamp: 'aa 5/13/2023 20:06:42'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToChangeVariable category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:42'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:42'!
m1: a! !

!testRun: #TemporaryToInstanceVariableTest #test12CantExtractArgument stamp: 'aa 5/13/2023 20:06:42'!
PASSED!

!classRemoval: #ClassToChangeVariable stamp: 'aa 5/13/2023 20:06:42'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:42'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:42'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:43'!
m3 | x | self m1. false ifTrue: [ x m1 ]! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:43'!
m1: p1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:43' prior: 50622441!
m3 | x | self m1: 1. false ifTrue: [ x m1 ]! !

!methodRemoval: ClassToAddParameter #m1 stamp: 'aa 5/13/2023 20:06:43'!
m1!

!testRun: #AddParameterWithActualScopeTest #test01DoesNotChangePossibleMessageSendWhenInstructedToDoSo stamp: 'aa 5/13/2023 20:06:43'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'aa 5/13/2023 20:06:43'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:43'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:43'!
m1: p1 m3: p3! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:43'!
m3 | x | self m1: 1 m3: 3. false ifTrue: [ x m1: 1 m3: 3 ]! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:43'!
m1: p1 m2: p2 m3: p3! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:43' prior: 50622482!
m3 | x | self m1: 1 m2: 2 m3: 3. false ifTrue: [ x m1: 1 m3: 3 ]! !

!methodRemoval: ClassToAddParameter #m1:m3: stamp: 'aa 5/13/2023 20:06:43'!
m1: p1 m3: p3!

!testRun: #AddParameterWithActualScopeTest #test01_01_DoesNotChangePossibleMessageSendWhenInstructedToDoSoWithKeywordMessages stamp: 'aa 5/13/2023 20:06:43'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'aa 5/13/2023 20:06:44'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:44'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:44'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:44'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:44'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:44'!
m3 | x | x := self. x := ClassOfSender new. x m1! !

!testRun: #AddParameterWithActualScopeTest #test02CanNotAddParameterWithReceiverTypeOfMessageSendNotIncludedInImplementors stamp: 'aa 5/13/2023 20:06:44'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'aa 5/13/2023 20:06:44'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'aa 5/13/2023 20:06:44'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:44'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:44'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:44'!
m1: p1 m3: p3! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:44'!
m1: p1 m3: p3! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:45'!
m3 | x | x := self. x := ClassOfSender new. x m1: 1 m3: 3! !

!testRun: #AddParameterWithActualScopeTest #test02_01_CanNotAddParameterWithReceiverTypeOfMessageSendNotIncludedInImplementorsForKeywordMessage stamp: 'aa 5/13/2023 20:06:45'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'aa 5/13/2023 20:06:45'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'aa 5/13/2023 20:06:45'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:45'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:45'!
ClassToAddParameter subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:45'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:45'!
m3 | x | x := ClassOfSender new. x m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:45'!
m1: p1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:45' prior: 50622629!
m3 | x | x := ClassOfSender new. x m1: 1! !

!methodRemoval: ClassToAddParameter #m1 stamp: 'aa 5/13/2023 20:06:45'!
m1!

!testRun: #AddParameterWithActualScopeTest #test03AddParameterWhenReceiverTypeOfMessageSendIsSubtypeOfImplementorsType stamp: 'aa 5/13/2023 20:06:45'!
PASSED!

!classRemoval: #ClassOfSender stamp: 'aa 5/13/2023 20:06:46'!
ClassToAddParameter subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToAddParameter stamp: 'aa 5/13/2023 20:06:46'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:46'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:46'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:46'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:46'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:46'!
m3 | x | x := self. x := ClassOfSender new. x m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:46'!
m1: p1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:46'!
m1: p1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:46' prior: 50622686!
m3 | x | x := self. x := ClassOfSender new. x m1: 1! !

!methodRemoval: ClassToAddParameter #m1 stamp: 'aa 5/13/2023 20:06:46'!
m1!

!methodRemoval: ClassOfSender #m1 stamp: 'aa 5/13/2023 20:06:46'!
m1!

!testRun: #AddParameterWithActualScopeTest #test04AddParameterWhenReceiverTypeOfMessageSendIsEqualToImplementorsTypes stamp: 'aa 5/13/2023 20:06:46'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'aa 5/13/2023 20:06:46'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'aa 5/13/2023 20:06:47'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:47'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:47'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:47'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:47'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:47'!
m3 | x y | x := self. y := ClassOfSender new. x m1. y m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:47'!
m1: p1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:47'!
m1: p1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:47' prior: 50622750!
m3 | x y | x := self. y := ClassOfSender new. x m1: 1. y m1: 1! !

!methodRemoval: ClassToAddParameter #m1 stamp: 'aa 5/13/2023 20:06:47'!
m1!

!methodRemoval: ClassOfSender #m1 stamp: 'aa 5/13/2023 20:06:47'!
m1!

!testRun: #AddParameterWithActualScopeTest #test05AddParameterInDifferentMessageSendsWithReceiverTypeIsIncludedInImplementorsType stamp: 'aa 5/13/2023 20:06:47'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'aa 5/13/2023 20:06:47'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'aa 5/13/2023 20:06:47'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:47'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:47'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:48'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:48'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:48'!
m3 | x y | x := y:= self. x := y := ClassOfSender new. x m1. y m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:48'!
m1: p1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:48'!
m1: p1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:48' prior: 50622815!
m3 | x y | x := y:= self. x := y := ClassOfSender new. x m1: 1. y m1: 1! !

!methodRemoval: ClassToAddParameter #m1 stamp: 'aa 5/13/2023 20:06:48'!
m1!

!methodRemoval: ClassOfSender #m1 stamp: 'aa 5/13/2023 20:06:48'!
m1!

!testRun: #AddParameterWithActualScopeTest #test06AddParameterInDifferentMessageSendsWithReceiverTypeEqualToImplementorsType stamp: 'aa 5/13/2023 20:06:48'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'aa 5/13/2023 20:06:48'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'aa 5/13/2023 20:06:48'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:48'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:48'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:48'!
m3 | x | self m1. false ifTrue: [ x m1 ]! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:48'!
m1: p1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:49' prior: 50622868!
m3 | x | self m1: 1. false ifTrue: [ x m1: 1 ]! !

!methodRemoval: ClassToAddParameter #m1 stamp: 'aa 5/13/2023 20:06:49'!
m1!

!testRun: #AddParameterWithActualScopeTest #test07AddParameterToPossibleMessageSendIfInstructedToDoSo stamp: 'aa 5/13/2023 20:06:49'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'aa 5/13/2023 20:06:49'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:49'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:49'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:49'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:49'!
m3 | x | x := self. x := ClassOfSender new. x m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:49'!
m1: p1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:49' prior: 50622916!
m3 | x | x := self. x := ClassOfSender new. x m1: 1! !

!methodRemoval: ClassOfSender #m1 stamp: 'aa 5/13/2023 20:06:49'!
m1!

!testRun: #AddParameterWithActualScopeTest #test08AddParameterWithReceiverTypeOfMessageSendNotIncludedInImplementorsButSelectorNotImplementedInTypeHierarchy stamp: 'aa 5/13/2023 20:06:49'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'aa 5/13/2023 20:06:49'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'aa 5/13/2023 20:06:50'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:50'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:50'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:50'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:50'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:50'!
m3 self m1. ClassOfSender new m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:50'!
m1: p1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:50' prior: 50622976!
m3 self m1: 1. ClassOfSender new m1! !

!methodRemoval: ClassToAddParameter #m1 stamp: 'aa 5/13/2023 20:06:50'!
m1!

!testRun: #AddParameterWithActualScopeTest #test09AddParameterOnlyToValidMessageSendWhenMoreSendsInSameMethod stamp: 'aa 5/13/2023 20:06:50'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'aa 5/13/2023 20:06:50'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'aa 5/13/2023 20:06:50'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:50'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:50'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:50'!
m3 |x| self m1. x m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:51'!
m1: p1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:51' prior: 50623022!
m3 |x| self m1: 1. x m1! !

!methodRemoval: ClassToAddParameter #m1 stamp: 'aa 5/13/2023 20:06:51'!
m1!

!testRun: #AddParameterWithActualScopeTest #test10UsesTheModifiedSourceCodeWhenAddingParameterToMethodWithSureAndPossibleSenders stamp: 'aa 5/13/2023 20:06:51'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'aa 5/13/2023 20:06:51'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:51'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:51'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:51'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:51'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:51'!
m3 | x | x := self. x := ClassOfSender new. x m1; printString! !

!testRun: #AddParameterWithActualScopeTest #test11CanNotAddParameterWithReceiverTypeOfCascadeMessageSendNotIncludedInImplementors stamp: 'aa 5/13/2023 20:06:51'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'aa 5/13/2023 20:06:51'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'aa 5/13/2023 20:06:52'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #AddParameterWithActualScopeTest #test12SuperclassInstanceCreationMessagesShouldNotBeUsed stamp: 'aa 5/13/2023 20:06:52'!
PASSED!

!classDefinition: #ClassToAddParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:52'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:52'!
ClassToAddParameter subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:52'!
m1: p1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:52'!
m3 self m1: 1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:52'!
m1: p1 m2: p2 ! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:52' prior: 50623122!
m3 self m1: 1 m2: 2! !

!methodRemoval: ClassToAddParameter #m1: stamp: 'aa 5/13/2023 20:06:52'!
m1: p1!

!testRun: #AddParameterWithActualScopeTest #test13AddLastParameterCorrectly stamp: 'aa 5/13/2023 20:06:52'!
PASSED!

!classRemoval: #ClassOfSender stamp: 'aa 5/13/2023 20:06:52'!
ClassToAddParameter subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToAddParameter stamp: 'aa 5/13/2023 20:06:52'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:52'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:52'!
m1: p1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:53'!
m3 | x | self m1: 1. false ifTrue: [ x m1: 1 ]! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:53'!
m1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:53' prior: 50623167!
m3 | x | self m1. false ifTrue: [ x m1: 1 ]! !

!methodRemoval: ClassToRemoveParameter #m1: stamp: 'aa 5/13/2023 20:06:53'!
m1: p1!

!testRun: #RemoveParameterWithActualScopeTest #test01DoesNotChangePossibleMessageSendWhenInstructedToDoSo stamp: 'aa 5/13/2023 20:06:53'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'aa 5/13/2023 20:06:53'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:53'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:53'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:53'!
m1: p1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:53'!
m1: p1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:53'!
m3 | x | x := self. x := ClassOfSender new. x m1: 1! !

!testRun: #RemoveParameterWithActualScopeTest #test02CanNotRemoveParameterWithReceiverTypeOfMessageSendNotIncludedInImplementors stamp: 'aa 5/13/2023 20:06:53'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'aa 5/13/2023 20:06:54'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'aa 5/13/2023 20:06:54'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:54'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:54'!
ClassToRemoveParameter subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:54'!
m1: p1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:54'!
m3 | x | x := ClassOfSender new. x m1: 1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:54'!
m1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:54' prior: 50623266!
m3 | x | x := ClassOfSender new. x m1! !

!methodRemoval: ClassToRemoveParameter #m1: stamp: 'aa 5/13/2023 20:06:54'!
m1: p1!

!testRun: #RemoveParameterWithActualScopeTest #test03RemovesParameterWhenReceiverTypeOfMessageSendIsSubtypeOfImplementorsType stamp: 'aa 5/13/2023 20:06:54'!
PASSED!

!classRemoval: #ClassOfSender stamp: 'aa 5/13/2023 20:06:54'!
ClassToRemoveParameter subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRemoveParameter stamp: 'aa 5/13/2023 20:06:54'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:54'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:54'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:54'!
m1: p1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:54'!
m1: p1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:55'!
m3 | x | x := self. x := ClassOfSender new. x m1: 1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:55'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:55'!
m1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:55' prior: 50623326!
m3 | x | x := self. x := ClassOfSender new. x m1! !

!methodRemoval: ClassToRemoveParameter #m1: stamp: 'aa 5/13/2023 20:06:55'!
m1: p1!

!methodRemoval: ClassOfSender #m1: stamp: 'aa 5/13/2023 20:06:55'!
m1: p1!

!testRun: #RemoveParameterWithActualScopeTest #test04RemovesParameterWhenReceiverTypeOfMessageSendIsEqualToImplementorsTypes stamp: 'aa 5/13/2023 20:06:55'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'aa 5/13/2023 20:06:55'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'aa 5/13/2023 20:06:55'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:55'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:55'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:55'!
m1: p1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:55'!
m1: p1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:55'!
m3 | x y | x := self. y := ClassOfSender new. x m1: 1. y m1: 1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:55'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:56'!
m1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:56' prior: 50623392!
m3 | x y | x := self. y := ClassOfSender new. x m1. y m1! !

!methodRemoval: ClassToRemoveParameter #m1: stamp: 'aa 5/13/2023 20:06:56'!
m1: p1!

!methodRemoval: ClassOfSender #m1: stamp: 'aa 5/13/2023 20:06:56'!
m1: p1!

!testRun: #RemoveParameterWithActualScopeTest #test05RemovesParameterInDifferentMessageSendsWithReceiverTypeIsIncludedInImplementorsType stamp: 'aa 5/13/2023 20:06:56'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'aa 5/13/2023 20:06:56'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'aa 5/13/2023 20:06:56'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:56'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:56'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:56'!
m1: p1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:56'!
m1: p1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:56'!
m3 | x y | x := y:= self. x := y := ClassOfSender new. x m1: 1. y m1: 1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:56'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:56'!
m1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:56' prior: 50623459!
m3 | x y | x := y:= self. x := y := ClassOfSender new. x m1. y m1! !

!methodRemoval: ClassToRemoveParameter #m1: stamp: 'aa 5/13/2023 20:06:56'!
m1: p1!

!methodRemoval: ClassOfSender #m1: stamp: 'aa 5/13/2023 20:06:56'!
m1: p1!

!testRun: #RemoveParameterWithActualScopeTest #test06RemovesParameterInDifferentMessageSendsWithReceiverTypeEqualToImplementorsType stamp: 'aa 5/13/2023 20:06:56'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'aa 5/13/2023 20:06:57'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'aa 5/13/2023 20:06:57'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:57'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:57'!
m1: p1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:57'!
m3 | x | self m1: 1. false ifTrue: [ x m1: 1]! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:57'!
m1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:57' prior: 50623515!
m3 | x | self m1. false ifTrue: [ x m1]! !

!methodRemoval: ClassToRemoveParameter #m1: stamp: 'aa 5/13/2023 20:06:57'!
m1: p1!

!testRun: #RemoveParameterWithActualScopeTest #test07RemovesParameterToPossibleMessageSendIfInstructedToDoSo stamp: 'aa 5/13/2023 20:06:57'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'aa 5/13/2023 20:06:57'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:58'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:58'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:58'!
m1: p1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:58'!
m3 | x | x := self. x := ClassOfSender new. x m1: 1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:58'!
m1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:58' prior: 50623564!
m3 | x | x := self. x := ClassOfSender new. x m1! !

!methodRemoval: ClassOfSender #m1: stamp: 'aa 5/13/2023 20:06:58'!
m1: p1!

!testRun: #RemoveParameterWithActualScopeTest #test08RemovesParameterWithReceiverTypeOfMessageSendNotIncludedInImplementorsButSelectorNotImplementedInTypeHierarchy stamp: 'aa 5/13/2023 20:06:58'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'aa 5/13/2023 20:06:58'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'aa 5/13/2023 20:06:58'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:58'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:58'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:58'!
m1: p1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:58'!
m1: p1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:58'!
m3 self m1: 1. ClassOfSender new m1: 1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:58'!
m1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:59' prior: 50623625!
m3 self m1. ClassOfSender new m1: 1! !

!methodRemoval: ClassToRemoveParameter #m1: stamp: 'aa 5/13/2023 20:06:59'!
m1: p1!

!testRun: #RemoveParameterWithActualScopeTest #test09RemovesParameterOnlyToValidMessageSendWhenMoreSendsInSameMethod stamp: 'aa 5/13/2023 20:06:59'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'aa 5/13/2023 20:06:59'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'aa 5/13/2023 20:06:59'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:06:59'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:59'!
m1: p1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:59'!
m3 |x| self m1: 1. x m1: 1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:59'!
m1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:06:59' prior: 50623674!
m3 |x| self m1. x m1: 1! !

!methodRemoval: ClassToRemoveParameter #m1: stamp: 'aa 5/13/2023 20:06:59'!
m1: p1!

!testRun: #RemoveParameterWithActualScopeTest #test10UsesTheModifiedSourceCodeWhenRemovingParameterToMethodWithSureAndPossibleSenders stamp: 'aa 5/13/2023 20:06:59'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'aa 5/13/2023 20:07:00'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:07:00'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:07:00'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:07:00'!
m1: p1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:07:00'!
m1: p1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:07:00'!
m3 | x | x := self. x := ClassOfSender new. x m1: 1; printString! !

!testRun: #RemoveParameterWithActualScopeTest #test11CanNotRemoveParameterWithReceiverTypeOfCascadeMessageSendNotIncludedInImplementors stamp: 'aa 5/13/2023 20:07:00'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'aa 5/13/2023 20:07:00'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'aa 5/13/2023 20:07:00'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RemoveParameterWithActualScopeTest #test12SuperclassInstanceCreationMessagesShouldNotBeUsed stamp: 'aa 5/13/2023 20:07:00'!
PASSED!

!classDefinition: #ClassToRemoveParameter category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:07:00'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: '__Refactoring-TestData__' stamp: 'aa 5/13/2023 20:07:00'!
ClassToRemoveParameter subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:07:00'!
m1: p1 m2: p2! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:07:01'!
m3 self m1: 1 m2: 2! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:07:01'!
m2: p2! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 20:07:01' prior: 50623777!
m3 self m2: 2! !

!methodRemoval: ClassToRemoveParameter #m1:m2: stamp: 'aa 5/13/2023 20:07:01'!
m1: p1 m2: p2!

!testRun: #RemoveParameterWithActualScopeTest #test13RemovesOtherThanLastParameterCorrectly stamp: 'aa 5/13/2023 20:07:01'!
PASSED!

!classRemoval: #ClassOfSender stamp: 'aa 5/13/2023 20:07:01'!
ClassToRemoveParameter subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRemoveParameter stamp: 'aa 5/13/2023 20:07:01'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

self error: 'Invalid command received'!

self error: 'Invalid command received'!

Error!

Error!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 22:22:14' prior: 50606399!
test12ReceivingAnInvalidCommandStopsTheExecution

	| rover |
	rover := MarsRover placeIn: 1@1 facing: East .

	self
		should: [ rover processCommands: 'rtrr' ]
		raise: Error 
		withExceptionDo: [ :anError |
			self assert: anError messageText = MarsRover invalidCommandError ]! !

!testRun: #MarsRoverTest #test12ReceivingAnInvalidCommandStopsTheExecution stamp: 'aa 5/13/2023 22:22:14'!
ERROR!

!testRun: #MarsRoverTest #test12ReceivingAnInvalidCommandStopsTheExecution stamp: 'aa 5/13/2023 22:23:50'!
ERROR!
!MarsRover methodsFor: 'actions' stamp: 'aa 5/13/2023 22:24:55' prior: 50606295!
processCommands: stringCommand 
	
	| validCommand |
	
	stringCommand asOrderedCollection do: [:each | 
		validCommand := false .
		each = $f ifTrue: [
			position := position + direction forward .
			validCommand := true
			] .
		
		each = $b ifTrue: [
			position := position + direction backwards.
			validCommand := true
			] .
		
		each = $l ifTrue: [
			direction := direction left.
			validCommand := true
			] .
		
		each = $r ifTrue: [
			direction := direction right.
			validCommand := true
			] .
		
		validCommand ifFalse: [^MarsRover invalidCommandError]
		
		] .
	
		! !

!testRun: #MarsRoverTest #test12ReceivingAnInvalidCommandStopsTheExecution stamp: 'aa 5/13/2023 22:24:56'!
ERROR!

!testRun: #MarsRoverTest #test12ReceivingAnInvalidCommandStopsTheExecution stamp: 'aa 5/13/2023 22:24:58'!
ERROR!

!testRun: #MarsRoverTest #test12ReceivingAnInvalidCommandStopsTheExecution stamp: 'aa 5/13/2023 22:25:12'!
ERROR!

!testRun: #MarsRoverTest #test12ReceivingAnInvalidCommandStopsTheExecution stamp: 'aa 5/13/2023 22:25:27'!
ERROR!

!testRun: #MarsRoverTest #test12ReceivingAnInvalidCommandStopsTheExecution stamp: 'aa 5/13/2023 22:25:34'!
ERROR!
!MarsRover methodsFor: 'actions' stamp: 'aa 5/13/2023 22:26:50' prior: 50623833!
processCommands: stringCommand 
	
	| validCommand |
	
	stringCommand asOrderedCollection do: [:each | 
		validCommand := false .
		each = $f ifTrue: [
			position := position + direction forward .
			validCommand := true
			] .
		
		each = $b ifTrue: [
			position := position + direction backwards.
			validCommand := true
			] .
		
		each = $l ifTrue: [
			direction := direction left.
			validCommand := true
			] .
		
		each = $r ifTrue: [
			direction := direction right.
			validCommand := true
			] .
		
		validCommand ifFalse: [^self error: MarsRover invalidCommandError]
		
		] .
	
		! !

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/13/2023 22:26:54'!
PASSED!

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/13/2023 22:26:54'!
PASSED!

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/13/2023 22:26:54'!
PASSED!

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/13/2023 22:26:54'!
PASSED!

!testRun: #MarsRoverTest #test05ReceivingABackwardsCommandStringMovesItsPosition stamp: 'aa 5/13/2023 22:26:54'!
PASSED!

!testRun: #MarsRoverTest #test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise stamp: 'aa 5/13/2023 22:26:54'!
PASSED!

!testRun: #MarsRoverTest #test07ReceivingARightCommandStringRotatesIt90DegreesClockwise stamp: 'aa 5/13/2023 22:26:54'!
PASSED!

!testRun: #MarsRoverTest #test08ReceivingMultipleForwardCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/13/2023 22:26:54'!
PASSED!

!testRun: #MarsRoverTest #test09ReceivingMultipleBackwardsCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/13/2023 22:26:54'!
PASSED!

!testRun: #MarsRoverTest #test10ReceivingMultipleLeftCommandStringChangesItsDirectionMultipleTimes stamp: 'aa 5/13/2023 22:26:54'!
PASSED!

!testRun: #MarsRoverTest #test11ReceivingMultipleRightCommandStringChangesItsDirectionMultipleTimes stamp: 'aa 5/13/2023 22:26:54'!
PASSED!

!testRun: #MarsRoverTest #test12ReceivingAnInvalidCommandStopsTheExecution stamp: 'aa 5/13/2023 22:26:54'!
ERROR!

!testRun: #MarsRoverTest #test12ReceivingAnInvalidCommandStopsTheExecution stamp: 'aa 5/13/2023 22:26:54'!
ERROR!
!MarsRover class methodsFor: 'instance creation' stamp: 'aa 5/13/2023 22:27:57' prior: 50606219!
invalidCommandError

	^'Invalid command received'! !

!testRun: #MarsRoverTest #test12ReceivingAnInvalidCommandStopsTheExecution stamp: 'aa 5/13/2023 22:28:01'!
PASSED!

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/13/2023 22:28:03'!
PASSED!

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/13/2023 22:28:03'!
PASSED!

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/13/2023 22:28:03'!
PASSED!

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/13/2023 22:28:03'!
PASSED!

!testRun: #MarsRoverTest #test05ReceivingABackwardsCommandStringMovesItsPosition stamp: 'aa 5/13/2023 22:28:03'!
PASSED!

!testRun: #MarsRoverTest #test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise stamp: 'aa 5/13/2023 22:28:03'!
PASSED!

!testRun: #MarsRoverTest #test07ReceivingARightCommandStringRotatesIt90DegreesClockwise stamp: 'aa 5/13/2023 22:28:03'!
PASSED!

!testRun: #MarsRoverTest #test08ReceivingMultipleForwardCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/13/2023 22:28:03'!
PASSED!

!testRun: #MarsRoverTest #test09ReceivingMultipleBackwardsCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/13/2023 22:28:03'!
PASSED!

!testRun: #MarsRoverTest #test10ReceivingMultipleLeftCommandStringChangesItsDirectionMultipleTimes stamp: 'aa 5/13/2023 22:28:03'!
PASSED!

!testRun: #MarsRoverTest #test11ReceivingMultipleRightCommandStringChangesItsDirectionMultipleTimes stamp: 'aa 5/13/2023 22:28:03'!
PASSED!

!testRun: #MarsRoverTest #test12ReceivingAnInvalidCommandStopsTheExecution stamp: 'aa 5/13/2023 22:28:03'!
PASSED!

Object subclass: #MarsRover
	instanceVariableNames: 'position direction availableCommands'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRover category: 'MarsRover' stamp: 'aa 5/13/2023 22:39:14'!
Object subclass: #MarsRover
	instanceVariableNames: 'position direction availableCommands'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

Dictionary!

Dictionary!
!MarsRover methodsFor: 'initialization' stamp: 'aa 5/13/2023 22:46:33' prior: 50605104!
initializeIn: aPosition facing: aDirection 

	position := aPosition .
	direction := aDirection new .
	availableCommands := Dictionary new .
	availableCommands 
	add:	$f ->4; 
	add: $b ->3; 
	add: $l ->1; 
	add: $r ->2; yourself! !
!MarsRover methodsFor: 'initialization' stamp: 'aa 5/13/2023 22:47:39' prior: 50624014!
initializeIn: aPosition facing: aDirection 

	position := aPosition .
	direction := aDirection new .
	availableCommands := Dictionary new .
	availableCommands 
	add:	$f ->[ :rover | rover position forward ] ; 
	add: $b ->3; 
	add: $l ->1; 
	add: $r ->2; yourself! !
!MarsRover methodsFor: 'initialization' stamp: 'aa 5/13/2023 22:48:44' prior: 50624024!
initializeIn: aPosition facing: aDirection 

	position := aPosition .
	direction := aDirection new .
	availableCommands := Dictionary new .
	availableCommands 
	add:	$f ->[position := position + direction forward ] ; 
	add: $b ->3; 
	add: $l ->1; 
	add: $r ->2; yourself! !
!MarsRover methodsFor: 'initialization' stamp: 'aa 5/13/2023 22:48:56' prior: 50624036!
initializeIn: aPosition facing: aDirection 

	position := aPosition .
	direction := aDirection new .
	availableCommands := Dictionary new .
	availableCommands 
	add:	$f ->[position := position + direction forward] ; 
	add: $b ->[position := position + direction backwards]; 
	add: $l ->1; 
	add: $r ->2; yourself! !
!MarsRover methodsFor: 'initialization' stamp: 'aa 5/13/2023 22:49:23' prior: 50624048!
initializeIn: aPosition facing: aDirection 

	position := aPosition .
	direction := aDirection new .
	availableCommands := Dictionary new .
	availableCommands 
	add:	$f ->[position := position + direction forward] ; 
	add: $b ->[position := position + direction backwards]; 
	add: $l ->[direction := direction left]; 
	add: $r ->2; yourself! !
!MarsRover methodsFor: 'initialization' stamp: 'aa 5/13/2023 22:49:28' prior: 50624061!
initializeIn: aPosition facing: aDirection 

	position := aPosition .
	direction := aDirection new .
	availableCommands := Dictionary new .
	availableCommands 
	add:	$f ->[position := position + direction forward] ; 
	add: $b ->[position := position + direction backwards]; 
	add: $l ->[direction := direction left]; 
	add: $r ->[direction := direction right]; yourself! !
!East methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 22:50:09'!
howToMoveForward 

	^1@0! !
!North methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 22:50:09'!
howToMoveForward

	^0@1! !
!South methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 22:50:09'!
howToMoveForward

	^0@-1! !
!West methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 22:50:09'!
howToMoveForward

	^-1@0! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 22:50:09' prior: 50623872!
processCommands: stringCommand 
	
	| validCommand |
	
	stringCommand asOrderedCollection do: [:each | 
		validCommand := false .
		each = $f ifTrue: [
			position := position + direction howToMoveForward .
			validCommand := true
			] .
		
		each = $b ifTrue: [
			position := position + direction backwards.
			validCommand := true
			] .
		
		each = $l ifTrue: [
			direction := direction left.
			validCommand := true
			] .
		
		each = $r ifTrue: [
			direction := direction right.
			validCommand := true
			] .
		
		validCommand ifFalse: [^self error: MarsRover invalidCommandError]
		
		] .
	
		! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 22:50:09' prior: 50624075!
initializeIn: aPosition facing: aDirection 

	position := aPosition .
	direction := aDirection new .
	availableCommands := Dictionary new .
	availableCommands 
	add:	$f ->[position := position + direction howToMoveForward] ; 
	add: $b ->[position := position + direction backwards]; 
	add: $l ->[direction := direction left]; 
	add: $r ->[direction := direction right]; yourself! !

!methodRemoval: East #forward stamp: 'aa 5/13/2023 22:50:09'!
forward 

	^1@0!

!methodRemoval: North #forward stamp: 'aa 5/13/2023 22:50:09'!
forward

	^0@1!

!methodRemoval: South #forward stamp: 'aa 5/13/2023 22:50:09'!
forward

	^0@-1!

!methodRemoval: West #forward stamp: 'aa 5/13/2023 22:50:09'!
forward

	^-1@0!
!East methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 22:50:23'!
howToMoveBackwards

	^-1@0! !
!North methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 22:50:24'!
howToMoveBackwards

	^0@-1! !
!South methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 22:50:24'!
howToMoveBackwards

	^0@1! !
!West methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 22:50:24'!
howToMoveBackwards

	^1@0! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 22:50:24' prior: 50624127!
initializeIn: aPosition facing: aDirection 

	position := aPosition .
	direction := aDirection new .
	availableCommands := Dictionary new .
	availableCommands 
	add:	$f ->[position := position + direction howToMoveForward] ; 
	add: $b ->[position := position + direction howToMoveBackwards]; 
	add: $l ->[direction := direction left]; 
	add: $r ->[direction := direction right]; yourself! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 22:50:24' prior: 50624105!
processCommands: stringCommand 
	
	| validCommand |
	
	stringCommand asOrderedCollection do: [:each | 
		validCommand := false .
		each = $f ifTrue: [
			position := position + direction howToMoveForward .
			validCommand := true
			] .
		
		each = $b ifTrue: [
			position := position + direction howToMoveBackwards.
			validCommand := true
			] .
		
		each = $l ifTrue: [
			direction := direction left.
			validCommand := true
			] .
		
		each = $r ifTrue: [
			direction := direction right.
			validCommand := true
			] .
		
		validCommand ifFalse: [^self error: MarsRover invalidCommandError]
		
		] .
	
		! !

!methodRemoval: East #backwards stamp: 'aa 5/13/2023 22:50:24'!
backwards

	^-1@0!

!methodRemoval: North #backwards stamp: 'aa 5/13/2023 22:50:24'!
backwards

	^0@-1!

!methodRemoval: South #backwards stamp: 'aa 5/13/2023 22:50:24'!
backwards

	^0@1!

!methodRemoval: West #backwards stamp: 'aa 5/13/2023 22:50:24'!
backwards

	^1@0!
!East methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 22:50:37'!
howToRotateLeft

	^North new! !
!North methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 22:50:37'!
howToRotateLeft

	^West new! !
!South methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 22:50:37'!
howToRotateLeft

	^East new! !
!West methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 22:50:37'!
howToRotateLeft

	^South new! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 22:50:37' prior: 50624184!
processCommands: stringCommand 
	
	| validCommand |
	
	stringCommand asOrderedCollection do: [:each | 
		validCommand := false .
		each = $f ifTrue: [
			position := position + direction howToMoveForward .
			validCommand := true
			] .
		
		each = $b ifTrue: [
			position := position + direction howToMoveBackwards.
			validCommand := true
			] .
		
		each = $l ifTrue: [
			direction := direction howToRotateLeft.
			validCommand := true
			] .
		
		each = $r ifTrue: [
			direction := direction right.
			validCommand := true
			] .
		
		validCommand ifFalse: [^self error: MarsRover invalidCommandError]
		
		] .
	
		! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 22:50:37' prior: 50624168!
initializeIn: aPosition facing: aDirection 

	position := aPosition .
	direction := aDirection new .
	availableCommands := Dictionary new .
	availableCommands 
	add:	$f ->[position := position + direction howToMoveForward] ; 
	add: $b ->[position := position + direction howToMoveBackwards]; 
	add: $l ->[direction := direction howToRotateLeft]; 
	add: $r ->[direction := direction right]; yourself! !

!methodRemoval: East #left stamp: 'aa 5/13/2023 22:50:37'!
left

	^North new!

!methodRemoval: North #left stamp: 'aa 5/13/2023 22:50:37'!
left

	^West new!

!methodRemoval: South #left stamp: 'aa 5/13/2023 22:50:37'!
left

	^East new!

!methodRemoval: West #left stamp: 'aa 5/13/2023 22:50:37'!
left

	^South new!
!East methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 22:50:45'!
howToRotateRight

	^East new! !
!North methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 22:50:45'!
howToRotateRight

	^East new! !
!South methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 22:50:45'!
howToRotateRight

	^West new! !
!West methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 22:50:45'!
howToRotateRight

	^North new! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 22:50:45' prior: 50624255!
initializeIn: aPosition facing: aDirection 

	position := aPosition .
	direction := aDirection new .
	availableCommands := Dictionary new .
	availableCommands 
	add:	$f ->[position := position + direction howToMoveForward] ; 
	add: $b ->[position := position + direction howToMoveBackwards]; 
	add: $l ->[direction := direction howToRotateLeft]; 
	add: $r ->[direction := direction howToRotateRight]; yourself! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'aa 5/13/2023 22:50:45' prior: 50624232!
processCommands: stringCommand 
	
	| validCommand |
	
	stringCommand asOrderedCollection do: [:each | 
		validCommand := false .
		each = $f ifTrue: [
			position := position + direction howToMoveForward .
			validCommand := true
			] .
		
		each = $b ifTrue: [
			position := position + direction howToMoveBackwards.
			validCommand := true
			] .
		
		each = $l ifTrue: [
			direction := direction howToRotateLeft.
			validCommand := true
			] .
		
		each = $r ifTrue: [
			direction := direction howToRotateRight.
			validCommand := true
			] .
		
		validCommand ifFalse: [^self error: MarsRover invalidCommandError]
		
		] .
	
		! !

!methodRemoval: East #right stamp: 'aa 5/13/2023 22:50:45'!
right

	^East new!

!methodRemoval: North #right stamp: 'aa 5/13/2023 22:50:45'!
right

	^East new!

!methodRemoval: South #right stamp: 'aa 5/13/2023 22:50:45'!
right

	^West new!

!methodRemoval: West #right stamp: 'aa 5/13/2023 22:50:45'!
right

	^North new!

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/13/2023 22:50:50'!
PASSED!

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/13/2023 22:50:50'!
PASSED!

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/13/2023 22:50:50'!
PASSED!

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/13/2023 22:50:50'!
PASSED!

!testRun: #MarsRoverTest #test05ReceivingABackwardsCommandStringMovesItsPosition stamp: 'aa 5/13/2023 22:50:50'!
PASSED!

!testRun: #MarsRoverTest #test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise stamp: 'aa 5/13/2023 22:50:50'!
PASSED!

!testRun: #MarsRoverTest #test07ReceivingARightCommandStringRotatesIt90DegreesClockwise stamp: 'aa 5/13/2023 22:50:50'!
PASSED!

!testRun: #MarsRoverTest #test08ReceivingMultipleForwardCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/13/2023 22:50:50'!
PASSED!

!testRun: #MarsRoverTest #test09ReceivingMultipleBackwardsCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/13/2023 22:50:50'!
PASSED!

!testRun: #MarsRoverTest #test10ReceivingMultipleLeftCommandStringChangesItsDirectionMultipleTimes stamp: 'aa 5/13/2023 22:50:50'!
PASSED!

!testRun: #MarsRoverTest #test11ReceivingMultipleRightCommandStringChangesItsDirectionMultipleTimes stamp: 'aa 5/13/2023 22:50:50'!
PASSED!

!testRun: #MarsRoverTest #test12ReceivingAnInvalidCommandStopsTheExecution stamp: 'aa 5/13/2023 22:50:50'!
PASSED!
!MarsRover methodsFor: 'initialization' stamp: 'aa 5/13/2023 22:51:29'!
populateCommandsDictionary

	^ availableCommands 
	add:	$f ->[position := position + direction howToMoveForward] ; 
	add: $b ->[position := position + direction howToMoveBackwards]; 
	add: $l ->[direction := direction howToRotateLeft]; 
	add: $r ->[direction := direction howToRotateRight]; yourself! !
!MarsRover methodsFor: 'initialization' stamp: 'aa 5/13/2023 22:51:29' prior: 50624296!
initializeIn: aPosition facing: aDirection 

	position := aPosition .
	direction := aDirection new .
	availableCommands := Dictionary new .
	self populateCommandsDictionary! !
!MarsRover methodsFor: 'initialization' stamp: 'aa 5/13/2023 22:51:49' prior: 50624392!
populateCommandsDictionary

	availableCommands 
	add:	$f ->[position := position + direction howToMoveForward] ; 
	add: $b ->[position := position + direction howToMoveBackwards]; 
	add: $l ->[direction := direction howToRotateLeft]; 
	add: $r ->[direction := direction howToRotateRight]; yourself! !
!MarsRover methodsFor: 'initialization' stamp: 'aa 5/13/2023 22:52:08' prior: 50624405!
initializeIn: aPosition facing: aDirection 

	position := aPosition .
	direction := aDirection new .
	self populateCommandsDictionary! !
!MarsRover methodsFor: 'initialization' stamp: 'aa 5/13/2023 22:52:26' prior: 50624414!
populateCommandsDictionary

	availableCommands := Dictionary new  
	add:	$f ->[position := position + direction howToMoveForward] ; 
	add: $b ->[position := position + direction howToMoveBackwards]; 
	add: $l ->[direction := direction howToRotateLeft]; 
	add: $r ->[direction := direction howToRotateRight]; yourself! !
!MarsRover methodsFor: 'actions' stamp: 'aa 5/13/2023 22:53:46' prior: 50624312!
processCommands: stringCommand 
	
	| validCommand |
	
	stringCommand asOrderedCollection do: [:each | 
		
		availableCommands at: each ifAbsent: [^self error: MarsRover invalidCommandError]
		
		"validCommand := false .
		each = $f ifTrue: [
			position := position + direction howToMoveForward .
			validCommand := true
			] .
		
		each = $b ifTrue: [
			position := position + direction howToMoveBackwards.
			validCommand := true
			] .
		
		each = $l ifTrue: [
			direction := direction howToRotateLeft.
			validCommand := true
			] .
		
		each = $r ifTrue: [
			direction := direction howToRotateRight.
			validCommand := true
			] .
		
		validCommand ifFalse: [^self error: MarsRover invalidCommandError]"
		
		] .
	
		! !

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/13/2023 22:53:53'!
PASSED!

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/13/2023 22:53:53'!
PASSED!

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/13/2023 22:53:53'!
PASSED!

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/13/2023 22:53:53'!
FAILURE!

!testRun: #MarsRoverTest #test05ReceivingABackwardsCommandStringMovesItsPosition stamp: 'aa 5/13/2023 22:53:53'!
FAILURE!

!testRun: #MarsRoverTest #test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise stamp: 'aa 5/13/2023 22:53:53'!
FAILURE!

!testRun: #MarsRoverTest #test07ReceivingARightCommandStringRotatesIt90DegreesClockwise stamp: 'aa 5/13/2023 22:53:53'!
FAILURE!

!testRun: #MarsRoverTest #test08ReceivingMultipleForwardCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/13/2023 22:53:53'!
FAILURE!

!testRun: #MarsRoverTest #test09ReceivingMultipleBackwardsCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/13/2023 22:53:53'!
FAILURE!

!testRun: #MarsRoverTest #test10ReceivingMultipleLeftCommandStringChangesItsDirectionMultipleTimes stamp: 'aa 5/13/2023 22:53:53'!
FAILURE!

!testRun: #MarsRoverTest #test11ReceivingMultipleRightCommandStringChangesItsDirectionMultipleTimes stamp: 'aa 5/13/2023 22:53:53'!
PASSED!

!testRun: #MarsRoverTest #test12ReceivingAnInvalidCommandStopsTheExecution stamp: 'aa 5/13/2023 22:53:53'!
PASSED!

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/13/2023 22:53:57'!
PASSED!

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/13/2023 22:53:59'!
PASSED!

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/13/2023 22:54:00'!
FAILURE!

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/13/2023 22:54:00'!
FAILURE!
!MarsRover methodsFor: 'actions' stamp: 'aa 5/13/2023 22:56:18'!
moveForward

	position := position + direction howToMoveForward ! !
!MarsRover methodsFor: 'actions' stamp: 'aa 5/13/2023 22:56:28'!
moveBackwards

	position := position + direction howToMoveBackwards ! !
!MarsRover methodsFor: 'actions' stamp: 'aa 5/13/2023 22:56:42'!
rotateLeft

	direction := direction howToRotateLEft! !
!MarsRover methodsFor: 'actions' stamp: 'aa 5/13/2023 22:56:43' prior: 50624545!
rotateLeft

	direction := direction howToRotateLeft! !
!MarsRover methodsFor: 'actions' stamp: 'aa 5/13/2023 22:56:46' prior: 50624550!
rotateLeft

	direction := direction howToRotateRight! !
!MarsRover methodsFor: 'actions' stamp: 'aa 5/13/2023 22:57:15'!
rotateRight

	direction := direction howToRotateRight! !
!MarsRover methodsFor: 'initialization' stamp: 'aa 5/13/2023 22:58:12' prior: 50624435!
populateCommandsDictionary

	availableCommands := Dictionary new  
	add:	$f ->[:rover | rover moveForward ] ; 
	add: $b ->[:rover | rover moveBackwards ]; 
	add: $l ->[:rover | rover rotateLeft ]; 
	add: $r ->[:rover | rover rotateRight ]; yourself! !
!MarsRover methodsFor: 'actions' stamp: 'aa 5/13/2023 22:58:53' prior: 50624448!
processCommands: stringCommand 
	
	| validCommand |
	
	stringCommand asOrderedCollection do: [:each | 
		
		(availableCommands at: each ifAbsent: [^self error: MarsRover invalidCommandError]) value: self
		
		"validCommand := false .
		each = $f ifTrue: [
			position := position + direction howToMoveForward .
			validCommand := true
			] .
		
		each = $b ifTrue: [
			position := position + direction howToMoveBackwards.
			validCommand := true
			] .
		
		each = $l ifTrue: [
			direction := direction howToRotateLeft.
			validCommand := true
			] .
		
		each = $r ifTrue: [
			direction := direction howToRotateRight.
			validCommand := true
			] .
		
		validCommand ifFalse: [^self error: MarsRover invalidCommandError]"
		
		] .
	
		! !

!testRun: #MarsRoverTest #test08ReceivingMultipleForwardCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/13/2023 22:58:58'!
PASSED!

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/13/2023 22:59:00'!
PASSED!

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/13/2023 22:59:00'!
PASSED!

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/13/2023 22:59:00'!
PASSED!

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/13/2023 22:59:00'!
PASSED!

!testRun: #MarsRoverTest #test05ReceivingABackwardsCommandStringMovesItsPosition stamp: 'aa 5/13/2023 22:59:00'!
PASSED!

!testRun: #MarsRoverTest #test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise stamp: 'aa 5/13/2023 22:59:00'!
FAILURE!

!testRun: #MarsRoverTest #test07ReceivingARightCommandStringRotatesIt90DegreesClockwise stamp: 'aa 5/13/2023 22:59:00'!
PASSED!

!testRun: #MarsRoverTest #test08ReceivingMultipleForwardCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/13/2023 22:59:00'!
PASSED!

!testRun: #MarsRoverTest #test09ReceivingMultipleBackwardsCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/13/2023 22:59:00'!
PASSED!

!testRun: #MarsRoverTest #test10ReceivingMultipleLeftCommandStringChangesItsDirectionMultipleTimes stamp: 'aa 5/13/2023 22:59:00'!
FAILURE!

!testRun: #MarsRoverTest #test11ReceivingMultipleRightCommandStringChangesItsDirectionMultipleTimes stamp: 'aa 5/13/2023 22:59:00'!
PASSED!

!testRun: #MarsRoverTest #test12ReceivingAnInvalidCommandStopsTheExecution stamp: 'aa 5/13/2023 22:59:00'!
PASSED!
!MarsRover methodsFor: 'actions' stamp: 'aa 5/13/2023 22:59:16' prior: 50624555!
rotateLeft

	direction := direction howToRotateLeft! !

!testRun: #MarsRoverTest #test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise stamp: 'aa 5/13/2023 22:59:23'!
PASSED!

!testRun: #MarsRoverTest #test12ReceivingAnInvalidCommandStopsTheExecution stamp: 'aa 5/13/2023 22:59:24'!
PASSED!

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/13/2023 22:59:26'!
PASSED!

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/13/2023 22:59:26'!
PASSED!

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/13/2023 22:59:26'!
PASSED!

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/13/2023 22:59:26'!
PASSED!

!testRun: #MarsRoverTest #test05ReceivingABackwardsCommandStringMovesItsPosition stamp: 'aa 5/13/2023 22:59:26'!
PASSED!

!testRun: #MarsRoverTest #test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise stamp: 'aa 5/13/2023 22:59:27'!
PASSED!

!testRun: #MarsRoverTest #test07ReceivingARightCommandStringRotatesIt90DegreesClockwise stamp: 'aa 5/13/2023 22:59:27'!
PASSED!

!testRun: #MarsRoverTest #test08ReceivingMultipleForwardCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/13/2023 22:59:27'!
PASSED!

!testRun: #MarsRoverTest #test09ReceivingMultipleBackwardsCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/13/2023 22:59:27'!
PASSED!

!testRun: #MarsRoverTest #test10ReceivingMultipleLeftCommandStringChangesItsDirectionMultipleTimes stamp: 'aa 5/13/2023 22:59:27'!
PASSED!

!testRun: #MarsRoverTest #test11ReceivingMultipleRightCommandStringChangesItsDirectionMultipleTimes stamp: 'aa 5/13/2023 22:59:27'!
PASSED!

!testRun: #MarsRoverTest #test12ReceivingAnInvalidCommandStopsTheExecution stamp: 'aa 5/13/2023 22:59:27'!
PASSED!
!MarsRover methodsFor: 'actions' stamp: 'aa 5/13/2023 23:00:19' prior: 50624575!
processCommands: stringCommand 
	
	stringCommand asOrderedCollection do: [:each | 
		
		(availableCommands at: each ifAbsent: [^self error: MarsRover invalidCommandError]) value: self
		] .
	
		! !
!MarsRover methodsFor: 'actions' stamp: 'aa 5/13/2023 23:00:23' prior: 50624713!
processCommands: stringCommand 
	
	stringCommand asOrderedCollection do: [:each | 
		(availableCommands at: each ifAbsent: [^self error: MarsRover invalidCommandError]) value: self
		] .
	
		! !

!testRun: #MarsRoverTest #test12ReceivingAnInvalidCommandStopsTheExecution stamp: 'aa 5/13/2023 23:12:49'!
PASSED!

----SNAPSHOT----(13 May 2023 23:16:48) CuisUniversity-5706.image priorSource: 8713034!

----QUIT----(13 May 2023 23:18:12) CuisUniversity-5706.image priorSource: 9378678!

----STARTUP---- (14 May 2023 18:15:27) as C:\Users\Santiago\Desktop\UBA\Inge1\ingenieria-de-software-1\05-MarsRover\windows64\CuisUniversity-5706.image!

!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/14/2023 18:16:22'!
test12FailsWhenPlacingTheRoverInANonMapPosition

	| rover |
	rover := MarsRover placeIn: (1,2) facing: East .

	self
		should: [ rover processCommands: 'rtrr' ]
		raise: Error 
		withExceptionDo: [ :anError |
			self assert: anError messageText = MarsRover invalidCommandError ]! !
!MarsRover class methodsFor: 'instance creation' stamp: 'aa 5/14/2023 18:17:20' prior: 50604009!
placeIn: aPoint facing: aSymbol 
		
	"aPoint isKindOf: "
	
	^self new initializeIn: aPoint facing: aSymbol ! !

1@0!

1@0!

1@1!
!MarsRover class methodsFor: 'instance creation' stamp: 'aa 5/14/2023 18:19:17' prior: 50624757!
placeIn: aPoint facing: aSymbol 
		
	"[aPoint isKindOf: Point] ifFalse: [ | invalidPositionError |self error: invalidPositionError] ."
	
	^self new initializeIn: aPoint facing: aSymbol ! !
!MarsRover class methodsFor: 'instance creation' stamp: 'aa 5/14/2023 18:19:37'!
invalidPositionError

	^'That is not a valid starting position!!'! !
!MarsRover class methodsFor: 'instance creation' stamp: 'aa 5/14/2023 18:19:49'!
invalidOrientationError

	^'That is not a valid starting orientation!!'! !
!MarsRover class methodsFor: 'instance creation' stamp: 'aa 5/14/2023 18:20:47' prior: 50624765!
placeIn: aPoint facing: aSymbol 
		
	[aPoint isKindOf: Point] ifFalse: [self error: MarsRover invalidPositionError ] .
	[aSymbol isKindOf: CardinalDirections ] ifFalse: [self error: MarsRover invalidOrientationError ] .
	
	^self new initializeIn: aPoint facing: aSymbol ! !
!MarsRover class methodsFor: 'instance creation' stamp: 'aa 5/14/2023 18:20:50' prior: 50624785!
placeIn: aPoint facing: aDirection 
		
	[aPoint isKindOf: Point] ifFalse: [self error: MarsRover invalidPositionError ] .
	[aDirection isKindOf: CardinalDirections ] ifFalse: [self error: MarsRover invalidOrientationError ] .
	
	^self new initializeIn: aPoint facing: aDirection ! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/14/2023 18:21:09'!
test13FailsWhenPlacingTheRoverInANonMapPosition

	| rover |
	rover := MarsRover placeIn: (1,2) facing: East .

	self
		should: [ rover processCommands: 'rtrr' ]
		raise: Error 
		withExceptionDo: [ :anError |
			self assert: anError messageText = MarsRover invalidCommandError ]! !

!methodRemoval: MarsRoverTest #test12FailsWhenPlacingTheRoverInANonMapPosition stamp: 'aa 5/14/2023 18:21:10'!
test12FailsWhenPlacingTheRoverInANonMapPosition

	| rover |
	rover := MarsRover placeIn: (1,2) facing: East .

	self
		should: [ rover processCommands: 'rtrr' ]
		raise: Error 
		withExceptionDo: [ :anError |
			self assert: anError messageText = MarsRover invalidCommandError ]!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/14/2023 18:21:35' prior: 50624809!
test13FailsWhenPlacingTheRoverInANonMapPosition


	self
		should: [MarsRover placeIn: (1,2) facing: East ]
		raise: Error 
		withExceptionDo: [ :anError |
			self assert: anError messageText = MarsRover invalidPositionError ]! !

!testRun: #MarsRoverTest #test13FailsWhenPlacingTheRoverInANonMapPosition stamp: 'aa 5/14/2023 18:21:37'!
FAILURE!

!testRun: #MarsRoverTest #test13FailsWhenPlacingTheRoverInANonMapPosition stamp: 'aa 5/14/2023 18:21:37'!
FAILURE!

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/14/2023 18:21:44'!
ERROR!

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/14/2023 18:21:44'!
ERROR!

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/14/2023 18:21:44'!
ERROR!

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/14/2023 18:21:44'!
ERROR!

!testRun: #MarsRoverTest #test05ReceivingABackwardsCommandStringMovesItsPosition stamp: 'aa 5/14/2023 18:21:44'!
ERROR!

!testRun: #MarsRoverTest #test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise stamp: 'aa 5/14/2023 18:21:44'!
ERROR!

!testRun: #MarsRoverTest #test07ReceivingARightCommandStringRotatesIt90DegreesClockwise stamp: 'aa 5/14/2023 18:21:44'!
ERROR!

!testRun: #MarsRoverTest #test08ReceivingMultipleForwardCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/14/2023 18:21:44'!
ERROR!

!testRun: #MarsRoverTest #test09ReceivingMultipleBackwardsCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/14/2023 18:21:44'!
ERROR!

!testRun: #MarsRoverTest #test10ReceivingMultipleLeftCommandStringChangesItsDirectionMultipleTimes stamp: 'aa 5/14/2023 18:21:44'!
ERROR!

!testRun: #MarsRoverTest #test11ReceivingMultipleRightCommandStringChangesItsDirectionMultipleTimes stamp: 'aa 5/14/2023 18:21:44'!
ERROR!

!testRun: #MarsRoverTest #test12ReceivingAnInvalidCommandStopsTheExecution stamp: 'aa 5/14/2023 18:21:44'!
ERROR!

!testRun: #MarsRoverTest #test13FailsWhenPlacingTheRoverInANonMapPosition stamp: 'aa 5/14/2023 18:21:44'!
FAILURE!

!testRun: #MarsRoverTest #test12ReceivingAnInvalidCommandStopsTheExecution stamp: 'aa 5/14/2023 18:21:51'!
ERROR!

!testRun: #MarsRoverTest #test12ReceivingAnInvalidCommandStopsTheExecution stamp: 'aa 5/14/2023 18:21:51'!
ERROR!

!testRun: #MarsRoverTest #test12ReceivingAnInvalidCommandStopsTheExecution stamp: 'aa 5/14/2023 18:22:00'!
ERROR!

!testRun: #MarsRoverTest #test12ReceivingAnInvalidCommandStopsTheExecution stamp: 'aa 5/14/2023 18:22:08'!
ERROR!
!MarsRover class methodsFor: 'instance creation' stamp: 'aa 5/14/2023 18:22:35' prior: 50624797!
placeIn: aPoint facing: aDirection 
		
	(aPoint isKindOf: Point) ifFalse: [self error: MarsRover invalidPositionError ] .
	(aDirection isKindOf: CardinalDirections) ifFalse: [self error: MarsRover invalidOrientationError ] .
	
	^self new initializeIn: aPoint facing: aDirection ! !

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/14/2023 18:22:42'!
ERROR!

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/14/2023 18:22:42'!
ERROR!

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/14/2023 18:22:42'!
ERROR!

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/14/2023 18:22:42'!
ERROR!

!testRun: #MarsRoverTest #test05ReceivingABackwardsCommandStringMovesItsPosition stamp: 'aa 5/14/2023 18:22:42'!
ERROR!

!testRun: #MarsRoverTest #test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise stamp: 'aa 5/14/2023 18:22:42'!
ERROR!

!testRun: #MarsRoverTest #test07ReceivingARightCommandStringRotatesIt90DegreesClockwise stamp: 'aa 5/14/2023 18:22:42'!
ERROR!

!testRun: #MarsRoverTest #test08ReceivingMultipleForwardCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/14/2023 18:22:42'!
ERROR!

!testRun: #MarsRoverTest #test09ReceivingMultipleBackwardsCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/14/2023 18:22:42'!
ERROR!

!testRun: #MarsRoverTest #test10ReceivingMultipleLeftCommandStringChangesItsDirectionMultipleTimes stamp: 'aa 5/14/2023 18:22:42'!
ERROR!

!testRun: #MarsRoverTest #test11ReceivingMultipleRightCommandStringChangesItsDirectionMultipleTimes stamp: 'aa 5/14/2023 18:22:42'!
ERROR!

!testRun: #MarsRoverTest #test12ReceivingAnInvalidCommandStopsTheExecution stamp: 'aa 5/14/2023 18:22:42'!
ERROR!

!testRun: #MarsRoverTest #test13FailsWhenPlacingTheRoverInANonMapPosition stamp: 'aa 5/14/2023 18:22:42'!
FAILURE!
!MarsRover class methodsFor: 'instance creation' stamp: 'aa 5/14/2023 18:23:20' prior: 50624917!
placeIn: aPoint facing: aDirection 
		
	(aPoint isKindOf: Point) ifFalse: [^self error: MarsRover invalidPositionError ] .
	(aDirection isKindOf: CardinalDirections) ifFalse: [^self error: MarsRover invalidOrientationError ] .
	
	^self new initializeIn: aPoint facing: aDirection ! !

norte := North new!

norte isKindOf: CardinalDirections !

North isKindOf: CardinalDirections !

North = CardinalDirections!
!MarsRover class methodsFor: 'instance creation' stamp: 'aa 5/14/2023 18:26:53' prior: 50624980!
placeIn: aPoint facing: aDirection 
		
	(aPoint isKindOf: Point) ifFalse: [^self error: MarsRover invalidPositionError ] .
	(aDirection new isKindOf: CardinalDirections) ifFalse: [^self error: MarsRover invalidOrientationError ] .
	
	^self new initializeIn: aPoint facing: aDirection ! !

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/14/2023 18:26:57'!
PASSED!

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/14/2023 18:26:57'!
PASSED!

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/14/2023 18:26:57'!
PASSED!

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/14/2023 18:26:57'!
PASSED!

!testRun: #MarsRoverTest #test05ReceivingABackwardsCommandStringMovesItsPosition stamp: 'aa 5/14/2023 18:26:57'!
PASSED!

!testRun: #MarsRoverTest #test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise stamp: 'aa 5/14/2023 18:26:57'!
PASSED!

!testRun: #MarsRoverTest #test07ReceivingARightCommandStringRotatesIt90DegreesClockwise stamp: 'aa 5/14/2023 18:26:57'!
PASSED!

!testRun: #MarsRoverTest #test08ReceivingMultipleForwardCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/14/2023 18:26:57'!
PASSED!

!testRun: #MarsRoverTest #test09ReceivingMultipleBackwardsCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/14/2023 18:26:57'!
PASSED!

!testRun: #MarsRoverTest #test10ReceivingMultipleLeftCommandStringChangesItsDirectionMultipleTimes stamp: 'aa 5/14/2023 18:26:57'!
PASSED!

!testRun: #MarsRoverTest #test11ReceivingMultipleRightCommandStringChangesItsDirectionMultipleTimes stamp: 'aa 5/14/2023 18:26:57'!
PASSED!

!testRun: #MarsRoverTest #test12ReceivingAnInvalidCommandStopsTheExecution stamp: 'aa 5/14/2023 18:26:57'!
PASSED!

!testRun: #MarsRoverTest #test13FailsWhenPlacingTheRoverInANonMapPosition stamp: 'aa 5/14/2023 18:26:57'!
FAILURE!

!testRun: #MarsRoverTest #test13FailsWhenPlacingTheRoverInANonMapPosition stamp: 'aa 5/14/2023 18:26:57'!
FAILURE!

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/14/2023 18:27:00'!
PASSED!

!testRun: #MarsRoverTest #test12ReceivingAnInvalidCommandStopsTheExecution stamp: 'aa 5/14/2023 18:27:03'!
PASSED!

!testRun: #MarsRoverTest #test13FailsWhenPlacingTheRoverInANonMapPosition stamp: 'aa 5/14/2023 18:27:04'!
FAILURE!

!testRun: #MarsRoverTest #test13FailsWhenPlacingTheRoverInANonMapPosition stamp: 'aa 5/14/2023 18:27:04'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/14/2023 18:27:17' prior: 50624834!
test13FailsWhenPlacingTheRoverInANonMapPosition

	self
		should: [MarsRover placeIn: (1,2) facing: East ]
		raise: Error 
		withExceptionDo: [ :anError |
			self assert: anError messageText = MarsRover invalidPositionError ]! !

!testRun: #MarsRoverTest #test13FailsWhenPlacingTheRoverInANonMapPosition stamp: 'aa 5/14/2023 18:28:00'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/14/2023 18:28:09' prior: 50625078!
test13FailsWhenPlacingTheRoverInANonMapPosition

	self
		should: [MarsRover placeIn: 1 facing: East ]
		raise: Error 
		withExceptionDo: [ :anError |
			self assert: anError messageText = MarsRover invalidPositionError ]! !

!testRun: #MarsRoverTest #test13FailsWhenPlacingTheRoverInANonMapPosition stamp: 'aa 5/14/2023 18:28:11'!
PASSED!

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/14/2023 18:28:11'!
PASSED!

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/14/2023 18:28:11'!
PASSED!

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/14/2023 18:28:11'!
PASSED!

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/14/2023 18:28:11'!
PASSED!

!testRun: #MarsRoverTest #test05ReceivingABackwardsCommandStringMovesItsPosition stamp: 'aa 5/14/2023 18:28:11'!
PASSED!

!testRun: #MarsRoverTest #test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise stamp: 'aa 5/14/2023 18:28:11'!
PASSED!

!testRun: #MarsRoverTest #test07ReceivingARightCommandStringRotatesIt90DegreesClockwise stamp: 'aa 5/14/2023 18:28:11'!
PASSED!

!testRun: #MarsRoverTest #test08ReceivingMultipleForwardCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/14/2023 18:28:11'!
PASSED!

!testRun: #MarsRoverTest #test09ReceivingMultipleBackwardsCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/14/2023 18:28:11'!
PASSED!

!testRun: #MarsRoverTest #test10ReceivingMultipleLeftCommandStringChangesItsDirectionMultipleTimes stamp: 'aa 5/14/2023 18:28:11'!
PASSED!

!testRun: #MarsRoverTest #test11ReceivingMultipleRightCommandStringChangesItsDirectionMultipleTimes stamp: 'aa 5/14/2023 18:28:11'!
PASSED!

!testRun: #MarsRoverTest #test12ReceivingAnInvalidCommandStopsTheExecution stamp: 'aa 5/14/2023 18:28:11'!
PASSED!

!testRun: #MarsRoverTest #test13FailsWhenPlacingTheRoverInANonMapPosition stamp: 'aa 5/14/2023 18:28:11'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/14/2023 18:28:54'!
test13FailsWhenPlacingTheRoverInANonCardinalPointDirection

	self
		should: [MarsRover placeIn: 1@1 facing: #Deegres90 ]
		raise: Error 
		withExceptionDo: [ :anError |
			self assert: anError messageText = MarsRover invalidPositionError ]! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/14/2023 18:29:02' prior: 50625156!
test13FailsWhenPlacingTheRoverInANonCardinalPointDirection

	self
		should: [MarsRover placeIn: 1@1 facing: #Deegres90 ]
		raise: Error 
		withExceptionDo: [ :anError |
			self assert: anError messageText = MarsRover invalidOrientationError ]! !

!testRun: #MarsRoverTest #test13FailsWhenPlacingTheRoverInANonCardinalPointDirection stamp: 'aa 5/14/2023 18:29:02'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/14/2023 18:29:12' prior: 50625167!
test13FailsWhenPlacingTheRoverInANonCardinalPointDirection

	self
		should: [MarsRover placeIn: 1@1 facing: 90 ]
		raise: Error 
		withExceptionDo: [ :anError |
			self assert: anError messageText = MarsRover invalidOrientationError ]! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/14/2023 18:29:17'!
test14FailsWhenPlacingTheRoverInANonCardinalPointDirection

	self
		should: [MarsRover placeIn: 1@1 facing: 90 ]
		raise: Error 
		withExceptionDo: [ :anError |
			self assert: anError messageText = MarsRover invalidOrientationError ]! !

!methodRemoval: MarsRoverTest #test13FailsWhenPlacingTheRoverInANonCardinalPointDirection stamp: 'aa 5/14/2023 18:29:20'!
test13FailsWhenPlacingTheRoverInANonCardinalPointDirection

	self
		should: [MarsRover placeIn: 1@1 facing: 90 ]
		raise: Error 
		withExceptionDo: [ :anError |
			self assert: anError messageText = MarsRover invalidOrientationError ]!

!testRun: #MarsRoverTest #test14FailsWhenPlacingTheRoverInANonCardinalPointDirection stamp: 'aa 5/14/2023 18:29:23'!
FAILURE!

!testRun: #MarsRoverTest #test14FailsWhenPlacingTheRoverInANonCardinalPointDirection stamp: 'aa 5/14/2023 18:29:23'!
FAILURE!

!testRun: #MarsRoverTest #test13FailsWhenPlacingTheRoverInANonMapPosition stamp: 'aa 5/14/2023 18:29:25'!
PASSED!

!testRun: #MarsRoverTest #test14FailsWhenPlacingTheRoverInANonCardinalPointDirection stamp: 'aa 5/14/2023 18:29:39'!
FAILURE!
!MarsRover methodsFor: 'initialization' stamp: 'aa 5/14/2023 18:32:08' prior: 50624427!
initializeIn: aPosition facing: aDirection 

	position := aPosition .
	direction := aDirection .
	self populateCommandsDictionary! !
!MarsRover class methodsFor: 'instance creation' stamp: 'aa 5/14/2023 18:32:14' prior: 50624996!
placeIn: aPoint facing: aDirection 
		
	(aPoint isKindOf: Point) ifFalse: [^self error: MarsRover invalidPositionError ] .
	(aDirection isKindOf: CardinalDirections) ifFalse: [^self error: MarsRover invalidOrientationError ] .
	
	^self new initializeIn: aPoint facing: aDirection ! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/14/2023 18:32:26' prior: 50605035!
test01CreatingARoverPlacesItInAPosition

	self assert: 1@1 equals: (MarsRover placeIn: 1@1 facing: North new) position! !

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/14/2023 18:32:28'!
PASSED!

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/14/2023 18:32:29'!
ERROR!

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/14/2023 18:32:29'!
ERROR!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/14/2023 18:32:37' prior: 50605281!
test02CreatingARoverMakesItFaceADirection

	self assert: North equals: ((MarsRover placeIn: 1@1 facing: North new) direction) class! !

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/14/2023 18:32:39'!
PASSED!

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/14/2023 18:32:39'!
PASSED!

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/14/2023 18:32:39'!
PASSED!

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/14/2023 18:32:39'!
ERROR!

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/14/2023 18:32:39'!
ERROR!

!testRun: #MarsRoverTest #test05ReceivingABackwardsCommandStringMovesItsPosition stamp: 'aa 5/14/2023 18:32:39'!
ERROR!

!testRun: #MarsRoverTest #test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise stamp: 'aa 5/14/2023 18:32:39'!
ERROR!

!testRun: #MarsRoverTest #test07ReceivingARightCommandStringRotatesIt90DegreesClockwise stamp: 'aa 5/14/2023 18:32:39'!
ERROR!

!testRun: #MarsRoverTest #test08ReceivingMultipleForwardCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/14/2023 18:32:39'!
ERROR!

!testRun: #MarsRoverTest #test09ReceivingMultipleBackwardsCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/14/2023 18:32:39'!
ERROR!

!testRun: #MarsRoverTest #test10ReceivingMultipleLeftCommandStringChangesItsDirectionMultipleTimes stamp: 'aa 5/14/2023 18:32:39'!
ERROR!

!testRun: #MarsRoverTest #test11ReceivingMultipleRightCommandStringChangesItsDirectionMultipleTimes stamp: 'aa 5/14/2023 18:32:39'!
ERROR!

!testRun: #MarsRoverTest #test12ReceivingAnInvalidCommandStopsTheExecution stamp: 'aa 5/14/2023 18:32:39'!
ERROR!

!testRun: #MarsRoverTest #test13FailsWhenPlacingTheRoverInANonMapPosition stamp: 'aa 5/14/2023 18:32:39'!
PASSED!

!testRun: #MarsRoverTest #test14FailsWhenPlacingTheRoverInANonCardinalPointDirection stamp: 'aa 5/14/2023 18:32:39'!
PASSED!

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/14/2023 18:32:41'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/14/2023 18:32:45' prior: 50605299!
test03ReceivingAnEmptyCommandStringDoesNothing

	| rover |
	rover := MarsRover placeIn: 1@1 facing: North new .
	rover processCommands: '' .

	self assert: 1@1 equals: rover position .
	self assert: North equals: rover direction class! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/14/2023 18:32:48' prior: 50605340!
test04ReceivingAForwardCommandStringMovesItsPosition

	| rover |
	rover := MarsRover placeIn: 1@1 facing: South new .
	rover processCommands: 'f' .

	self assert: 1@0 equals: rover position .
	self assert: South equals: rover direction class! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/14/2023 18:32:50' prior: 50605351!
test05ReceivingABackwardsCommandStringMovesItsPosition

	| rover |
	rover := MarsRover placeIn: 1@1 facing: East new .
	rover processCommands: 'b' .

	self assert: 0@1 equals: rover position .
	self assert: East equals: rover direction class! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/14/2023 18:32:52' prior: 50605362!
test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise

	| rover |
	rover := MarsRover placeIn: 1@1 facing: East new .
	rover processCommands: 'l' .

	self assert: 1@1 equals: rover position .
	self assert: North equals: rover direction class! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/14/2023 18:32:53' prior: 50605373!
test07ReceivingARightCommandStringRotatesIt90DegreesClockwise

	| rover |
	rover := MarsRover placeIn: 1@1 facing: South new .
	rover processCommands: 'r' .

	self assert: 1@1 equals: rover position .
	self assert: West equals: rover direction class! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/14/2023 18:32:55' prior: 50605635!
test08ReceivingMultipleForwardCommandStringMovesItsPositionMultipleTimes

	| rover |
	rover := MarsRover placeIn: 1@1 facing: East new .
	rover processCommands: 'ffff' .

	self assert: 5@1 equals: rover position .
	self assert: East equals: rover direction class! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/14/2023 18:33:00' prior: 50605709!
test09ReceivingMultipleBackwardsCommandStringMovesItsPositionMultipleTimes

	| rover |
	rover := MarsRover placeIn: 1@1 facing: North new .
	rover processCommands: 'bbbbbb' .

	self assert: 1@-5 equals: rover position .
	self assert: North equals: rover direction class! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/14/2023 18:33:03' prior: 50605941!
test10ReceivingMultipleLeftCommandStringChangesItsDirectionMultipleTimes

	| rover |
	rover := MarsRover placeIn: 1@1 facing: North new .
	rover processCommands: 'lllll' .

	self assert: 1@1 equals: rover position .
	self assert: West equals: rover direction class! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/14/2023 18:33:05' prior: 50606059!
test11ReceivingMultipleRightCommandStringChangesItsDirectionMultipleTimes

	| rover |
	rover := MarsRover placeIn: 1@1 facing: East new .
	rover processCommands: 'rrrrrrrr' .

	self assert: 1@1 equals: rover position .
	self assert: East equals: rover direction class! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/14/2023 18:33:07' prior: 50623814!
test12ReceivingAnInvalidCommandStopsTheExecution

	| rover |
	rover := MarsRover placeIn: 1@1 facing: East new .

	self
		should: [ rover processCommands: 'rtrr' ]
		raise: Error 
		withExceptionDo: [ :anError |
			self assert: anError messageText = MarsRover invalidCommandError ]! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/14/2023 18:33:09' prior: 50625092!
test13FailsWhenPlacingTheRoverInANonMapPosition

	self
		should: [MarsRover placeIn: 1 facing: East new ]
		raise: Error 
		withExceptionDo: [ :anError |
			self assert: anError messageText = MarsRover invalidPositionError ]! !

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/14/2023 18:33:16'!
PASSED!

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/14/2023 18:33:16'!
PASSED!

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/14/2023 18:33:16'!
PASSED!

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/14/2023 18:33:16'!
PASSED!

!testRun: #MarsRoverTest #test05ReceivingABackwardsCommandStringMovesItsPosition stamp: 'aa 5/14/2023 18:33:16'!
PASSED!

!testRun: #MarsRoverTest #test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise stamp: 'aa 5/14/2023 18:33:16'!
PASSED!

!testRun: #MarsRoverTest #test07ReceivingARightCommandStringRotatesIt90DegreesClockwise stamp: 'aa 5/14/2023 18:33:16'!
PASSED!

!testRun: #MarsRoverTest #test08ReceivingMultipleForwardCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/14/2023 18:33:16'!
PASSED!

!testRun: #MarsRoverTest #test09ReceivingMultipleBackwardsCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/14/2023 18:33:16'!
PASSED!

!testRun: #MarsRoverTest #test10ReceivingMultipleLeftCommandStringChangesItsDirectionMultipleTimes stamp: 'aa 5/14/2023 18:33:16'!
PASSED!

!testRun: #MarsRoverTest #test11ReceivingMultipleRightCommandStringChangesItsDirectionMultipleTimes stamp: 'aa 5/14/2023 18:33:16'!
PASSED!

!testRun: #MarsRoverTest #test12ReceivingAnInvalidCommandStopsTheExecution stamp: 'aa 5/14/2023 18:33:16'!
PASSED!

!testRun: #MarsRoverTest #test13FailsWhenPlacingTheRoverInANonMapPosition stamp: 'aa 5/14/2023 18:33:16'!
PASSED!

!testRun: #MarsRoverTest #test14FailsWhenPlacingTheRoverInANonCardinalPointDirection stamp: 'aa 5/14/2023 18:33:16'!
PASSED!

----QUIT----(14 May 2023 18:34:15) CuisUniversity-5706.image priorSource: 9378766!

----STARTUP---- (15 May 2023 10:39:08) as C:\Users\Santiago\Desktop\UBA\Inge1\Ej-5\windows64\CuisUniversity-5706.image!


----End fileIn of C:\Users\Santiago\Desktop\UBA\Inge1\Ej-5\windows64\MarsRover.st----!

!methodRemoval: MarsRoverTest #test13FailsWhenPlacingTheRoverInANonMapPosition stamp: 'aa 5/15/2023 10:40:01'!
test13FailsWhenPlacingTheRoverInANonMapPosition

	self
		should: [MarsRover placeIn: 1 facing: East new ]
		raise: Error 
		withExceptionDo: [ :anError |
			self assert: anError messageText = MarsRover invalidPositionError ]!

!methodRemoval: MarsRoverTest #test14FailsWhenPlacingTheRoverInANonCardinalPointDirection stamp: 'aa 5/15/2023 10:40:05'!
test14FailsWhenPlacingTheRoverInANonCardinalPointDirection

	self
		should: [MarsRover placeIn: 1@1 facing: 90 ]
		raise: Error 
		withExceptionDo: [ :anError |
			self assert: anError messageText = MarsRover invalidOrientationError ]!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/15/2023 10:40:15'!
test13ReceivingAnInvalidCommandStopsTheExecution

	| rover |
	rover := MarsRover placeIn: 1@1 facing: East new .

	self
		should: [ rover processCommands: 'rtrr' ]
		raise: Error 
		withExceptionDo: [ :anError |
			self assert: anError messageText = MarsRover invalidCommandError ]! !

!methodRemoval: MarsRoverTest #test12ReceivingAnInvalidCommandStopsTheExecution stamp: 'aa 5/15/2023 10:40:15'!
test12ReceivingAnInvalidCommandStopsTheExecution

	| rover |
	rover := MarsRover placeIn: 1@1 facing: East new .

	self
		should: [ rover processCommands: 'rtrr' ]
		raise: Error 
		withExceptionDo: [ :anError |
			self assert: anError messageText = MarsRover invalidCommandError ]!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'aa 5/15/2023 10:40:19'!
test12ReceivingShuffledCommandStringChangesDirectionProperly

	| rover |
	rover := MarsRover placeIn: 1@1 facing: North new .
	rover processCommands: 'lrfbffrfbrlbbbll' .
	
	"en este test pusimos varios comandos para probar el correcto funcionamiento en un caso general, prestar atención a que hacer fb o bf cancela el movimiento asi como hacer lr o rl   cancela el giro"
	
	self assert: -2@3 equals: rover position .
	self assert: West equals: rover direction class! !

!methodRemoval: MarsRoverTest #test13ReceivingShuffledCommandStringChangesDirectionProperly stamp: 'aa 5/15/2023 10:40:19'!
test13ReceivingShuffledCommandStringChangesDirectionProperly

	| rover |
	rover := MarsRover placeIn: 1@1 facing: North new .
	rover processCommands: 'lrfbffrfbrlbbbll' .
	
	"en este test pusimos varios comandos para probar el correcto funcionamiento en un caso general, prestar atención a que hacer fb o bf cancela el movimiento asi como hacer lr o rl   cancela el giro"
	
	self assert: -2@3 equals: rover position .
	self assert: West equals: rover direction class!

!testRun: #MarsRoverTest #test12ReceivingShuffledCommandStringChangesDirectionProperly stamp: 'aa 5/15/2023 10:41:15'!
PASSED!

!testRun: #MarsRoverTest #test01CreatingARoverPlacesItInAPosition stamp: 'aa 5/15/2023 10:41:15'!
PASSED!

!testRun: #MarsRoverTest #test02CreatingARoverMakesItFaceADirection stamp: 'aa 5/15/2023 10:41:15'!
PASSED!

!testRun: #MarsRoverTest #test03ReceivingAnEmptyCommandStringDoesNothing stamp: 'aa 5/15/2023 10:41:15'!
PASSED!

!testRun: #MarsRoverTest #test04ReceivingAForwardCommandStringMovesItsPosition stamp: 'aa 5/15/2023 10:41:15'!
PASSED!

!testRun: #MarsRoverTest #test05ReceivingABackwardsCommandStringMovesItsPosition stamp: 'aa 5/15/2023 10:41:15'!
PASSED!

!testRun: #MarsRoverTest #test06ReceivingALeftCommandStringRotatesIt90DegreesAnticlockwise stamp: 'aa 5/15/2023 10:41:15'!
PASSED!

!testRun: #MarsRoverTest #test07ReceivingARightCommandStringRotatesIt90DegreesClockwise stamp: 'aa 5/15/2023 10:41:15'!
PASSED!

!testRun: #MarsRoverTest #test08ReceivingMultipleForwardCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/15/2023 10:41:15'!
PASSED!

!testRun: #MarsRoverTest #test09ReceivingMultipleBackwardsCommandStringMovesItsPositionMultipleTimes stamp: 'aa 5/15/2023 10:41:15'!
PASSED!

!testRun: #MarsRoverTest #test10ReceivingMultipleLeftCommandStringChangesItsDirectionMultipleTimes stamp: 'aa 5/15/2023 10:41:15'!
PASSED!

!testRun: #MarsRoverTest #test11ReceivingMultipleRightCommandStringChangesItsDirectionMultipleTimes stamp: 'aa 5/15/2023 10:41:15'!
PASSED!

!testRun: #MarsRoverTest #test12ReceivingShuffledCommandStringChangesDirectionProperly stamp: 'aa 5/15/2023 10:41:15'!
PASSED!

!testRun: #MarsRoverTest #test13ReceivingAnInvalidCommandStopsTheExecution stamp: 'aa 5/15/2023 10:41:15'!
PASSED!

!testRun: #MarsRoverTest #test14FailsWhenPlacingTheRoverInANonMapPosition stamp: 'aa 5/15/2023 10:41:15'!
PASSED!

!testRun: #MarsRoverTest #test15FailsWhenPlacingTheRoverInANonCardinalPointDirection stamp: 'aa 5/15/2023 10:41:15'!
PASSED!

----QUIT----(15 May 2023 10:47:15) CuisUniversity-5706.image priorSource: 9403676!